Full history from the git log
-----------------------------

2019-01-09  Reini Urban  <rurban@cpan.org>

	test-data/2007: add missing DXF files
	XRECORD and DICTIONARY circle.dxf is wrong with ODA and our decoder.
	Check against acad versions

	dxf: skip XRECORD xdata 80-90
	These are most likely decode errors, and throw dxfin errors.
	But the circle_2007 XRECORD's all look wrong.

	dxf: _HATCH_gradientfill, fix dxf 91=>93 WIP
	num_polypaths is 93
	add missing str_dat to DWG_ENTITY decls.

2019-01-07  Reini Urban  <rurban@cpan.org>

	python: probe also without swig
	many checks need python.

	alive.test: dwggrep -c now returns 21
	The block_header iterator get_next_owned_entity finds now more.

	fixup get_next_owned_entity
	check the actual entity owner.
	it did fail with some r14-2000 attribs, belonging to 2 separate
	block headers

2019-01-07  Reini Urban  <rurban@cpan.org>

	dxf: skip *Model_Space BLOCK entities
	check ptr and index;
	improves 7cad11cc68887b, the ptr check is sometimes not good enough.

	Skip all block entities which are owned by *Model_Space.
	Some newer entities (UNDERLAY, MLEADER) are under some other blocks
	(e.g. pspace) but owned by mspace.

2019-01-07  Reini Urban  <rurban@cpan.org>

	decode: apply dwg_validate_POLYLINE/INSERT
	after having read the SEQEND, to fill in a missing
	owner->seqend handle.
	Fixes the r2010+ SEQEND errors.

2019-01-05  Reini Urban  <rurban@cpan.org>

	move dxf_is_sorted_POLYLINE to decode
	as dwg_validate_POLYLINE(), yet unused. Needs to be called after the last
	POLYLINE entity was read, which is not clear.

2019-01-05  Reini Urban  <rurban@cpan.org>

	dxf: skip *Model_Space UNDERLAY entities
	The *Model_Space BLOCK contains UNDERLAY's, but they
	only appear in the ENTITIES section, not as BLOCK entity.
	Ditto for all other *Model_Space entities.

	Error with INVALIDDWG when the BLOCK_HEADER contains no BLOCK entity.

2019-01-05  Reini Urban  <rurban@cpan.org>

	dxf: remove is_sorted, always process with subentities
	This logic was too fragile, esp. vs BLOCKS

	api: add dwg_obj_is_subentity

2019-01-05  Reini Urban  <rurban@cpan.org>

	api: rename get_*_owned_object to _entity
	get_next_owned_object only returned the next block entity,
	not any object associated and located in this block, and neither
	any VERTEX/ATTRIB.
	esp. since r2004+ with its BLOCK_HEADER.entities array.
	This skips objects and subentities (ATTRIB, VERTEX).

	Add API docs for these

2019-01-05  Reini Urban  <rurban@cpan.org>

	dxf: process VERTEX r2004+
	get_next_owned_object returns the next main entity, no VERTEX.
	set is_sorted=0 then, forcing dxf_process_* for subentities then.

	api: add get_last_owned_block()
	to return the ENDBLK for a BLOCK_HEADER.
	use it in dxf

	dxf: split BLOCKS and ENTITIES (#88) WIP
	ENTITIES only if owned by MSPACE, all other as BLOCK members.
	BLOCKS contains all pspace entities, and all blocks, but no objects.
	OBJECTS contains all objects but BLOCK_HEADER and *_CONTROL (TABLEs)

2019-01-04  Reini Urban  <rurban@cpan.org>

	--disable-bindings (#86)

	dxf.test: clear *dxf.log

	DICTIONARY: fix hard_owner DXF 350/360
	and emit it for DXF

	dxf: fix XRECORD xdata, no +1000
	XRECORD xdata has normal dxftypes

2019-01-03  Reini Urban  <rurban@cpan.org>

	dxf: BLOCK_NAME via cvt_blockname for pre-R13 names
	$MODEL_SPACE <=> *Model_Space

2019-01-02  Reini Urban  <rurban@cpan.org>

	dxf: fix EED/xdata dxfcode + 1000

2019-01-02  Reini Urban  <rurban@cpan.org>

	VALUE_HANDLE: harmonize to 4 args
	for the name logging.

	Caused by the effort to emit a 340 0 DXF pair
	for a BLOCK_RECORD layout_handle on NULL.

2018-12-31  Reini Urban  <rurban@cpan.org>

	dxf: skip more VERTEX_2D defaults

2018-12-30  Reini Urban  <rurban@cpan.org>

	VPORT: revert shade_plot_handle back to 361 sun_handle
	several DXFs have the sun there

2018-12-28  Reini Urban  <rurban@cpan.org>

	free: protect empty TABLE ent with --enable-debug
	and HANDLE_VECTOR overflow.
	Actually set an invalid size field to 0

	debug: more missing api DECLs
	with --enable-debug classes

	debug: more missing SUB_FIELDs
	with --enable-debug classes

	dwg_dim_blockname: treat DICTIONARY as LAYER
	some DWGs: 2013/gh55-ltype.dwg

	dxf: protect wrong HATCH.num_path
	and cast some NULL ptrs, and wrong formats

	dxf: more codepages
	add ANSI_1253, ANSI_1254, ANSI_936, ANSI_949

2018-12-27  Reini Urban  <rurban@cpan.org>

	multiple definition of alloca
	only complaint on freebsd

	dxf: cquote dxf_fixup_string
	for newlines and such (text 1)
	different quoting rules than json

	dxf: fix VERTEX sub classing
	tested ok

	dxf: fix 3DSOLID, BODY subclass names

	dxf: fix _3DSOLID,_3DFACE dxfname
	special case it in DXF and decoder

	api: add DIMENSION.flag from flag1 and flag2
	calculate the DXF value 70 (some bits from flag1 and 2)
	skip empty DXF user_text (at least ASCII for now)

	dxf: support DIMSTYLE 3

	dxf: add DIMSTYLE 3, skip 52
	move 3 to COMMON (before the subclass)
	skip DXF 52 ext_line_rotation: invalid

	improve dwg_dim_blockname
	sometimes a LAYER is mixed in

	dxf: add FIELD_BINARY for picture 310

	dxf: add HATCH.boundary_handles 330

	out_dxfb: sync with out_dxf

	dxf: HATCH.elevation as pt

2018-12-26  Reini Urban  <rurban@cpan.org>

	dxf: style name 7 before the subclass

	examples: add alldwg.inc to dist
	to avoid regen-unknown on make distcheck, and
	to ship it with the tar

	dxf: fixup empty POLYLINE.seqend with +1 obj
	don't try the other variant then, also to avoid a leak.

	dxf: write empty HANDLE_NAME
	otherwise DXFIN complains. e g $DIMBLK

2018-12-26  Reini Urban  <rurban@cpan.org>

	dxf: destructive i++ for the loop
	the unsorted process handlers need to advance the loop
	variable, otherwise we process some entities them twice.

	Closes #83

2018-12-26  Reini Urban  <rurban@cpan.org>

	dxf: sort INSERT-ATTRIB-SEQEND (#83)
	use one global/static is_sorted variable, for both
	POLYLINE and INSERT, both ended by SEQEND.

	add type and NULL checks in the dxf_process_##token() handler.

	reset is_sorted to the default 1.

2018-12-26  Reini Urban  <rurban@cpan.org>

	dxf.test: extend SEQEND check also to INSERT-ATTRIB (#83)
	which fails on example_20*

	cirrus: only allow master + smoke/*

	cirrus: --disable-python for the xmlsuite/check.py

	fixup empty SEQENDs in dxf is_sorted_POLYLINE
	in the decoder it is too early, so do it in one of the outputters.
	the empty SEQEND is an artefact of the previous decoder shiftup,
	the real fix would be a correct handlestream_offset (#85)

	decode: check_POLYLINE_handles
	check for if vertex[0] is the layer and shift the vertices then.
	since we cannot look forward and resolve unread objects
	its not yet good enough. we really need to check them after the seqend
	or last vertex. or later in out_dxf in the is_sorted_POLYLINE check.

	decode: log relative handle stream offset
	it is still wrong. see #85

	indent common_entity_handle_data.spec

	dxf: protect wrong FIELD_HANDLE_NAME table
	when a handle points to a wrong object

2018-12-25  Reini Urban  <rurban@cpan.org>

	POLYLINE_3D: rename flag2 to curvetype (75)

2018-12-25  Reini Urban  <rurban@cpan.org>

	dxf: WIP is_sorted_POLYLINE shortcut (#83)
	COMMON_ENTITY_POLYLINE: ensure that the common POLYLINE_*
	fields are shared with all 4 types.

	Some vertex[] handles are even worse than a wrong SEQEND,
	check when the first vertex[0] is corrupt and ignore it then.

	enable loglevel LOG in out_dxf, mainly to warn about this
	wrong POLYLINE.vertex[0] handle %lX < %lX

2018-12-25  Reini Urban  <rurban@cpan.org>

	dxf: POLYLINE - SEQEND - VERTEX (#83)
	Some dwg's (r2007, r2018) have the SEQEND following the POLYLINE.
	Iterate over the vertex handles, not over the object id's.

	shellcheck json.test
	and regen-unknowns

2018-12-25  Reini Urban  <rurban@cpan.org>

	bindings: add missing Object APIs
	parallel to the Entity getters and converters,
	recently added to dwg_api.

	remove some DEBUG_CLASS function from the public api (getall, converter)

2018-12-25  Reini Urban  <rurban@cpan.org>

	cirrus: re-enable python, install py36-libxml2 instead

	suffix.inc: _XOPEN_SOURCE 700
	for snprintf on FreeBSD.
	Sets __ISO_C_VISIBLE 1999

	bindings: honor --disable-python

	m4: fix swig and python probes for FreeBSD
	swig defaults to swig3.0 on FreeBSD pkg
	python needs proper LDFLAGS (-lpthread) and SYSLIBS (-lm)
	use $SWIG in Makefile

	dxf.test: bash => sh
	no bashisms, checked with shellcheck

	.cirrus: install bash, --disable-python
	bash needed for dxf.test
	py36-lxml (the libxml2 binding) needed for xmlsuite,
	but the xmlsuite/check.py is failing with python3.6
	with --disable-python only distcheck is failing on binding/python

2018-12-24  Reini Urban  <rurban@cpan.org>

	fix dxf.test for FreeBSD
	where bash is in /usr/local/bin

2018-12-23  Reini Urban  <rurban@cpan.org>

	dxf: emit 62 256
	or 420 rgb if index not 256. See MLINESTYLE

	dxf: reorder MLINESTYLE 3 <-> 70 fields
	it is apparently critical

	dxf: some classes are builtin since r2004+
	ACDBPLACEHOLDER and LAYOUT do not appear in CLASSES anymore,
	but it depends which version exports it.

	dxf.test: add check_acdb_dxfname

	decode: set proper dxfname
	from classes.inc STABLE_CLASS_DXF (also for the importers),
	and from dwg_add_##token (for the API).
	Fixes ACDBDICTIONARYWDFLT DXF object and simplifies out_dxf.

	dxf: use ACDBDICTIONARYWDFLT
	no dxfname set?

	add programs/dxf.test
	a few minor failures, but was important to catch missing layers.
	it doesn't check diff error codes yet.

	dxf: more missing common_entity_handle_data
	r2004+: read layer, ltype (was missing)
	skip dxf color 62 256
	put dxf 330 ownerhandle after reactors
	print empty layer (wrong handle stream e g POLYFACE_MESH) as 0
	handle other .spec fields if undefined (e.g. VALUE_HANDLE in
	  common_entity_handle_data)

	dxf: entity.ownerhandle 330 after ACAD_REACTORS

	test-dxf.sh: no gmake

	log: add [H ] type to handle logs

	api: rename _ent->entity_mode
	to entmode. (as in the ODA docs)
	add proper pspace owner handling in DXF
	fix common_entity_handle_data encoding of ownerhandle:
	  skip if implied by entmode.
	cur_owner tracking is not needed anymore. entmode is enough

	api: replace ENTITY.subentity by ownerhandle 330
	this handle really is the ownerhandle, not the subentity.
	it only appears in subentities (VERTEX, ATT*) pointing to its
	owner.
	Now we don't need the cur_owner/old_owner anymore.

	make regen-unknown
	now with ODA generated 2000_dxf.log counterpairs

	add PolyLine2D .dxg/.dxf pairs
	for VERTEX_2D and VERTEX_3D samples (which crash on DXFIN import)

	decode VALUE_HANDLE_N: [vcount]: NULL HANDLE
	itemhandles[vcount]: NULL HANDLE(2) [0]
	vs
	itemhandles[vcount][15]: 2 HANDLE(2.1.66) absolute:66 [0]

2018-12-22  Reini Urban  <rurban@cpan.org>

	dxf: add dwg_dim_blockname (#81)
	need to out_dxf more blocks: anon. *Dn for DIMENSION.
	Get the name from the BLOCK_HEADER - BLOCK.name, following
	the DIMENSION.

	Now simply dump all BLOCK and BLOCK_RECORD's.

2018-12-22  Reini Urban  <rurban@cpan.org>

	dxf: fixup AcDbBlockTableRecord name (#81)
	for ccd50fd121544c0c3a638b1d5c5512083bdf3df3

	dxf: Error in BLOCK_RECORD Table
	Did not receive AcDbBlockTableRecord name

	dxf: Did not receive AcDbViewportTableRecord flags
	dxfin error. the flag 70 is not optional with COMMON_TABLE_FLAGS

	api: rename parenthandle to ownerhandle (#80)

2018-12-22  Reini Urban  <rurban@cpan.org>

	change _ent->owner to ownerhandle
	entities gets realloced, and thus their pointers invalidated.
	we need to store the BITCODE_H ref instead.
	valgrind: Invalid read of size 8, dwg_dxf_ENDBLK, dxf_blocks_write.

	add reverse dwg_find_objectref lookup: linear search, only done for
	entities with subentities to find the ref for the current object

2018-12-22  Reini Urban  <rurban@cpan.org>

	dwg_dxf_STYLE: fix TU memleak
	free temp. bit_convert_TU result

	dxf: fix dxf_cvt_tablerecord memleak
	free temp. bit_convert_TU result

	decode: use after free
	when dwg_decode_UNKNOWN_ENT failed and freed dat.

	dwg2dxf: call free within valgrind
	fixes some articial memory leaks

	dwg_add_TOKEN: potential obj->tio.object mem leak

	dxf_tables_write: fix potential NULL deref
	very unlikely, but still

	dxf_free_pair: fix NULL deref

	decode: dead increment
	error from obj_string_stream was ignored

	decode: dead assignment

2018-12-21  Reini Urban  <rurban@cpan.org>

	decode HANDSEED: protect from empty handle
	Fixes most dxf roundtrips, where HANDSEED turns up empty.
	Only a few DXFs break now on dxf-roundtrip's

	dxf: use proper AcDbBlockTableRecord name (#81)
	Not the BLOCK_HEADER.name (which is only *Paper_Space)
	but the name of its BLOCK entity (which is *Paper_Space0).
	This fixed most #81 dxfin errors, but not all.

	dxf: all BLOCK_HEADER records
	analog to the pspace BLOCK objects, some are missing.
	Note that the basic dxfs survive now a teigha roundtrip.

	dxf: no r2004+ color 62 index 0
	TODO: lookup the index for rgb color (e.g. 7 for 0xc3000007)
	index is invalid

	dxf: add dxf-roundtrip.sh
	via TeighaFileConverter.
	dwg2dxf for a DWG, convert it back to a DWG via Teigha
	to see if the DXF is somewhat correct, and then read the
	converted DWG. Create Teigha error logs as .dwg.err

	dxf: rename dxf_example to dxf-allcvt
	we are mass-converting all DWGs to DXFs, and then
	use a LSP to DXFIN all those generated DXFs.

	dxf: more missing PSPACE blocks (#81)
	The first attempt 975c8f3deb was unsuccessful.
	There may be unconnected pspace blocks not referenced
	by the BLOCK_CONTROL, such as pspace blocks from a pspace
	LAYOUT, so for simplicity just scan all BLOCK_HEADER's for
	a pspace block.

2018-12-20  Reini Urban  <rurban@cpan.org>

	dxf: rename new ent->parent to ent->owner (#82)
	its confusing both ways. the corresponding object ptr is called
	parenthandle, but the obj->parent is something else: inheritance.

	officially we have hard and soft owners, owning the reference,
	for liveness on deletion.

	in the end it would be just too confusing mixing up the _obj->parent and
	obj->parent with _ent->parent. maybe rename _obj->parenthandle to ownerhandle
	also.

2018-12-20  Reini Urban  <rurban@cpan.org>

	dxf: Support 330 ent->parent->handle (#82)
	which is not always the MSPACE record.
	On subentities (VERTEX, ...) it is the parent.

2018-12-19  Reini Urban  <rurban@cpan.org>

	dxf: add missing PSPACE blocks (#81)
	also iterate over the block_headers array of the
	first BLOCK_CONTROL, which are usually PSPACE blocks.

	api: rename DIMENSION_ORDINATE.ucsorigin_pt to def.pt
	move def_pt to DIMENSION_COMMON, add blockname field

2018-12-19  Reini Urban  <rurban@cpan.org>

	fix bit_convert_TU for >U+800 (#80)
	wrong UCS-2 to UTF-8 converter:
	fix the first byte of a 2 and 3-byte sequences

	only found out with chinese drawings

2018-12-19  Reini Urban  <rurban@cpan.org>

	dxf: more POLYLINE_2D,VERTEX_2D defaults
	default values are left out in DXF

	dxf: more common_entity_data defaults
	default values are left out in DXF

	dxf: more POLYLINE_2D work WIP
	extrusion is a vector on DXF.
	BE can be skipped on DXF if default.
	But acad still crashes on DXFIN (2DVertex)

	make regen-swig-patch

2018-12-19  Reini Urban  <rurban@cpan.org>

	add dxf_cvt_lweight, rename linewidth to linewt (#79)
	The DXF output of CELWEIGHT/linewt needs to be decoded to
	some signed int, the 100th of a mm, and 3 special default values
	-1 .. -3 for dxf. (BYLAYER, BYBLOCK, BYLWDEFAULT)
	This fixes DXF import with lineweights.

	Rename the API to linewt for consistency.

2018-12-18  Reini Urban  <rurban@cpan.org>

	dwg_decode_handleref: obj NULL deref
	Empty obj argument for code >= 6

	suffix: Argument with 'nonnull' attribute passed null
	empty filename

	dwgread: Argument with 'nonnull' attribute passed null
	protect against empty outfile (only a theoretical getopt problem)

	read_R2004_section_info: NULL deref
	Array access (via field 'sections') results in a null pointer dereference

	in_dxf: Argument with 'nonnull' attribute passed null
	protect pair

	clang-analysis: Allocator sizeof operand mismatch
	Result of 'calloc' is converted to a pointer of type 'unsigned char', which
	is incompatible with sizeof operand type 'char'.

2018-12-17  Reini Urban  <rurban@cpan.org>

	json: fix wcquote format tmpl %s => %ls

	dwgwrite: fix wrong infile check (#77)
	Thanks to @shlyakpavel

	fix dwggrep NULL deref (#77)
	Thanks to @shlyakpavel

	fix NULL deref (#77)
	added recently. Thanks to @shlyakpavel

2018-12-17  Reini Urban  <rurban@cpan.org>

	json: add SUB_FIELD, REPEAT_BLOCK. fix LEADER
	Need to separate the parent[i] from the struct field.
	arrays esp. in json should not print field[rcount1]: value, just
	an array of values. With REPEAT an array of structs.

	Also set a few more missing parents,
	and fix LEADER subelements: allow multiple

2018-12-17  Reini Urban  <rurban@cpan.org>

	json: add HANDLES object map
	But not the relative offset, just the absolute offset.
	We don't yet store the DWG relative offset.

	json: add preview, handle, owner, dxfname
	Add some more missing fields

	json: skip duplicate BLOCK.name
	FIELD_T (name, 2) already prints the name
	skip the duplicate dxf group 3 with the name

	doc: enhance json docs

2018-12-16  Reini Urban  <rurban@cpan.org>

	silence gcc -Wlogical-op
	&& len => && len > 0
	warning: logical ‘and’ applied to non-boolean constant

	api: rename TABLE.entry_name field to name
	Closes #76

2018-12-16  Reini Urban  <rurban@cpan.org>

	json: 2007 text fixes
	disable wrong color.name and bookname fields. They are all wrong.
	r14 might have NULL reactors.

	make check passes now

2018-12-16  Reini Urban  <rurban@cpan.org>

	json: probe for jq, add tests

2018-12-15  Reini Urban  <rurban@cpan.org>

	json: more DWG like structure
	Rename ENTITIES to OBJECTS,
	moved preview before header (vars).
	TODO: FILEHEADER sections, object map.

	See #76

2018-12-14  Reini Urban  <rurban@cpan.org>

	fix 2 test/*/ole2frame types
	-Wsign-compare (detected only on cygwin)

2018-12-14  Reini Urban  <rurban@cpan.org>

	json: final fixes
	add more cquote rules, esp. \n
	escape more unicode stuff <0x1f as \u00xx
	skip the very last COMMA in ENTITIES ENDSEC.
	add {} around FIELDs, so that VERSION(R_14) FIELD_RC (hard_owner, 0)
	  will not only skip the PREFIX block.
	add proper PREFIX for FIELD_2DD_VECTOR.

	jq can now read the generated json, when being written to a file,
	not a pipe (NOCOMMA hack skipping the last comma of a list)

2018-12-14  Reini Urban  <rurban@cpan.org>

	Add alloca workaround: _alloca or malloc
	needed for out_json and examples/unknown.
	Windows MSVC defines _alloca in malloc.h

2018-12-13  Reini Urban  <rurban@cpan.org>

	json: cquote strings
	now only Invalid string: control characters from U+0000 through U+001F must be escaped
	are missing

	json: produce better output WIP
	but still not JSON conformant.
	make HEADER a hash.
	better ARRAY, POINTS, VECTORs.
	HACK: skip dquotes on classnames wiich are already in dquotes.
	      TODO escape it properly.

2018-12-13  Reini Urban  <rurban@cpan.org>

	json: use DXF_OR_PRINT blocks (#73)
	Most entities only have DXF, DECODER and ENCODER blocks defined (e.g. LINE)
	but no special PRINT block, which would be needed for all other
	formatter outputs.
	For easier spec go with the DXF_OR_PRINT block then, and
	define it for those formatters IS_PRINT settings.
	This fixes out_json with only IS_PRINT but no IS_DXF action.

	We don't want to duplicate DXF {} blocks for PRINT.
	And those formatters also go into both directions, in and out.

	Thanks to @nick-bull for asking about this.
	Closes #73

2018-12-13  Reini Urban  <rurban@cpan.org>

	encode: add WIP dwg_section_page_checksum
	for writing a r2004+ section map. untested.

	more crc work: crc64 and crc32
	rename 2004_file_header.CRC to crc32,
	format crc64 properly (leading 0),
	add crc32 code (generated crc32 table) for r2004+ (for file header),
	not the crc64 code yet for r2007+ (for compressed pages),
	rename some internal old libdwg vars from crk to crc.

	Add handles section CRC check
	This CRC is LE (not byte-swapped).

	fix testcases/bits_test.c on 32bit
	use better MC/UMC test values: 0x8777 7777 instead of 0x2111 1111
	causing the previous 4bit lossage.
	beware of uint32 wraparound causing an endless loop
	(cygwin32)

2018-12-12  DenisPryt  <denis.chausy@gmail.com>

	Restore dat position in dwg_decode_add_object
	for all return cases

2018-12-12  Reini Urban  <rurban@cpan.org>

	dxf: fix CELWEIGHT values
	from https://sourceforge.net/p/libdwg/tickets/7/
	CELWEIGHT is encoded into special values.
	Thanks to Guruprasad Rane for the value translations.

	Add logging for some calculated values

2018-12-12  Reini Urban  <rurban@cpan.org>

	print HANDSEED as hex handle
	as AUXHEADER RL, and as HEADER handle.
	See #71

2018-12-12  Reini Urban  <rurban@cpan.org>

	change MC back to long
	document and simplify MC bits
	Explain why 4 byte are not enough.
	on 64bit MC offsets just need to be natural.
	Add more MC and UMC tests.

	Closes #70

2018-12-12  DenisPryt  <denis.chausy@gmail.com>

	read/write bit_MC/UMC fix (max byte length change from 4 to 5)
	See #70

2018-12-12  Reini Urban  <rurban@cpan.org>

	fixup read_2004_compressed_section messages
	Fix wrong logging messages for the section types.
	Not Class, but OBJECTS and HANDLES mostly.

2018-12-11  Reini Urban  <rurban@cpan.org>

	swap CRC type to RSx
	not RS_LE.

	Now only the r14,r2000 Section[0] CRC fails, a known problem.
	relax the WRONGCRC error with those.

2018-12-11  Reini Urban  <rurban@cpan.org>

	bits: change BITCODE_MC/MS from long to int32
	we are not on 32bit anymore.
	also add read_200{4,7}_section_handles and breaks

	bits: use BITCODE_* types
	not the intsize dependent long unsigned int

	dxf: guard empty table ctrl objects

2018-12-11  DenisPryt  <denis.chausy@gmail.com>

	Add r2007+ obj_string_stream overflow guard

2018-12-11  Reini Urban  <rurban@cpan.org>

	SPLINE/HELIX: set parents
	We cannot use FIELD_VECTOR with 3BD here unfortunately

	perl: fix make check
	use LD_LIBRARY_PATH, not LD_RUN_PATH to be able to find libredwg.so.0

2018-12-11  Reini Urban  <rurban@cpan.org>

	CLANG_DIAG_IGNORE(-Wpragma-pack)
	-Wpragma-pack is clang-only
	silences test/testcases/decode_test warning:
	warning: unknown option after ‘#pragma GCC diagnostic’ kind [-Wpragmas]

	The gcc variant would be -Wpragmas, which is not needed here:
	-Wno-pragmas -Wunknown-pragmas

2018-12-11  DenisPryt  <denis.chausy@gmail.com>
	    Reini Urban  <rurban@cpan.org>

	Object-map section_handles: handle is BITCODE_UMC
	unsigned, not signed.
	confirmed with libdxfrw

	encode: obj->handlestream_size needs to be encoded as UMC also.
	(forgotten in encode r2010+)

2018-12-11  Reini Urban  <rurban@cpan.org>

	extend bits_test
	print more bits and fail result

2018-12-11  DenisPryt  <denis.chausy@gmail.com>

	free -> FREE_IF migration

2018-12-10  DenisPryt  <denis.chausy@gmail.com>

	Error on zero section max_decomp_size (#66)

2018-12-10  DenisPryt  <denis.chausy@gmail.com>
	    Reini Urban  <rurban@cpan.org>

	read_R2004_section_info buffer overflow protection (#68)
	Fix decode R2004_header encryption section.

2018-12-10  DenisPryt  <denis.chausy@gmail.com>

	typo fix Pruchkovksy -> Pruchkovsky

2018-12-10  Reini Urban  <rurban@cpan.org>

	r11: add OSMODE
	even if stored in DXF as zeroed value

2018-12-10  Reini Urban  <rurban@cpan.org>

	Revert "Renamed HEADER.MENU to HEADER.MENUNAME"
	The DXF file has it as $MENU, so it was correct.
	The DXF docs are just wrong.

	This reverts commit 419f4eade8d9b32942a1d0a26097081f09a54c71.

2018-12-09  Reini Urban  <rurban@cpan.org>

	Renamed HEADER.MENU to HEADER.MENUNAME
	MENU is the command, but MENUNAME is the variable name

2018-12-07  DenisPryt  <denis.chausy@gmail.com>

	Fix unknown class free problem

2018-12-06  Reini Urban  <rurban@cpan.org>

	Harmonize Dwg_Leader_ subtype names
	Dwg_Leader_* => Dwg_LEADER_*
	Dwg_MLeaderAnnotContext => Dwg_MLEADER_AnnotContext

2018-12-05  Reini Urban  <rurban@cpan.org>

	Release 0.7

	add .cirrus.yml for FreeBSD CI

	fix python 3.6 TabError

	meta: fixup authorship headers
	load_dwg.c: decl strdup

2018-12-05  Reini Urban  <rurban@cpan.org>

	api: convert IMAGE.size.{width,height} to 2RD
	no inline structs in WIPEOUT and IMAGE.
	convert inline struct { width; height } to 2RD (x,y).
	The size is documented as size (u,v),
	not width/height in the AutoCAD DXF docs.

	This is mostly to simplify the dynapi #59

	xmlsuite: simplify newxml.py
	remove unused local var

	xmlsuite: simplify check.py
	remove unused imports

2018-12-04  Reini Urban  <rurban@cpan.org>

	examples/bits: initialize pos
	pos -Wmaybe-uninitialized in return decode(dat, pos, size)

	detab all sources
	some editors are obviously confused about tabs

	Protect from calloc(0,) returning non-NULL (#61)
	when info->num_sections == 0 (on some broken DWG), calloc(0,...)
	might return a non-NULL ptr on some broken libc's (glibc).
	This is a better fix than on PR #61, thanks @DenisPryt
	for finding the problem.

2018-12-03  Reini Urban  <rurban@cpan.org>

	alive.test: use libtool for 2nd dwggrep test

	pre-r13: set LAYER,STYLE flag bits
	set on,frozen,frozen_in_new,locked bits from LAYER flag,
	shape_file,vertical from STYLE flag.

	pre-r13: set BLOCK_HEADER flag bits
	anonymous,hasattrs,blkisxref,xrefoverlaid from flag.
	to unify the api

	smoke: CFLAGS typo

2018-12-02  Reini Urban  <rurban@cpan.org>

	NEWS: add latest changes for 0.7

	guard get_first_owned_object first_entity
	ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7f782e1db8b5 bp 0x7fffb
	a38ff70 sp 0x7fffba38ff50 T0)
	The signal is caused by a READ memory access.
	Hint: address points to the zero page.
	 #0 0x7f782e1db8b4 in get_first_owned_object /home/rurban/Software/libredwg/src/dwg.c:748:34
	 #1 0x5048fb in output_BLOCK_HEADER /home/rurban/Software/libredwg/programs/dwg2SVG.c:211:9
	 #2 0x50453d in output_SVG /home/rurban/Software/libredwg/programs/dwg2SVG.c:252:3
	 #3 0x50453d in main /home/rurban/Software/libredwg/programs/dwg2SVG.c:361

	add missing _private decls

	fixup _VECTOR_CHKCOUNT for REACTORS macros
	A minimal HANDLE (i.e. a NULL handle) need much less bits than 8

2018-12-02  DenisPryt  <denis.chausy@gmail.com>

	Add _VECTOR_CHKCOUNT to REACTORS macros.

2018-12-02  DenisPryt  <denis.chausy@gmail.com>

	Add dwg_decode_add_object_ref
	function for adding Dwg_Object_Ref.

	Revert dwg->object_ref pointer to old state if realloc is failed.
	Fix Dwg_Object_Ref leaks.

2018-12-02  Reini Urban  <rurban@cpan.org>

	fixup TABLE DWG_ERR_INVALIDTYPE error
	Table_Value sets DWG_ERR_INVALIDTYPE, check it and return
	the sum of all errors.

2018-12-02  DenisPryt  <denis.chausy@gmail.com>

	call END_REPEAT before return inside a loops

	fix 3dsolid memory leak

	switch dwg_decode_##token##_private function from EXPORT to static

	returned dwg objects non-fixed types values to its original state

	Fix memory leak objects with invalid handleref code

	Guard function in dwg_free_ ##token for all frees
	in DWG_ENTITY_END and DWG_OBJECT_END

	Guard function for free(str_dat) in decode object and entity macros

	DWG_TYPE_FREED collision

	free: several fixes
	Fix eed free on eed decode error.
	Objects with unknown handleref.code don't remove from dwg->object_ref array.
	Fix read_system_page space allocate.
	Free Bit_Chain in read_2007_section_header and other.

2018-11-30  Reini Urban  <rurban@cpan.org>

	LEADER fields
	fixup more fields:
	switch path_type with annot_type
	rename hooklineonxdir to hookline_dir
	rename unknown_bit_4 to hookline_on
	fixup DXF values

	LEADER.endptproj <= r2007
	most likely. there are still discrepancies with the DXF.
	The ODA spec is wrong for sure.
	i.e. box_width,box_height is rather a 213/223/233 3DPOINT
	DXF 340 is also missing

	doc: add dwg_get_ API
	and some more fixups

	rename internal macro GET_DWG_* to DWG_GET_
	to better reflect the external API names
	dwg_get_<OBJECT> and dwg_get_<ENTITY>.

	add GET_DWG_OBJECT for all objects in a DWG
	analog to dwg_get_ENTITY,
	but including all objects, tables, block headers, even if unowned.

2018-11-29  Reini Urban  <rurban@cpan.org>

	fix GET_DWG_ENTITY (#60)
	Either the last member of the array needs to be NULL, or we need to return
	the count.  Since we don't want to change the API, we NULL-terminate it.

	We also need to guard from an empty BLOCK_HEADER argument.

2018-11-29  Reini Urban  <rurban@cpan.org>

	AUTHORS: add Denis Pruchkovsky (Pryt)

2018-11-28  Reini Urban  <rurban@cpan.org>

	fixup VECTOR_CHKCOUNT overflow (#56)
	all values need to stay signed, just promote them to long long
	for the checks.

2018-11-28  DenisPryt  <denis.chausy@gmail.com>

	fix VECTOR_CHKCOUNT overflow (#56)
	VECTOR_CHKCOUNT cast bit size to long.  As result big numbers is multiplied
	by 8 and becomes negative

2018-11-27  Reini Urban  <rurban@cpan.org>

	dwglayers: fix DICTIONARY loop (#51)
	skip a DICTIONARY, but don't skip the loop.
	Fixes #51

	dxf: fix empty paper_space (#52)
	Fixes dxf_blocks_write #52

2018-11-27  DenisPryt  <denis.chausy@gmail.com>
	    Reini Urban  <rurban@cpan.org>

	Fix multileader bug. vertexes should be array.
	Renamed vertexes to points analog to LEADER.

	Closes PR #49

2018-11-27  Reini Urban  <rurban@cpan.org>

	fixup BITCODE_RC* vs char*
	fix -Wpointer-sign and -Wincompatible-pointer-type warnings.
	strings are still char*

	bump to 0.7, prep NEWS ChangeLog
	We had to change the API in the previous commit,
	RC is now unsigned char

	Fix LTYPE.dash, change RC to unsigned char
	avoid such negative values. Fixes #44.
	This changed the API, thus we must bump to 0.7

	fix FIELD_NUM_INSERTS
	Only allow RC 1 bytes, backup when != 1.
	Fix encode for FIELD_NUM_INSERTS, write a vector of 1 bytes.
	Fixes the example from #44 for the first wrong num_inserts
	case.

	decode FIELD_NUM_INSERTS: log -v5 values
	The ODA spec seems to be wrong, see #44

	fixup format type for size
	from the previous PR #48

2018-11-27  DenisPryt  <denis.chausy@gmail.com>

	Fix image decode: rectangle or polygon flag mistake

2018-11-26  Reini Urban  <rurban@cpan.org>

	Fix LTYPE.dash, change RC to unsigned char
	avoid such negative values. Fixes #44.
	This changed the API, thus we must bump to 0.7

	fix FIELD_NUM_INSERTS
	Only allow RC 1 bytes, backup when != 1.
	Fix encode for FIELD_NUM_INSERTS, write a vector of 1 bytes.
	Fixes the example from #44 for the first wrong num_inserts
	case.

	decode FIELD_NUM_INSERTS: log -v5 values
	The ODA spec seems to be wrong, see #44

	fixup format type for size
	from the previous PR #48

2018-11-26  Denis  <DenisPryt@users.noreply.github.com>

	Fix error with eed size (#48)

2018-11-24  Reini Urban  <rurban@cpan.org>

	Enable LGTM support (#46)
	https://lgtm.com/projects/g/LibreDWG/libredwg/

2018-11-23  Reini Urban  <rurban@cpan.org>

	examples: improve load_dwg.py
	don't fail on non-critical errors
	don't import twice

2018-11-23  Reini Urban  <rurban@cpan.org>

	Fix VECTOR_CHKCOUNT segfault
	on unassigned obj->dxfname's (esp. for <=R12). Fixes #44.

	also rename the error message: vcount is only relevant for vectors, but it
	is also used for strings.

2018-11-23  Reini Urban  <rurban@cpan.org>

	free: refactor VALUE_HANDLE
	same logic as in decode. obj is NULL inside header_variables.spec.
	but still some wrong handles are leaking.

	less calloc(0) calls
	these appear in valgrind as 0 size leaks

2018-11-23  DenisPryt  <denis.chausy@gmail.com>
	    Reini Urban  <rurban@cpan.org>

	abstract dwg_decode_eed_data, fix eed segfault #45
	move the inner eed loop into its extra function.
	end ignored last size = bit_read_BS(dat), which must be zero.
	If eed section is present and corrupted, happens seek into end,
	and return inside a while loop.  As result, we missed the last
	size = bit_read_BS(dat) in while condition.

	This also fixes most of the last remaining memory leaks,
	just a few stale handles are left.

2018-11-23  DenisPryt  <denis.chausy@gmail.com>

	Avoid reactors calloc(0)

2018-11-23  Reini Urban  <rurban@cpan.org>

	CONTRIBUTING: add link to (c) assignment form

	in_dxfb: harmonize with in_dxf

2018-11-22  Reini Urban  <rurban@cpan.org>

	unknown: more work on LOFTEDSURFACE

2018-11-20  Reini Urban  <rurban@cpan.org>

	NEWS for latest changes

	free: fix double-free with subentity handle in UNKNOWN_ENT
	such handles are already freed with object_ref[]
	Fixes #43, detected by DenisPryt

	free: fix decompress_R2004_section leak
	in case of critical errors

	check RUNNING_ON_VALGRIND
	and probe for include <valgrind/valgrind.h>
	which is helpful when testing memory leaks with bigger DWGs.
	It formerly just skipped dwg_free.
	Now call dwg_free when running under valgrind

	free: fix R_2007 data_page leaks
	free the data_page's, which can be several KB, even MB on larger DWGs

	free: eed in UNKNOWN_OBJ
	which is still stored into the Dwg_Object_Object struct.
	fixes MATERIAL eed leaks, et al.

	hash: fix Uninitialised value
	valgrind:
	Conditional jump or move depends on uninitialised value(s)
	   at 0x1E006E: hash_set (hash.c:137)
	   by 0x19A9E9: dwg_decode_add_object (decode.c:3813)
	   by 0x1A59A4: read_2004_section_handles (decode.c:2094)
	   by 0x1A59A4: decode_R2004 (decode.c:2224)
	   by 0x1A798F: dwg_decode (decode.c:223)
	   by 0x10A81C: dwg_read_file (dwg.c:186)
	   by 0x10A470: main (dwgread.c:214)
	 Uninitialised value was created by a heap allocation
	   at 0x483577F: malloc (vg_replace_malloc.c:299)
	   by 0x1DFED1: hash_new (hash.c:28)
	   by 0x1A77C7: dwg_decode (decode.c:135)
	   by 0x10A81C: dwg_read_file (dwg.c:186)
	   by 0x10A470: main (dwgread.c:214)

	fix C99 compat, rename null malloc errors
	fix some -Wdeclaration-after-statement from PR #42
	Rename the api null malloc errors to Out of memory for consistency

	free: avoid double-free of obj->tio.unknown
	when it is not a class

	fix LAYOUT memory leak >=R_13
	SINCE R_13 LAYOUT is a class, free it.
	The previous EED double-free cannot happen, as we NULL it now.
	Todo: But there are still missing EED, esp. with UNKNOWN_OBJ

2018-11-20  DenisPryt  <denis.chausy@gmail.com>

	Bit_Chain initialization in programs

2018-11-20  DenisPryt  <denis.chausy@gmail.com>

	Some trivial warning and crash fixes
	bracers in defines (out_geojson.c),
	fix parameters to fwrite,
	add Bit_Chain initialization,
	read section name according to name_length,
	free section name,
	check num_pages for zero avoiding malloc(0),
	fix possible memory leaks in dwg_api.c and reedsolomon.c
	bfr_read_string: add 2nd size argument

	minor fixups

2018-11-07  Reini Urban  <rurban@cpan.org>

	Release 0.6.2
	make regen-man

	.appveyor.yml: post-release version bump

	HACKING: add make release paragraph

	Update NEWS and ChangeLog for 0.6.2 prep

2018-11-06  Reini Urban  <rurban@cpan.org>

	fix minor warnings
	vcount: -Wsign-compare
	case DWG_TYPE_VBA_PROJECT: -Wimplicit-fallthrough

	fix several dxf segv
	with empty ctrl blocks or tables.
	Fixes [GH #39]

	Fix one more 2035 section size limit
	With the example from [GH #39]

	Merge branch 'DenisPryt-master'

2018-11-06  DenisPryt  <denis.chausy@gmail.com>

	Fix section size limit

	Fix eed decoding when end - dat->byte == 1

2018-11-06  Reini Urban  <rurban@cpan.org>

	unknown: regen

2018-11-05  Reini Urban  <rurban@cpan.org>

	Release 0.6.1
	See NEWS

	spec: fix wrong FIELD_2DD_VECTOR in dwg decode
	The 2nd .y coord was wrong. Found by @soundd1 [GH #40].

2018-08-30  luzpaz  <luzpaz@users.noreply.github.com>

	Misc. typos and whitespace fixes
	Found via `codespell -q 3`.

2018-08-13  Reini Urban  <rurban@cpan.org>

	post-release 0.6 doc updates
	This should have been done for 0.6 already...

	Release 0.6
	See NEWS

2018-08-13  Reini Urban  <rurban@cpan.org>

        Release 0.6

2018-08-12  Reini Urban  <rurban@cpan.org>

	free: not the static strings
	but all the others

	free: DECODE_UNKNOWN_BITS
	free the unknown_bits

	free: DEBUG_HERE_OBJ

	decode: clean vectors
	calloc them, not just malloc.

	dxf: more empty vector protections
	in this case ASSOCNETWORK

	dxf: fix -Wpointer-to-int-cast warning

	encode: protect empty vectors
	with DEBUGGING or UNSTABLE classes vectors
	can easily be unallocated

	encode: BITCODE_BL sizes

	configure: keep CFLAGS on --enable-debug
	e.g. -I/usr/local/include is needed for dwgps
	just remove -O2

	dxf: cast SURFACE to 3DSOLID

	dwggrep: add new objects

2018-08-11  Reini Urban  <rurban@cpan.org>

	beautify valgrind version

	fix -Wstringop-truncation in strncpy
	strncpy specified bound 255 equals destination size

	fix -Wdouble-promotion, use our bit_isnan
	don't use the math.h long double promoting isnan check,
	at least on clang.

	add separate signed BLd type #36
	We just changed BL to signed. revert that and add a separate BLd to represent the two such dxf ranges.
	BL as signed is a problem for vcount/rcount overflow detection with negative values.
	Closes GH #36

	unknown: add DEBUGGING ACSH_SWEEP_CLASS ACDBNAVISWORKSMODELDEF
	ACSH_SWEEP_CLASS is probably the dbSweepOptions.h class
	no coverage for ACDBNAVISWORKSMODELDEF (BIM_DICT entries)

	add examples/bits: all possible values/types
	not just the most likely as with bd

	bd: print most possible types and values

	rm duplicate logs.sh and log.sh
	we already have log and logs-all.sh

2018-08-10  Reini Urban  <rurban@cpan.org>

	add examples/bd
	to print the BD value of bits

	move HELIX to UNSTABLE
	found all the missing fields. It's a spline.
	bd-unknown.inc helped a lot.

	unknown: add some bd-unknown doubles
	they do work

2018-08-10  Reini Urban  <rurban@cpan.org>

	add examples/bd-unknown.inc
	to fixup wrong binary repr. of doubles,
	if found by some manual heuristic

	this is the initial empty set of all wrong BDs (with removed
	duplicates)

2018-08-10  Reini Urban  <rurban@cpan.org>

	dwggrep: skip 3DSOLID encr_sat_data
	This makes not much sense, rather search the decrypted variant.
	It also read from uninitialized memory

	make regen-swig-patch

2018-08-09  Reini Urban  <rurban@cpan.org>

	unknown: integrate 3DSOLID into SURFACE
	search for "ACIS BinaryFile" revealed an ordinary ACIS v2 SAB format
	right at the beginning of each SURFACE.
	Ensure a common binary layout for both, as we cast the SURFACE into 3DSOLID
	for decoding.

	Update 0.6 NEWS

2018-08-08  Reini Urban  <rurban@cpan.org>

	unknown: LDADD and LTEXEC fixes for shared
	link to bits and common explicitly. most functions there are not exported.

	fix LTEXEC: use unexpanded \$top_builddir. This is needed for a Makefile and a script.

2018-08-08  Reini Urban  <rurban@cpan.org>

	unknown: LIGHT looks good now
	fix plot_glyph, color,
	no hole left.

	unknown: regen-unknown

	alive.test: skip libtool on --disable-shared

	skip Unstable|Unhandled Class warning
	on print or free action. Only relevant for
	decode or encode really

	support non-decode for common_entity_data.spec
	enable encode and DXF support.
	simplify CMC color fields: rgb and alpha masks

	unknown: re-sort per file
	keep the objects from one file together

	fix parallel picat
	skip libtool --mode=execute on --disable-shared
	fix the dirname of examples/unknown with libtool.
	fix parallel picat

2018-08-07  Reini Urban  <rurban@cpan.org>

	skip incompatible moreutils parallel
	this does not support the {} and ::: syntax,
	rather uses -- for arg separation, and I still have to find out
	the {} and {/.}_{//} macros.

	we want the GNU parallel (in perl)

2018-08-07  Reini Urban  <rurban@cpan.org>

	add log script
	usage: ./log -v5 2004/Leader example_2000

	use parallel and timeout as probed
	use logs-all-serial.sh or logs-all-parallel.sh

	probe for PROGS versions
	not just to the log, display it.
	picat, timeout, parallel, valgrind.
	add timeout, parallel probes.

	more EMC tryouts WIP

	unknown: fix cquote final 0
	cquote forgot to close dest, leaving garbage in some strings.
	e.g. \"%sn\">%..." in ACDBSECTIONVIEWSTYLE.pi

2018-08-07  Reini Urban  <rurban@cpan.org>

	add new EMC color type
	for new truecolor support in entities.

	Also, regen-unknown fixed several wrong xdicobjhandle handles in
	ACDBDETAILVIEWSTYLE objects.

2018-08-07  Reini Urban  <rurban@cpan.org>

	unknown: work on VISUALSTYLE colors WIP
	actually the color.index is always 0 >= r2004.
	the dxf value needs to be derived from the first rbg byte somehow.

2018-08-06  Reini Urban  <rurban@cpan.org>

	trace CMC.flag always
	>=2004 a CMC always contains the index, rgb and flag. print that to detect wrong
	CMC colors, i.e. flags != 0,1 or 2.

	mingw: test too many args

	picat: expect also Most probable result
	which is at the end of definite and probable results.
	we don't want it to be killed before printing any result

	unknown: fix membits overflow
	found when overflowing possible and found bits.
	off-by-one bitsize: when setting 2 bits at 215 with 216 bits avail,
	it needs to set 215 and 216. so we really need to check against 217 (215+2).

	unknown: fix pi_fn stack overflow
	with path + ACDB_DYNAMICBLOCKPURGEPREVENTER_VERSION
	it easily exceeds 80

	unknown: fix the possible/found logic
	set the bits from pos to the end of bitsize

	unknown: fix num_filled stats
	fixing the wrong summary count e.g. 292/281=103.9% for PDFDEFINITION

2018-08-05  Reini Urban  <rurban@cpan.org>

	unknown: re-add missing objects
	we forgot to add DECODE_UNKNOWN_BITS for TABLE* objects.
	just MULTILEADER is now done.

	unknown: harmonize object/entity format
	and bitsize

	unknown: fix HAVE_INSRCDIR check
	for make -C examples regen-unknown.
	builddir is empty, ac_builddir ditto. srcdir=. is enough

	unknown: check picat for Definite result
	otherwise keep the old log. prevents bad logs from overwriting
	old logs

	windows -Wformat: fix type
	REPEAT_CHKCOUNT_LVAL(name,_obj->times,type)
	warning: format '%ld' expects argument of type 'long int', but argument 5
	has type 'long long unsigned int' [-Wformat=]

	unknown: next refactor
	delete pre_bits, this was wrong. It starts uneven already.
	rather store the useful relative handle and string offsets/sizes.

	add ASSOCPLANESURFACEACTIONBODY to UNSTABLE
	similar to ASSOCDEPENDENCY

2018-08-04  Reini Urban  <rurban@cpan.org>

	add 2nd FIELD_CMC dxf2 arg for rgb value
	matching pairs 62-420, ...

	decode: improve color tracing

	work on VISUALSTYLE WIP
	add and set about 50% of the missing fields

	unknown: re-order in-work area in the spec
	separate UNSTABLE from DEBUGGING

2018-08-04  Reini Urban  <rurban@cpan.org>

	unknown: refactor 2/2 and regen-unknown
	now got rid of all the slack, and we can regen-unknown even with DEBUG_CLASSES.
	summary went from 142504/2939403=4.85% to 502764/2623166=19.17%

	regen added VISUALSTYLE and many other UNSTABLE classes

2018-08-04  Reini Urban  <rurban@cpan.org>

	move VISUALSTYLE back to UNSTABLE
	~480 bits missing

	refactor UNKNOWN_FIELDS/DECODE_UNKNOWN_BITS
	dwg_decode_unknown() helper, used not only for UNKNOWN_OBJ/UNKNOWN_ENT
	but for all unstable classes.
	change to one single bits array with pre bits (if it starts not at bit 0),
	and num_bits (the bitsize in bits).

	free: fix UNKNOWN with empty dxfname
	on free checking an empty dxfname leads to SEGV.
	eg:
	{size = 91, address = 416360, type = 515, index = 240, fixedtype = DWG_TYPE_UNUSED,
	  bitsize_address = 0, has_strings = 0 000, stringstream_size = 0, handlestream_size = 0,
	  supertype = DWG_SUPERTYPE_UNKNOWN, tio = {entity = 0x0, object = 0x0, unknown = 0x0},
	  dxfname = 0x0, bitsize = 0, hdlpos = 0, handle = {code = 0, size = 0, value = 0},
	  parent = 0x7fff5fbfe0c0, common_size = 0}
	bypass dwg_free_variable_type for UNKNOWNs.

2018-08-04  Reini Urban  <rurban@cpan.org>

	add signed BLs type (420,440), fix DBCOLOR
	add a special int32_t BLs type just write the codes 420,440,
	i.e. the DBCOLOR rgb value.
	rename FIELD_BLh to FIELD_BLx and add more hex types.

	promote DBCOLOR to UNSTABLE. The remaining unknown bits are bogus,
	there's no CMC color field, no duplicate catalog $ name fields.
	Just the BLx rgb field needs to mask off the first byte for DXF,
	and there's a unknown RC. The DXF color index 21 is missing, this
	might be computed.

2018-08-03  Reini Urban  <rurban@cpan.org>

	unknown: more DBCOLOR work

	unknown DBCOLOR: split 430 name and catalog
	in DXF combined, in the DWG split up

	move DYNAMICBLOCKPURGEPREVENTER to UNSTABLE
	the last remaining handles were bogus, they do not exist
	The fiest code 70 BS looks like a class_version, but this really
	would be code 90. Who knows.

	improve UNKNOWN_{ENT,OBJ} logging to -v3
	no -v5 needed anymore.
	regen-unknown with some changed handles.

	fix bit_write_RL/bit_write_BL
	if <0 > 255 makes not much sense.
	handle large negative values, detected by unknown BL node_edge1 -1 values.

	move LIGHT to UNSTABLE
	just a few unknown internal fields are remaining,
	but the known DXF fields are done.

	unknown: regen with new byte sizes
	and without LIGHT (see next commit).
	less overshoots into the next object

	Fix -v5 overshoot errors
	store the size of the common entity/object data, until the
	object specific fields start. for a proper UNKNOWN_*.num_bytes size.
	Note that bitsize does not include the size of the common handles, so we start
	counting at obj->address, but obj->common_size starts counting after the type,
	so we still overshoot by ~18

	unknown: more work on LIGHT WIP

	fix rad2deg computation
	only needed for dxf and unknown

	unknown: skip common_entity_data
	for alldwg_1.inc. no such layer/color fields, which are
	handled in common_entity_data.spec and are not dumped
	into UNKNOWN_OBJ bytes at all, hindering the search

2018-08-02  Reini Urban  <rurban@cpan.org>

	unknown: finish UNDERLAY
	found remaining fields via picat/unknown,
	some RC/BS confusion.
	simplify clip_boundary and harmonize to clip_verts.

	move to UNSTABLE, passes all PDF coverages.
	but no DGN nor DWF coverage yet.

2018-08-02  Reini Urban  <rurban@cpan.org>

	regen-unknown

	unknown: skip common_entity_data
	there was one case of layer "0" found as TF, which was illegal

	unknown: regen for new Underlay_2004

	rename normal/210 to extrusion
	for consistency

	unknown: work on PDFUNDERLAY
	WIP

	unknown: fix dupl. go1 target

2018-08-01  Reini Urban  <rurban@cpan.org>

	dwgread: declare setenv
	via stdlib.h

2018-08-01  Reini Urban  <rurban@cpan.org>

	Fix dejagnu.h linkage
	probe for -fgnu89-inline and use it.
	See https://gcc.gnu.org/bugzilla//show_bug.cgi?id=63613
	Fixes [GH #2]

	Add dejagnu to cygwin and ubuntu/travis. msys2 dejagnu is not picked up,
	macos not tested on travis.

2018-08-01  Reini Urban  <rurban@cpan.org>

	more bit_write_RL_tests fixes
	this time I got all the swapping right.
	enhance the RL testcase using 4 different bytes

	dxf: implement dxf_classes_read()

	VALGRIND_SUPPRESSIONS: fix make dist
	EXTRA_DIST needs a relative pathname,
	Cannot stat ".//Users/rurban/Software/libredwg/valgrind-darwin.supp",
	note the ./ prefix

	testcases: oops bits_test read_RL
	another off-by-one

	dxf: more null-ptr protections

	check programs: use libtool
	with --enable-shared

2018-08-01  Reini Urban  <rurban@cpan.org>

	add VALGRIND_SUPPRESSIONS, check-valgrind programs
	integrate check-valgrind into alive.test,
	add more valgrind flags to check-dwg-valgrind.

	suppressions:
	on linux-glibc bash leaks like hell:
	  GNU bash, version 4.4.23(1)-release (x86_64-pc-linux-gnu)
	on darwin the libc locale subsystem and objc.

	on the bright side: Most LibreDWG leaks are fixed.

2018-07-31  Reini Urban  <rurban@cpan.org>

	move MULTILEADER to UNSTABLE

	finish MULITLEADER >= 2010
	though there are 92 bits missing before the handle stream

	regen-swig-patch

	change BITCODE_BL/RL to signed int32
	harmonize all vcount/i counters and sizes to BITCODE_BL.

	finished MULTILEADER <2010

	more MULTILEADER work WIP
	share ctx.content.txt and ctx.content.blk: either or.
	2000 works now until end CONTEXT_DATA

	more MULTILEADER work WIP
	multiple breaks.
	start with 2010+ AcDbObjectContextData at the beginning

	more MULTILEADER work WIP
	actually coming closer back to the ODA specs.
	add back num_vertex, num_break

	more MULTILEADER work WIP
	disable to fantasy ODA structs and code.
	favor the DXF docs, structure and reverse-engineered data.

	work on MULTILEADER WIP
	class_version 1 has at first the LEADER_LINE{ points.

	fix entity picture_size BLL type
	lshift one too many. size used as DXF code 160.
	This fixes now 2010+ MULTILEADER entities, which did have a small picture attached.

	regen unknown
	added MLeader*.dwg for MULTILEADER, BoxUnion.dwg for REGION ACIS v2.
	removed UNSTABLE DIMASSOC, ASSOCDEPENDENCY, PERSSUBENTMANAGER.

2018-07-30  Reini Urban  <rurban@cpan.org>

	Improve LOG_TF trace
	Align the 2nd ASCII line to the left of the upper %2x hex line

	Improve {VECTOR,REPEAT}_CHKCOUNT macros
	detect buffer overflows, if AVAIL_BITS() < 0.
	Change AVAIL_BITS to signed long.
	This happens if the previous read (e.g. TF) read past the buffer

	parse the ACIS version 2 format
	It is just the unencrypted binary SAB version.
	Maybe I will decode it to the ASCII variant later, but it is trivial,
	and the binary version has higher precision.

	add handle stream/padding OVERSHOOT warnings
	log OVERSHOOT instead of MISSING when we read too far

	add handle stream/padding overshoots MISSING
	padding between the streams should be max 8.
	display the offset, and add MISSING if >8

	separate WINEPREFIX for wine 32bit
	keep the default 64bit tree at ~/.wine, and create/use
	a new 32bit one.
	This test finds many useful errors.

	in_dxf: fix -Wnull-dereference warning

2018-07-29  Reini Urban  <rurban@cpan.org>

	fix --enable-debug
	overriding AM_CFLAGS is ignored, DEFS also.
	use CFLAGS.
	Just override -g -O2 on gcc --enable-debug, ignore -std=c99 also then.

	rename UNTESTED_CLASS to UNSTABLE_CLASS
	it really is tested, just unstable

	update NEWS - user-visible changes for 0.6
	working on 0.6

	decode: fix wrong has_strings offset
	fixes many skipped r2007+ strings, because of a wrong has_strings
	bit.
	Fixes [GH #34]

2018-07-29  Reini Urban  <rurban@cpan.org>

	decode: check obj_has_strings(type)
	and skip the obj_string_stream() has_strings bit check
	for certain fixed types which do have no strings.
	e.g. LINE and SEQEND entities had the has_strings bit wrongly set,
	they just need to be ignored.

	See [GH #34]. libdxfrw sets their string stream to NULL.

2018-07-28  Reini Urban  <rurban@cpan.org>

	remove unused duplicate reactors/xdicobjhandle
	They are already common object/entity fields.
	Remove them from the specific structs.

	Also remove the wrong dwg_obj_proxy_get_reactors() API,
	use dwg_obj_get_reactors() instead.

2018-07-28  Reini Urban  <rurban@cpan.org>

	MINSERT: harmonize with INSERT
	use SUBCLASS,
	better DXF layout, no attrib_handles without has_attribs

	unknown: more work on LIGHT
	got until attenuation_end_limit

2018-07-28  Reini Urban  <rurban@cpan.org>

	unknown: cquote C strings again
	log_unknown_dxf.pl already quotes " and \,
	but since unknown emits picat code, we need to do it again.

	failed only in ACDB*VIEWSTYLE template strings and MULTILEADER.

2018-07-28  Reini Urban  <rurban@cpan.org>

	smoke.sh: new features
	--enable-write is now default,
	cover the other new features: --disable-write, --disable-dxf, --enable-debug

	semver: separate patch from build number
	the appveyor build number goes into the generated github tag
	which serves as our git generated version number.

2018-07-28  Reini Urban  <rurban@cpan.org>

	fix DIMASSOC
	it has 1-4 reference points, dependent
	on the associativity bitmask. alloc all 4, and
	set only the ones which bit is set.

	Associativity flag [90]:
	1 = First point reference
	2 = Second point reference
	4 = Third point reference
	8 = Fourth point reference

2018-07-27  Reini Urban  <rurban@cpan.org>

	configure: add --enable-debug
	to set DEBUG_CLASSES.
	remove -O2 on gcc.

	api: sort dwg.h add api
	fixes perl bindings compilation errors.
	also add a convencience regen-swig-patch target for python.

	HACKING: improve examples/unknown
	See also https://savannah.gnu.org/forum/forum.php?forum_id=9203

	testcases: fix decode_test_LDADD
	need to link more src objects, similar to bits_test and hash_test

	testcases: fix hash_test_LDADD
	need to link to bits and hash explicitly.
	needed with higher optimizations, when some smaller functions are dropped
	and inlined, esp. with clang >= 5.

	SURFACE: rename num_*data fields
	the size of the encrypted data.

	api: add missing dwg_object_to_TYPE converters
	Dwg_Object -> Dwg_Object_TYPE
	previously only for entities, now also for all objects.

	testcases: fix bits_test
	because of the bit_write_TV changes, adding the \0 to the length.

	alive.test: fix for --disable-dxf

	testcases: fix minor warnings

	promote DIMASSOC to UNTESTED

2018-07-26  Reini Urban  <rurban@cpan.org>

	add DEBUGGING DIMASSOC
	pretty good, just the last intsect_gsmarker: [BS 92]
	and the handles do look wrong in some cases.

	unknown: fix out-of-bounds write
	detected by valgrind

	unknown: no const struct _unknown_field unknown_dxf
	we write to some fields. crashes on some ELF, with this in .rodata

	.gitgnore: add minor files

	unknown: find TV len+1
	A TV testvalue usually includes the final \0.
	Fix that in bit_write_T{VU} and unknown.
	We find now proper TV instead of TF values, e.g. MATERIAL.name

	protect ASSOCACTION VALUEOUTOFBOUNDS
	with DEBUG_CLASSES

	likewise update the docs
	UNTESTED, DEBUGGING, UNHANDLED, ...

	promote ASSOCDEPENDENCY to UNTESTED
	no errors in the covered examples

	unknown: on picat timeout try again with -g go1
	currently for ACAD_TABLE.pi

	add DEBUGGING ASSOCDEPENDENCY
	looks pretty stable to me, needs a bit more testing

	rename SURFACE to PLANESURFACE, regen.
	add to API,
	add coverage (2004/Surface.dwg, 2018/Surface.dwg),
	add UNHANDLED ASSOCPLANESURFACEACTIONBODY,
	regen unknown.

	unknown: skip duplicates
	the same class and unknown bytes.
	This removed 996 entries.

	unknown: add 2000/Helix.dxf

2018-07-25  Reini Urban  <rurban@cpan.org>

	autogen.sh: clean cached VERSION

	swig_python.patch: redo
	fixing Hunk #6 succeeded at 205945 (offset 13869 lines)
	add -b to patch call for easier redoing the difforig.

	r12: fix decode_entity_preR13
	call decode_entity_preR13 from dwg_add_TYPE, the promised preR13 init
	refactoring.

	r12: set more ent fields
	dwg_decode_TYPE calls dwg_add_TYPE, but decode_entity_preR13 needs
	it before and dwg_add_TYPE clears it. Need to refactor preR13 init

	eed: protect from empty appid->apps
	the handle can be empty now. repro: 2013/ground_plane_outline.dwg

2018-07-24  Reini Urban  <rurban@cpan.org>

	decode: don't set bitsize_address
	this is needed by encode DWG_ENTITY_END to write
	the bitsize.
	I hijacked it for decode DEBUGGING, but this broke
	dwgrewrite for example_r14.dwg

	dwglayers: ignore DICTIONARY
	as layer_control member. This has no entry_name

	free: fix NULL handles
	don't allocate illegal null handles at all,
	to be able to decide between global object_ref handles,
	and individual header var handles, and empty refs

2018-07-24  Reini Urban  <rurban@cpan.org>

	free: COMMON UNKNOWN_ENT
	also COMMON_ENTITY_DATA and COMMON_ENTITY_HANDLE_DATA,
	esp. pictures.

	e.g. frees now
	7,308 bytes in 4 blocks are definitely lost in loss record 144 of 144
	   at 0x10016B681: malloc (vg_replace_malloc.c:302)
	   by 0x1000056BD: bit_read_TF (bits.c:1190)
	   by 0x10002DFF4: dwg_decode_entity (common_entity_data.spec:24)
	   by 0x1000C45DC: dwg_decode_UNKNOWN_ENT (dwg.spec:5423)
	   by 0x1000CF3F4: dwg_decode_add_object (decode.c:3644)
	   by 0x100025E12: decode_R13_R2000 (decode.c:1062)
	   by 0x100006A4C: dwg_decode (decode.c:210)
	   by 0x100001A2F: dwg_read_file (dwg.c:186)
	   by 0x10000118E: main (dwgread.c:213)

2018-07-24  Reini Urban  <rurban@cpan.org>

	free: NULL handles
	They were still alloced, but not globally freed, esp. in XRECORD.

	Fixes 8,384 bytes in 262 blocks are definitely lost in loss record 266 of 266
	   at 0x100165D7F: calloc (vg_replace_malloc.c:714)
	   by 0x10002F1BC: dwg_decode_handleref_with_code (decode.c:2747)
	   by 0x1000BEDEC: dwg_decode_XRECORD (dwg.spec:4981)
	   by 0x1000CED60: dwg_decode_add_object (decode.c:3576)
	   by 0x100025ADE: decode_R13_R2000 (decode.c:1062)
	   by 0x100006718: dwg_decode (decode.c:210)
	   by 0x1000016FB: dwg_read_file (dwg.c:186)
	   by 0x100000E5A: main (dwgread.c:213)

2018-07-24  Reini Urban  <rurban@cpan.org>

	add UNDERLAYDEFINITION, DEBUGGING UNDERLAY
	UNDERLAYDEFINITION seems to be ok, UNDERLAY still a hole before flag 280
	and no Boundary coverage yet.

2018-07-23  Reini Urban  <rurban@cpan.org>

	add DEBUGGING *SURFACE entities

	HATCH: is now stable
	Closes [GH #27]

	free: improve eed double-free
	Fixes [GH #33], detected by jinyu00

2018-07-22  Reini Urban  <rurban@cpan.org>

	unknown: log_unknown_dxf
	use different comment style for easier unknown.sh
	helper script to detect all classes.

	unknown: write fieldnames into pi

	add DEBUGGING ASSOCALIGNEDDIMACTIONBODY
	some logic is still missing when to skip some fields

	add DEBUGGING DYNAMICBLOCKPURGEPREVENTER
	fields ok, just after the last handle is an unknown 47bit hole

2018-07-22  Reini Urban  <rurban@cpan.org>

	add --disable-dxf
	Disable DXF and other in/out modules,
	and most helper programs, only dwgread.

	Only useful for faster test/debug cycles.

2018-07-22  Reini Urban  <rurban@cpan.org>

	unknown: more DBCOLOR
	got now the name and color catalog (guide) after a hole of 24bits.
	but there are still 2 big holes.

	add PERSSUBENTMANAGER to UNTESTED
	very low coverage and no known fieldnames.
	but the dxf groups do look stable

2018-07-21  Reini Urban  <rurban@cpan.org>

	unknown: finished fieldnames

	unknown: ignore alldwg.skip
	this is stderr from unknown.
	all classes have now enough information

	disable regen-unknown with !HAVE_INSRCDIR
	Need a configure in srcdir.
	Fixes distcheck errors, and enables proper deps

	unknown: add fieldnames
	and fix some found dxfgroup errors and missing fields

2018-07-21  Reini Urban  <rurban@cpan.org>

	unknown: various improvements
	use the handle code, not just value.
	print the found/notfound fields better.
	print more picat statistics: Found, NotFound ratio, Missing bits.
	add Class,Dxf,Version to the picat data for better constraints checks.

	improve SUN spec

2018-07-20  Reini Urban  <rurban@cpan.org>

	protect dwg_obj_block_control_get_block_headers
	from empty ctrl->block_headers. Fixes [GH #32]

	add DEBUGGING ASSOC2DCONSTRAINTGROUP
	partially, up to AcConstrainedImplicitPoint.
	no names found yet

2018-07-20  Reini Urban  <rurban@cpan.org>

	add picat step to make unknown
	Only done when picat was found in the path by configure.
	Get picat binary or source packages from picat-lang.org

	To skip or override timeout use make unknown TIMEOUT_30=
	timeout is from coreutils.
	https://www.gnu.org/software/coreutils/manual/html_node/timeout-invocation.html

	add a basic description to HACKING

2018-07-20  Reini Urban  <rurban@cpan.org>

	regen-unknown
	catch all the new classes.
	unknown summary: 478284/2967120=16.12%

	add more unhandled classes
	to the header and classes.inc

2018-07-19  Reini Urban  <rurban@cpan.org>

	unknown: more EVALUATION_GRAPH fixes
	but still some unclear options

	gitignore: ignore generated picat files
	.qi is a compiled .pi

	add DEBUGGING ASSOCPERSSUBENTMANAGER
	picat laid out the fields wonderfully, just the names
	are now missing

	configure: probe for picat
	and add more PROG versions to config.log

	unknown: sort alldwg.inc
	new summary: 108570/1028945=10.55%
	much less skips

2018-07-19  Reini Urban  <rurban@cpan.org>

	unknown: better BIT bugfix
	finally we are finding the strings we should be finding all along.
	we still need to sort alldwg.inc by class.

	cannot tell the new summary yet, as it is crashing with overwriting some
	malloc's, but overall it looks significantly better, between 30-40% for many:

	unknown-ACAD_EVALUATION_GRAPH.log:summary: 216/1206=17.91%
	unknown-ACAD_TABLE.log:summary: 272708/1157653=23.56%
	unknown-ACDBASSOC2DCONSTRAINTGROUP.log:summary: 5084/46715=10.88%
	unknown-ACDBASSOCACTION-work.log:summary: 0/193=0.00%
	unknown-ACDBASSOCACTION.log:summary: 400/717=55.79%
	unknown-ACDBASSOCALIGNEDDIMACTIONBODY.log:summary: 282/571=49.39%
	unknown-ACDBASSOCDEPENDENCY.log:summary: 256/571=44.83%
	unknown-ACDBASSOCGEOMDEPENDENCY.log:summary: 4648/11862=39.18%
	unknown-ACDBASSOCNETWORK.log:summary: 1824/3274=55.71%
	unknown-ACDBASSOCOSNAPPOINTREFACTIONPARAM.log:summary: 508/1043=48.71%
	unknown-ACDBASSOCPERSSUBENTMANAGER.log:summary: 732/3457=21.17%
	unknown-ACDBASSOCVERTEXACTIONPARAM.log:summary: 612/1307=46.82%
	unknown-ACDBDETAILVIEWSTYLE.log:summary: 13994/138466=10.11%
	unknown-ACDBPERSSUBENTMANAGER.log:summary: 40/743=5.38%
	unknown-ACDBSECTIONVIEWSTYLE.log:summary: 28194/230930=12.21%
	unknown-ACDB_LEADEROBJECTCONTEXTDATA_CLASS.log:summary: 1624/3443=47.17%
	unknown-ACSH_HISTORY_CLASS.log:summary: 216/368=58.70%
	unknown-ACSH_SWEEP_CLASS.log:summary: 1160/10634=10.91%
	unknown-ARC_DIMENSION.log:summary: 31376/104047=30.16%
	unknown-CSACDOCUMENTOPTIONS.log:summary: 0/6160=0.00%
	unknown-DBCOLOR.log:summary: 400/39784=1.01%
	unknown-DIMASSOC.log:summary: 6036/42548=14.19%
	unknown-HELIX.log:summary: 33820/89830=37.65%
	unknown-LAYOUTPRINTCONFIG.log:summary: 0/1930=0.00%
	unknown-LIGHT.log:summary: 1642/9020=18.20%
	unknown-MATERIAL.log:summary: 21090/276592=7.62%
	unknown-MULTILEADER.log:summary: 20682/90631=22.82%
	unknown-SUN.log:summary: 630/2804=22.47%
	unknown-TABLECONTENT.log:summary: 11160/226312=4.93%
	unknown-TABLEGEOMETRY.log:summary: 0/0=nan%
	unknown-TABLESTYLE.log:summary: 14416/427123=3.38%

2018-07-19  Reini Urban  <rurban@cpan.org>

	unknown.pi: add hole detection
	for the next solver step, to add the leftover fields rests to the holes.
	and to fill in likely dwg-only fields, not in the dxf.

	unknown: shorted HANDLE to H structname

	unknown: whitespace only
	indent class - dxf loop

2018-07-19  Reini Urban  <rurban@cpan.org>

	unknown: create picat data files
	process unknowns per class, not per file anymore.
	change bit_errprint_bits to bit_fprint_bits, without \n.

	TODO: pre-sort alldwg.inc per class.

2018-07-19  Reini Urban  <rurban@cpan.org>

	unknown: picat module and EVALUATION_GRAPH data
	for the picat solver helper to layout unknown fields.
	there's no backtracking with constraints, there's not enough data yet.

2018-07-17  Reini Urban  <rurban@cpan.org>

	bits: add bit_errprint_bits
	print bits to stderr, not stdout

	fix EVALUATION_GRAPH Object bugs
	the fixed unknown revealed some type errors

2018-07-16  Reini Urban  <rurban@cpan.org>

	unknown: fix BIT bug
	10 is the proper representation of BL/BS 0, not 00.
	(gdb) p/t 0x80 => 10000000

	summary: 200166/2972461=6.73%

2018-07-15  Reini Urban  <rurban@cpan.org>

	add DEBUGGING ASSOCOSNAPPOINTREFACTIONPARAM Object
	half-way through

2018-07-15  Reini Urban  <rurban@cpan.org>

	unknown: fix overlap check
	skip the last bit+1.
	and mark as found if num_found == num_dxf, even for >5

	213008/2972461=7.17%

2018-07-15  Reini Urban  <rurban@cpan.org>

	unknown: reformat output
	put bits into col 0
	print each dxf fields at col 0
	put search into one line
	add num of same DXF fields to result
	add + or ? to found

	172488/2972461=5.80%

2018-07-15  Reini Urban  <rurban@cpan.org>

	unknown: skip duplicate handle codes
	and skip searching for EED dxf codes, they are not stored
	in the unknown bytes, and are not stored dupl. as DWG fields

2018-07-15  Reini Urban  <rurban@cpan.org>

	refactor DEBUG_HERE
	needed to print the object offset,
	add DEBUG_HERE_OBJ, DEBUG_POS_OBJ

	note that UNKNOWN_* excludes the EED and common_entity_data

	flip two SUN fields

2018-07-15  Reini Urban  <rurban@cpan.org>

	more DEBUGGING SUN work

	stability: protect print loops
	we bail out earlier now in REPEAT and VECTOR
	leaving the field unallocated. Protect against that in print at least.

	add DEBUGGING EVALUATION_GRAPH Object

	in_dxf: no inline dxf_free_pair
	-Winline warned: call is unlikely and code size would grow

2018-07-14  Reini Urban  <rurban@cpan.org>

	unknown: compile-time multiple matching fields
	pre-calculate the number of potential same DXF fields values,
	same basic type and same string value.
	No need to calc num_dxf() at run-time

	back to the previous 172968/2972461=5.82%

2018-07-14  Reini Urban  <rurban@cpan.org>

	unknown: handle multiple matching fields
	when the same DXF value could lead to the same binary representation.
	e.g. DBCOLOR has 2 equiv. DXF fields 330:handle, or mult. 90:"21" fields.
	mark them as found also.

	check raw numeric types also, if the bitencoded one failed.

	advanced to 172692/2440879=7.07%
	and found several unique hits in previously skipped classes

2018-07-14  Reini Urban  <rurban@cpan.org>

	unknown: fixup DBCOLOR status
	it is DEBUGGING

	add .c.ii rule
	for preprocessed files without line markers. useful for debugging macros.

	stability: more isnan checks

	logs: add GNU parallel usage
	This is of course massively parallel and faster.
	See https://savannah.gnu.org/forum/forum.php?forum_id=9197

2018-07-13  Reini Urban  <rurban@cpan.org>

	unknown: skip empty objects
	unknown prints all empty objects with 0.0% found to alldwg.skip
	which will be subsequently skipped

	unknown: skip some duplicates and 0%
	egrep '0.0%|test/test-data/' unknown-0.5.1027-12-g28982958.log | grep -B1 0.0%

	unknown: regen with DBCOLOR
	fix regen-unknown to include more unknowns, esp. DBCOLOR

	stability: improve REPEAT_CHKCOUNT
	but via sizeof, not minimal bits_size.
	abort HATCH with gradient fill on print

	WIP dbcolor handle
	See [GH #31]

	Untested OBJECT DBCOLOR
	referenced by color handle of some entities WIP
	See 2004/CascoUrbano GH #27

	fix SORTENTSTABLE

2018-07-13  Reini Urban  <rurban@cpan.org>

	stability: improve VECTOR_CHKCOUNT
	add global dwg_bits_size: minimal sizes of all types
	and check each VECTOR or REPEAT before the malloc against overflow.

	move dwg_bits_name from unknown to common.{c,h}

2018-07-13  Reini Urban  <rurban@cpan.org>

	free: protect empty FIELD_VECTOR_N

	check-syntax: add nice -O0
	unknown flycheck lasts too long

	ASSOCNETWORK: demote back to DEBUGGING
	inline the actions, WIP. But coming very close.

	unknown: log pos range
	from-last bits

	handle relative codes 6-c
	relative offset handles do have an ref, even with size 0.
	esp. code 6 (next) and 8 (prev).

	autogen.sh: generate .tarball-version
	this is done by dist-hook, but we are doing some extra work to be clearer

2018-07-12  Reini Urban  <rurban@cpan.org>

	examples: wrong EXTRA_DIST
	we don't need to distribute the unknown sources

	unknown: promote ASSOCNETWORK to UNTESTED
	the action handles are missing, but it looks rather good and stable

	unknown: fix relative c handle
	-3 offset is stored as c.1.3

	unknown: support relative reactors
	from 150616 to 150760

2018-07-12  Reini Urban  <rurban@cpan.org>

	unknown: fix relative handle offsets
	6.0.0 is +1, 8.0.0 is -1
	a.0.1 is +1, ...

	from 150560 to 150616/2490950=6.05%

2018-07-12  Reini Urban  <rurban@cpan.org>

	unknown: more ASSOCACTION work
	compilation fixes with -DDEBUG_CLASSES

	dwg2dxf: free only with mult. infiles

	unknown: fix imprecise RD search
	we added a RD step after BD, changing the type to RD.
	improved from 147660/2490950=5.93% to 150560/2490950=6.04%

	unknown: add --class filter, unknown.sh
	filter by classes.
	add the dxf to the header.
	fix the TU is16 flag for r2010+
	free the temp. chains (to reuse the buffers),
	  our data-structures got bigger over time.

2018-07-12  Reini Urban  <rurban@cpan.org>

	unknown: regen and fix some warnings
	generated a lot of matching DXF's to find more fields.

	new summary: 147594/2490950=5.93%
	prev. 4810/407639=1.18%, 8384/548025=1.53%

2018-07-12  Reini Urban  <rurban@cpan.org>

	unknown: fix restarts, esp. r2010+
	the offset calculation was wrong, leading to wrong
	unknown bytes being logged and analyzed for r2010+

2018-07-11  Reini Urban  <rurban@cpan.org>

	fix git-version-gen for tag releases
	on a tag commit `git describe HEAD` cannot find a description,
	use --tags to avoid an UNKNOWN version, and use the tag.

	dxf: add HEADER_TU LASTSAVEDBY
	and fix a couple of compiler warnings of unused functions

	configure: print generated git version

	perl: fix bash syntax error
	syntax error near unexpected token `;'

	dwg2dxf: fix -Wuninitialized
	though practically not happening

	configure: honor system CFLAGS
	and AC_SUBST(WARN_CFLAGS) is already done by AX_COMPILER_FLAGS

2018-07-11  Reini Urban  <rurban@cpan.org>

	re-enable WARN_CFLAGS
	was disabled when AM_CFLAGS was set in *.am and configure.ac

	fix various minor warnings: -Wshadow, -Wsign-compare, missing-decls
	undefine DEBUGGING_CLASS'es in the spec (-Wunused-function)

2018-07-11  Reini Urban  <rurban@cpan.org>

	win32 static: check ENABLE_SHARED
	some libtool cannot build shared, but __declspec(dllimport)
	is still set there, leading to linker errors.
	the same happens on windows with --disable-shared.

	python: stabilize
	help with empty PYTHON.
	don't make check without python in xmlsuite

	perl: skip make with windows Makefile
	with incompatible command.com/cmd.exe shell
	grep for NOOP = rem and skip then.
	This bug started with the msys update to perl-5.28
	Before the Makefile was properly created from bash for bash.

	perl: fix OBJEXT

	perl: prefer local dwg.h over old installed
	see GH #29.
	Also disable the unused cmdline overrides

	unknown: add CMC support for DXF 63
	only for indexed color values <r2004.
	since r2004 the color struct adds to it, but should be found nevertheless.

	unknown: add SUNSTUDY object fields
	yet unsorted and uncovered
	The SUN object is wrongly documented in the Acad DXF docs as entity.

2018-07-11  Reini Urban  <rurban@cpan.org>

	unknown: regen alldwg.inc
	add more dxf counter-parts, fixed dxf field in alldwg.inc.

	work on MULTILEADER 3BD ctx.content_base -> 3RD at offset 384-576 with example_2000.dwg
	rename leaderstyle 340 handle to mleaderstyle

	summary: 8216/544344=1.51%

2018-07-09  Reini Urban  <rurban@cpan.org>

	patch: add build-aux/swig_python.patch to EXTRA_DIST
	failed in distcheck

	add unknown make target

2018-07-08  Reini Urban  <rurban@cpan.org>

	unknown: try BS-BL, and BL-BS
	from 4720 to 4810

	unknown: try RD when BD failed
	from 2718 to 4720 (precise only, unprecise added no hits)

2018-07-08  Reini Urban  <rurban@cpan.org>

	unknown: restrict relative handles
	only some code 6 and 8 offsethandles are valid,
	only of the new handle has an +1 or -1 offset.
	ditto for a and c: the offset must be positive.

	down to 2718

2018-07-08  Reini Urban  <rurban@cpan.org>

	unknown: add OFFSETOBJHANDLE code>5 variants
	relative (shorter) handle values. yet unsuccessful.
	removed one wrong found handle c: down to 2734

	unknown: try RC for BS and vice versa
	from 2742 to 2782

2018-07-08  Reini Urban  <rurban@cpan.org>

	unknown: fix printing found BD
	print the BD bitmask at the found offset and compare it the
	DXF string (should be <0.001).

	down from 3270 to 3252 bits, and with a crosscheck for <0.001
	even down to 2742.

2018-07-08  Reini Urban  <rurban@cpan.org>

	unknown: more unprecise BD search
	still 3270 bits found

	unknown: add unprecise BD search
	cut the mantissa precision from 52 bit to 44 bit.
	finds now 23 more BD's, e.g. 10.0, 50.0, 2231.000092348011,
	-54.05474532926735, 490.6216519543077, 20.75891407303142

	unknown: try TV if TU fails (unsuccessful)
	add summary stats

	common: explain the MC0.0 magic
	http://www.fourmilab.ch/autofile/www/section2_11_4.html
	http://www.fourmilab.ch/autofile/www/chapter2_14.html

2018-07-07  Reini Urban  <rurban@cpan.org>

	unknown: add coverage stats
	store each found and possibly bit, to continue search
	if already reserved, and get some picture

2018-07-06  Reini Urban  <rurban@cpan.org>

	unknown: try more handle codes
	now found 62 unique handles,
	improved from 140 to 151 found 1.

	stats of found fields:
	    1 151
	    2 118
	    3 37
	    4 20
	    5 93
	    >5 11692

2018-07-06  Reini Urban  <rurban@cpan.org>

	unknown: improve handle codes
	now found 51 unique handles,
	improved from 94 to 140 found 1

2018-07-06  Reini Urban  <rurban@cpan.org>

	unknown: fix bits_BS strtol
	using sscanf is always a bad idea.
	The data looks pretty good and solvable now.

	stats of found fields:
	1 94
	2 109
	3 34
	4 17
	5 101
	>5 11678

2018-07-06  Reini Urban  <rurban@cpan.org>

	unknown: store max 5 found positions
	stats of found fields:
	1  94
	2  109
	3  34
	4  14
	5  101
	>5 11678

	unknown: fix alldxf_1.inc extended fields
	add the missing fields.
	use -1 for not-found pos, not 0. This enables the first field being at first.

2018-07-06  Reini Urban  <rurban@cpan.org>

	unknown: implement membits
	use our own search, which is much easier than handling all the
	memmem corner-cases at the beginning and end, and bit-shifting.

	use strtod instead of sscanf %lf. was buggy.

	print the bits to review the search (and check write API, looks wrong),
	added bit_print_bits to bits.c
	WIP: The doubles BB prefix looks wrong, the double values from strtod
	also. maybe hardcode some string->double conversions.

2018-07-06  Reini Urban  <rurban@cpan.org>

	unknown: add TV and angle_BD types
	non-unicode for 300-309, deg2rad angles for DXF 50 types

	unknown: fix DXF 310 hexstring
	and fix wrong dxf_size vs dxf_bitsize.
	add dwg_bits_name[]

	document libredwg.pc

2018-07-05  Reini Urban  <rurban@cpan.org>

	add libredwg.pc

	unknown: fix search_bits
	convert the bytes/bits to one byte stream.
	add carry logic and remaining dxf->bits

2018-07-05  Reini Urban  <rurban@cpan.org>

	unknown: search_bits
	search for the binary repr in the stream
	and store found position if found only once.
	try for all 8 possible shift positions.

	TODO: we don't handle multiple findings yet, and we didn't find any unique
	pos yet.  the carry logic and the remaining dxf->bits are also missing.

2018-07-05  Reini Urban  <rurban@cpan.org>

	unknown: store the binary repr - bits_format
	for each dxf value

2018-07-05  Reini Urban  <rurban@cpan.org>

	unknown: split up generation of static array of struct
	we need 3 parts to be able to initialize it statically.
	disable alldwg.inc for now. we don't need to find the fields order and pos,
	only for a consistency crosscheck against all DWG's without matching DXF afterwards.

	add 2 fields to the dxf fields: type and pos, resolved by the solver.

2018-07-05  Reini Urban  <rurban@cpan.org>

	unknown: never build alldwg.inc
	unless via regen-unknown.

	generated sources are in builddir, only from there ./logs.sh can be run.

2018-07-05  Reini Urban  <rurban@cpan.org>

	unknown: implemented log_unknown_dxf.pl
	created now alldxf.inc with all the real dxf values to find
	in the unknown bits.

	DEBUGGING_CLASSES ASSOCACTION, ASSOCNETWORK

	add build-aux/swig_python.patch
	for a warnings free swig source, for swig 3.0.12

	regen-man: with version 0.5.1-dev

	dwg2svg2: use getopt_long

	dwg2ps: use getopt_long

	dwgbmp: use getopt_long

	dwg2SVG: use getopt_long

	dwggrep: use getopt_long

	dwglayers: use getopt_long

	dxf2dwg: use getopt_long

	dwg2dxf: use getopt_long
	change -as-rNNNN to --as rNNNN resp. -a rNNNN.

	dwgrewrite: use getopt_long
	change -as-rNNNN to --as rNNNN resp. -a rNNNN.

	dwgwrite: use getopt_long
	change -as-rNNNN to --as rNNNN resp. -a rNNNN.

	dwgread: without HAVE_GETOPT_LONG

	dwgread: use getopt_long
	which is a bit broken for -v3 (optional args), but we hack around it.
	at least we can use all options in any order now.

	stability: no endless loop with small files
	dwgs are normally >1000byte. But with a wrong filename
	avoid an endless hash_new loop with size==0 (/1000)

	Doxyfile: only with doxygen

	fix distcheck uninstall for perl and doc
	the added to perllocal.pod and share/info/dir cannot be uninstalled.

2018-07-05  Reini Urban  <rurban@cpan.org>

	First release 0.5

2018-07-04  Reini Urban  <rurban@cpan.org>

        logging: remove decimal handle value
        handles are hex only

2018-07-03  Reini Urban  <rurban@cpan.org>

        dxf: protect empty vectors
        and fix wrong MATERIAL text types for *map_filename

        api: remove wrong comment
        MULTILEADER spec: more DXF
        and return earlier on errors

2018-06-30  Reini Urban  <rurban@cpan.org>

       Third test release 0.4.938

2018-06-29  Reini Urban  <rurban@cpan.org>

       more format string types

       enable glibc strcasestr
       probed as yes, but not declared. same as on darwin.

       ../../programs/dwggrep.c:213:7: warning: implicit declaration of function ‘strcasestr’ [-Wimplicit-function-declaration]
              if (strcasestr(text, pattern))

2018-06-29  Reini Urban  <rurban@cpan.org>

       alldwg.inc: create from builddir
       ./logs.sh can only be run from the builddir,
       only there are the binaries.
       call make from logs.sh, not gmake. we would really need a MAKE=$(MAKE)
       but this is only done on regen-unknown by the maintainer.
       make the alldwg.inc target a maintainer rule only. test -d ../.git || false

2018-06-28  Reini Urban  <rurban@cpan.org>

       eed: fix max limit from 1024 to obj->size
       And on overlong stringsize just skip it to the end.

       This fixes the error with hatch_color_ref.dwg from [GH #27]
       and several LAYER entities with attached large EED data.

2018-06-28  Reini Urban  <rurban@cpan.org>

	Second test release 0.4.924

2018-06-28  Reini Urban  <rurban@cpan.org>

	common_entity_data: fix has_ds_binary_data
	use instead of nolinks with r2013+

	improve FIELD_2DD_VECTOR logging, print index

2018-06-28  Reini Urban  <rurban@cpan.org>

	try ACIS 2 only with .git (ifndef IS_RELEASE)

	add some FIELD formatting overrides FIELD_RCu lineweight FIELD_BLh rgb_color
	pass thru preR13 decode errors

	add analog VECTOR_CHKCOUNT
	also for HATCH.
	Maybe we should use these checks only for known UNKNOWN_CLASS
	entities. The strcmp check for the classname
	is resolved at compile-time already., if the classname would
	appear in the macro.

	add REPEAT_CHKCOUNT and use it more
	not only since r2010+ also with r2004 for invalid HATCH entities.

	decode BD stability: check bit_isnan
	when decoding bitcode encoded doubles, check for our
	own unique return value of bit_nan (avoiding math.h and -lm).
	return DWG_ERR_VALUEOUTOFBOUNDS in objects and entities then

2018-06-28  Reini Urban  <rurban@cpan.org>

	fix common_entity color ENC encoding
	various serious errors in the color encoding
	for entities, called ENC.

	The bug only occurred with non-indexed colors
	with RGB or transparency values.
	Thanks to @arturredzko for an example DWG.

2018-06-28  Reini Urban  <rurban@cpan.org>

	api: finish docs, more renames
	Take the opportunity that the API should be somewhat sane and stable,
	to harmonize more names:
	align => alignment
	numrows => num_rows
	numcols => num_cols
	flags_  => flag

	remove the dwg_ent_insert scale_flag API. This is DWG internal only.

2018-06-27  Reini Urban  <rurban@cpan.org>

	ChangeLog: update for last month
	with gnulib's gitlog-to-changelog, clustered.

	cluster adjacent commit messages if their headers are the same and
	neither commit message contains multiple paragraphs.

2018-06-27  Reini Urban  <rurban@cpan.org>

	python DISTCLEANFILES

	portability: fix GNU make extensions
	hard-code all our test-data files
	test/Makefile.am:16: warning: :=-style assignments are not portable
	test/Makefile.am:16: warning: shell git ls-tree -r --name-only @ test-data: non-POSIX variable name
	test/Makefile.am:16: (probably a GNU make extension)

	stability: 2004 section map
	the extremely large HARTA_E_PRISHTINES_2004 dwg has an odd last
	AcDb:AcDbObjects section, which is misinterpreted as new section info, not
	the last section.
	It also misses now several section types.
	Only the 2007 variant decodes fine. All 2004 (r2010+) versions not.

	dwggrep: finish object fields
	add all known missing test fields.
	now only the TABLE name matcher is not yet implemented.

	FIELD: fix ODA bug
	value_string_length is of type BL, not T

	automake HAVE_PYTHON check
	skip test/xmlsuite with --disable-python

2018-06-26  Reini Urban  <rurban@cpan.org>

	alive.test: add example_r14.dwg
	This is also a supported version

	fix automake HAVE_LIBPS
	ac_cv_header_libps_pslib_h is set later, by AC_CHECK_HEADERS.
	programs/dwg2ps was never generated

2018-06-25  Reini Urban  <rurban@cpan.org>

	First test release 0.4.900

2018-06-25  Reini Urban  <rurban@cpan.org>

	api: add dwg_block_control, dwg_{model,paper}_space_ref
	dwg_block_control is easy, always the first object,
	and also dwg->block_control.
	but the canonical model and paper space headers are a bit tricky to get
	to iterate over it.
	fix the implementations and docs, and use the new API.

	the old api via dwg_obj_block_control_get_model_space from the block_control
	was awful and wrong.

2018-06-24  Reini Urban  <rurban@cpan.org>

	dwggrep: fix BLOCK_HEADER for r2010+r2013
	with r2010+r2013 the block_control.model_space is different from the original
	BLOCK_RECORD_MSPACE. We rather prefer 1F, the one from the header.
	Many entities went missing there.

	TODO: Fix the API iterators and docs, how to iterate over all entities.

2018-06-24  Reini Urban  <rurban@cpan.org>

	dwggrep: add pcre2 to appveyor

	dwggrep: fixup documentation

	dwggrep: extract print_match
	calling a func is faster than inlining it. less cache bloat.
	remove unneeded re_prepare, no .* embedding needed.
	const and restrict the args

2018-06-24  Reini Urban  <rurban@cpan.org>

	dwggrep: fix the jit, enable --type, --dxf
	PCRE2_PARTIAL_* needs a compiled index [1] or [2] re function, but we
	compiled only a simple (fast) matcher, so the jit always returned
	PCRE2_ERROR_JIT_BADOPTION.
	i.e. the compile options must match the match options.

	also enable the --type and --dxf option.
	for --type we need to set obj->dxfname globally for each object
	to a const string, no threat.

2018-06-24  Reini Urban  <rurban@cpan.org>

	dwggrep: add native pcre2-16 support
	no need to convert r2007+ strings to UTF-8, match them
	directly with the pcre2-16 matcher

	But the JIT matcher is still broken, never worked.
	substring search works fine though.

2018-06-23  Reini Urban  <rurban@cpan.org>

	dwggrep: more entities and features
	and fix strcasestr

	dwggrep: more robust probes and fallbacks
	no regex support when pcre2 is not available. (no gnu regexp, sorry)
	fix the configure probes,
	add my strcasestr fallback

	add dwggrep
	try pcre2 jit, and then simple substring matching.
	not handling prec2-16/r2007+ texts yet.

	doc: texi updates and fixes

	perl: remove generated swig files
	they can be easily generated. it was useful to see
	API changes though

2018-06-23  Reini Urban  <rurban@cpan.org>

	python: case-sensitive LibreDWG name
	renamed from libredwg.

	We've put the module name for consistency into the dwg.i
	I have no idea if the binary can stay lower-case, or needs
	to have the same name, but the comment seems to mandate the
	same case, just a prepended _

2018-06-23  Reini Urban  <rurban@cpan.org>

	distcheck: dwg2ps.1 oddity
	now install it, even if the binary might be not built

	distcheck: *.1 are generated in srcdir
	for a while already

	python: fix libredwg.py distcheck
	Both swig-generated files are put into srcdir, not builddir with swig-3.
	With swig-2 I think they are in builddir, as seen on travis.
	We need at least the .py in builddir.

	perl: add needed deps
	to compile perl XS packages.
	cygwin: libcrypt-devel

	perl: no install req, try LD_RUN_PATH=
	and fix the path to src/.libs from srcdir to builddir

2018-06-22  Reini Urban  <rurban@cpan.org>

	skip check perl
	when the shared libredwg is not installed.
	It is too problematic to link to the uninstalled so: linux, osx, windows

	doc: add Bindings chapter

	TODO: update

2018-06-22  Reini Urban  <rurban@cpan.org>

	configure: allow PERL, check --disable-python
	allow overriding PERL=cperl5.26.1 e.g. for using ccache.
	allow swig bindings for perl when python is disabled,
	because we ship the generated swig_perl.c

	I really need to cache cperl and it's used ccache compiler,
	to be able to use ccache in the perl binding.

	remove bindings/perl/Makefile.in generation. forgot that earlier.

2018-06-22  Reini Urban  <rurban@cpan.org>

	rename swig_wrap_* to swig_*.c
	harmonize the generated swig wrapper names.

	and improve the perl flags a bit.

2018-06-22  Reini Urban  <rurban@cpan.org>

	add perl bindings WIP

2018-06-22  Reini Urban  <rurban@cpan.org>

	swig: smaller API
	we don't need duplicate struct accessors generated by swig
	for all the struct fields and via functions.
	strip the functions.
	also avoid the duplicate API types, only use the dwg.h types.

	bindings/dwg.i            |   169 +-
	bindings/perl/LibreDWG.pm |  1031 +-
	bindings/perl/swig_perl.c | 40775 ++--------------------------------------------------------------
	src/dwg_api.c             |     2 +-
	4 files changed, 1185 insertions(+), 40792 deletions(-) bindings/dwg.i            |   169 +-

2018-06-22  Reini Urban  <rurban@cpan.org>

	fix swig bindings
	do not use -importall, rather include our 2 headers manually.
	once verbatim and once via %include.

2018-06-22  Reini Urban  <rurban@cpan.org>

	api: cleanup by checking the perl swig bindings
	fix _3DSOLID
	and a couple more undefined classes,
	only detected by the new perl binding.

	add many missing dwg_ent_ field functions
	and many other typos or renames.

	add missing variable entity getters
	we can now check fixedtype

	add missing dwg_obj_obj methods and
	more missing or wrong obj methods

2018-06-22  Reini Urban  <rurban@cpan.org>

	api: ref, object rename, harmonization
	rename several API funcs for proper prefixes.
	Dwg_Object* methods are using the dwg_object_ prefix,
	Dwg_Object_Ref* getters use dwg_ref_get_

	dwg_api:
	dwg_obj_polyline_*get_*points(Dwg_Object*) => dwg_object_polyline_*
	dwg_obj_get_*(Dwg_Object*) => dwg_object_get_*
	dwg_obj_object_get_index(Dwg_Object*) => dwg_object_get_index
	dwg_obj_ref_get_object(Dwg_Object_Ref*) => dwg_ref_get_object
	dwg_get_type => dwg_object_get_type
	dwg_get_dxfname => dwg_object_get_dxfname

	Add the dwg_object_get_fixedtype API.

	And then rename two uncommon signatures taking Dwg_Object_Ref*.
	dwg.h:
	dwg_ref_get_object(const Dwg_Data *restrict dwg,
	                   Dwg_Object_Ref *restrict ref)
	=> dwg_ref_object
	which clashed with dwg_ref_get_object taking a Dwg_Object_Ref*,
	which was before named dwg_obj_ref_get_object.

	dwg_ref_get_object_relative(const Dwg_Data *restrict dwg,
	                            Dwg_Object_Ref *restrict ref,
	                            const Dwg_Object *restrict obj)
	=> dwg_ref_object_relative (also unused)

2018-06-22  Reini Urban  <rurban@cpan.org>

	add a Windows paragraph to README

	unknown: add dxf, replace offset with handle
	this is also unique and can identify the object in the matching DXF.
	so we can actually match the proper values and types.

	more regen alldwg.inc fixes

	alive.test: print the failing log

	check-dxf: fix, and add r14
	the second loop was broken

	unknown: skip regen alldwg.inc
	add a special regen-unknown target to generate alldwg.inc
	add missing DIST declarations: logs.sh, alldwg.inc (which triggered
	the generation on distcheck, an out-of-dir configure)

	forgot to EXPORT dwg_absref_get_object
	the fixes SWIG bindings for perl found that out.

2018-06-21  Reini Urban  <rurban@cpan.org>

	add examples/unknown
	a sample program to find the most likely
	fields for all unknown dwg entities and objects.

	gather all binary raw data from all unknown dwg entities and objects
	into examples/alldwg.inc.
	with the available likely fields try permutations of most likely types.

2018-06-21  Reini Urban  <rurban@cpan.org>

	bump DWG_ERR_CRITICAL to CLASSESNOTFOUND
	i.e. VALUEOUTOFBOUNDS will not stop processing DWGs
	and will not report the process as failed.

	error: add 2004,2007 realloc -1 error propagation
	pass back proper error status bits, esp. on r2004 + r2007.
	ignore a return val of -1 for realloced obj's.
	Now most DWG return 0. Some exotic ones still crash though:
	Helix and r11.

	more diagnostics
	print more read values, and skip duplicates earlier read

	decode: no duplicate xdic_missing_flag logging

	r11: check empty object->hdl

2018-06-21  Reini Urban  <rurban@cpan.org>

	better HANDLE diagnostics
	try to accept new code 0xe (REGION.history_id r2007+),
	print codes in hex.
	print failing/invalid handles

	inline dwg_decode_handleref into dwg_decode_handleref_with_code
	to get the original wanted code pointer type.

2018-06-21  Reini Urban  <rurban@cpan.org>

	print: harmonize HANDLE printing

	We log TF and TFF values with -v5
	just add the field name and type

2018-06-21  Reini Urban  <rurban@cpan.org>

	start with ACIS/SAT version 2
	which is most likely a 5 byte link to a blob of their fork of ACIS 7.0
	called now ShapeManager, with all the versions.
	But all the different ACIS data has in version 2 the same content:
	5: BL + 0d254c8109 + 0: BL, so there must be something else.

	There is EED data attached to it, with 0-2 handles and several code 70 and one 71.
	The handles are to APPID instances: ACAD_OBJECT_CHANGE_GUID and ACAD_STEPID.

2018-06-20  Reini Urban  <rurban@cpan.org>

	stability
	fix a few dead stores,
	fix a dwg2SVG INSERT problem,
	propagate more errors back.

	free: a few more minor leaks
	dxfname leak: typically 2Kb
	eed: also about 2Kb

	free: fix the str_dat leak
	typically 20Kb

	free: remove dwg_free_handleref
	just free the ref, and handle the dwg->object_ref[] later.
	re-enable dwg->object_ref[] to catch all dwg_decode_handleref refs.

	free: fix dwg->object_ref
	this is one array. skip the linear seearch in dwg_free_handleref, just free
	the ref, the array is free'd later at once.
	free the classes later, they are need to dispatch var-types.

	free: call hash_free
	7KB typically

	free: enable free for num_objects < 1000
	to catch regressions. Performance is only a problem for big DWGs.
	dwglayers accidentally always used dwg_free.
	improve dwg_free_handleref

	free: improve dwg_free_eed
	handle data, raw and eed uniformly

	silence dwglayers handle errors

	check decompress_R2004_section errors

	change all object indices to BITCODE_BL (2/2)
	forgot some

	change all object indices to BITCODE_BL
	to match the actual serialized data type. long is way to large on 64bit.

	rename idc variables
	to index and i. in encode and decode

	encode: fix critical object_map index bug
	we mixed up index with handle, leading to an object overflow.

	encode: add and fix dwg_encode_eed
	wrong size, leading to subsequent overflows.
	add #ifndef IS_RELEASE VECTOR overflow checks in encode

2018-06-19  Reini Urban  <rurban@cpan.org>

	disable TABLE again
	fails even with r2000-r2007, but not much missing.

	free: fix TABLE subclassing
	check for wrong type

	encode: harmonize EED loop
	there's no dwg_encode_eed() (yet), but at least harmonize
	both code paths. Writing the entity EED is still broken WIP.

2018-06-19  Reini Urban  <rurban@cpan.org>

	encode: fix bit_chain_alloc
	There is one overlarge XRECORD, size 53014 > CHAIN_BLOCK (40960).
	When adding this object to dat, it overflowed the Bit_Chain heap.

	Also remove the superflouos DWG_SUPERTYPE_UNKNOWN logic from the encoder,
	rather do this in classes.inc

2018-06-19  Reini Urban  <rurban@cpan.org>

	harmonize test-data Constraints_*.dwg file names
	Strip the version suffix, which is already defined by the dir.
	This avoids x_2004_2004.log and dxf files also.

	add common_entity_data.spec

	leave with DWG_ERR_VALUEOUTOFBOUNDS early
	on wrong class_versions, which are usually 0-2

2018-06-19  Reini Urban  <rurban@cpan.org>

	add 3BLL type as documented, enable TABLE <= r2007
	BLL uses 3 bits for len, but it is documented to use 3B: 1-3 bits
	stopping at the first 0 bit. Which would leave us with
	0: 0, 10: 2, 110: 6, 111: 7. 100 for 4 or 101 for 5 would be invalid.
	But this documentation is wrong, this encoding is not used for
	REQUIREDVERSIONS, picture_size.

	Add the unused documented variant as 3BLL type.

	Use the old TABLE pre-2010 as STABLE, and as DEBUGGING since r2010+.
	dxf: Use the entity dxfname for variable types: ACAD_TABLE.
	Fixes some entities for the picture_size.
	Trace more common entity data.

2018-06-19  Reini Urban  <rurban@cpan.org>

	refactor: add ACTION, TABLE: call TABLECONTENT
	Now we separated the initializer from the field handler.
	Enable experimental TABLE r2010+ support, by
	allowing calling the sublassed TABLECONTENT decoder, from within
	TABLE.

	All modules define now its ACTION globally for dwg.spec and classes.inc

2018-06-18  Reini Urban  <rurban@cpan.org>

	api: fix the public dwg_add_* decls
	checked against classes.inc and its DEBUG_CLASSES setting

2018-06-18  Reini Urban  <rurban@cpan.org>

	api: separate dwg_decode_OBJECT and dwg_add_OBJECT
	dwg_decode_OBJECT calls now dwg_add_OBJECT, but dwg_add_OBJECT
	can be called separately, for the import modules.
	There's also a new realloced = dwg_add_object(dwg); API.

	Adjust the docs.

	See [GH #19]

2018-06-18  Reini Urban  <rurban@cpan.org>

	smoke.sh: remove arm workarounds
	arm cross can compile now src/out_dxf properly

	docs: update status

	add unhandled LAYOUTPRINTCONFIG class
	but only found the class, no object instance yet.

2018-06-18  Reini Urban  <rurban@cpan.org>

	dwg2svg2: simplify API usage
	searching for the block_header is pretty stupid.
	we need to get the main block_control globally (its always the first object),
	and from this we get its mspace and pspace headers.

	Some DWGs replaced their tables with dictionaries, and there the
	headers will not be found this way.

2018-06-18  Reini Urban  <rurban@cpan.org>

	dxf: protect from empty ENT_REACTORS
	REGION on example_2013 has num_reactors 1 but no attached reactor.
	This could happen on a missing handleref object

2018-06-18  Reini Urban  <rurban@cpan.org>

	disable TABLE entity
	With r2010+ a TABLE needs to jump to the TABLECONTENT object,
	but without the initialization, just the fields.

	we really need to split up DWG_OBJECT into init and fields methods,
	see also [GH #19] where we want to split it up into action_OBJECT
	for the fields and add_OBJECT.

2018-06-18  Reini Urban  <rurban@cpan.org>

	add better example DWG and DXF for test coverage
	Convert the better example_*.* coverage test file to all versions.
	Adjust the coverage TODO report.

2018-06-18  Reini Urban  <rurban@cpan.org>

	dxf: extend 2018/example_2018
	added a couple of missing objects/entities.
	extend classes.inc and DWG_TYPE_ for these.
	Check for invalid TABLE.num_rows (with this 2018 TABLE)
	and mark it UNSTABLE.

	DXFIN import of the converted dxf fails with "Xdata wasn't read"

2018-06-17  Reini Urban  <rurban@cpan.org>

	dxf: add dxf_3dsolid WIP
	print the encrypted 1/3 strings.

	dxf: fix GROUP
	parenthandle 330 as AcDbEntity not in the AcDbGroup subclass

	dxf: fix STYLE flags, IMAGE
	add two missing STYLE bits,
	fix IMAGE group 23, 340, 360
	fix WIPEOUT group 340, 360

	add dxf test scripts

	dxf: handle DIMENSION_ sub objects
	fix dxf groups of ins_scale 41-43
	fix subclass markers

	dwg2dxf: no dxf write on critical dwg read error
	but continue to next input file

	dxf: fix SOLID/AcDbTrace subclass marker
	and the pts groups: 10-13, not 11-14

	api: some more NULL ptr protections
	dwg_next_object, dwg_ref_get_object

	dxf: fix ATTRIB,INSERT subclasses

	dxf: fix ATTDEF subclass

	dxf: fix REGION subclass

2018-06-17  Reini Urban  <rurban@cpan.org>

	fix SPLINE r2013+
	with splineflags1 & 1 the scenario flips to 2
	fixes example_2018

	add -lm dependency to avoid writing nan values into DXF.
	rather skip wrong values then.

	add SPLINE flag DXF 70 support

2018-06-17  Reini Urban  <rurban@cpan.org>

	dxf: SUBCLASS (AcDbText) also for r2018+

	dxf: harmonize dxfb with dxf
	add all the recent dxf improvements,
	dxf: write 5 handle since r11, not r2000+.
	removed unused COMMON_TABLE_CONTROL_FLAGS macro args

	suffix.inc: more strdup decl
	some linux libc still complains about lack of a strdup
	decl.

	dxf: fix asan overflow
	global-buffer-overflow, harmless but asan treats it as fatal

	api: fix Undefined allocation of 0 bytes
	scan-build complains about CERT MEM04-C; CWE-131

	fix various scan-build warnings
	initialize *src at decompress_r2007,
	help hash struct _hashbucket vs 2*uint32_t confusion

	dxf: typo DIMFXLON is B not BD

2018-06-16  Reini Urban  <rurban@cpan.org>

	dxf: fix AcDb3dPolylineVertex
	add subclass markers,
	fix the 0 entity names
	put the flag behind the point.

	but acad crashes on import AcDb3dPolylineVertex

2018-06-16  Reini Urban  <rurban@cpan.org>

	dxf: fix LWPOLYLINE closed flag
	interestingly the flag 70 needs to be after the num_points 90
	to have an effect at the closed flag 70 & 1.
	with 90 after 70 closed is ignored, another acad bug

	dxf: more work on mspace hdr
	try several methods to get the right Model_Space header.
	if there's non, just skip the BLOCKS section then.

	dxf: skip MLINE with out_dxf
	looks good, but crashes on acad import

	api: simplify the iterator APIs
	we don't need the last argument, as we can use the object only.
	Just check its type.

	disable TABLECONTENT, TABLEGEOMETRY
	we do have coverage for those now.
	They fail on out_dxf, but only with wrong geom_data substructure values.
	Nevertheless

	dxf: refactor mspace BLOCKS

	dxf: fix BLOCKS for mspace
	Analog to prev. the ctrl->model_space object did not contain the
	default *Model_Space block records, esp. for AEC dwgs.

2018-06-16  Reini Urban  <rurban@cpan.org>

	dxf: add missing LAYER flags
	add plotflag 290
	and linewidth 370.

	fatal in AEC dwgs

2018-06-16  Reini Urban  <rurban@cpan.org>

	dxf: no DICTIONARY as AcDbLayerTableRecord
	This reveals btw an acad 2018 bug

	Typo in dxfin error message:

	Error in LAYER Table
	Expected 0 LAYER or 0 ENTAB, received 0 DICTIONARY on line 6244.
	Invalid or incomplete DXF input -- drawing discarded.

	0 ENTAB => 0 ENDTAB

2018-06-16  Reini Urban  <rurban@cpan.org>

	dxf: fix BLOCKS for pspace
	the ctrl->paper_space object is empty, we need to use the
	header from the header_vars to get all pspace blocks.

	fixes importing many r2004+ dxfs.

2018-06-16  Reini Urban  <rurban@cpan.org>

	dxf: special-case _B binary
	fix DIMASSOC to 280,
	fix some 290 booleans to 0/1,
	wrap 90-99 int32_t to signed ints. there are some -1, -2 values, i.e. MLEADERSTYLE.

	dxf: importing Entity MLINE crashes WIP
	r2004+

	dxf: special-case VALUE_RD
	and use it with points.
	do not rad2deg LWPOLYLINE bulges.

	dxf: enable DXF groups 80
	needed for some xdata. and warn on invalid or unknown
	xdata dxf groups. This fixes 2007/Spline with 80 and 83 BL xdata groups.

2018-06-15  Reini Urban  <rurban@cpan.org>

	dxf: fix r2018 $ACADMAINTVER, AcDbArc
	Arc is a mandatory subclass of Circle

	dxf: fix xdata handle, enable XRECORD

	dxf: fix r2007+ truetype styles
	needs mandatory 1001, 1000, 1071 fields.
	hard-code the 1071 flag to 34 for now.

2018-06-15  Reini Urban  <rurban@cpan.org>

	dxf: various fixes LWPOLYLINE, MLINESTYLE, ...
	move DXF parenthandles before the subclass markers,

	add r2010+ vertexids to LWPOLYLINE, fix closed flag bit.

	fix the broken REPEAT_CN macro (broke MLINESTYLE)

	simplify out_dxf: VALUE macro. separate fmt from buf and \r\n.

2018-06-15  Reini Urban  <rurban@cpan.org>

	2007: silence the handle stream logging
	on -v4 pre-r2007. This is only really needed for 2007+
	And there make it look better

	.gitignore: more gcov and sample output

2018-06-15  Reini Urban  <rurban@cpan.org>

	dxf: add check-dxf target
	It does not really check the dxf's, but creates a lot,
	for importing checks into acad.

	The real DXF check is in programs.

2018-06-14  Reini Urban  <rurban@cpan.org>

	dxf: fix more header vars
	add HEADER_H, CMATERIAL, INTERFEREOBJVS, ...
	XRECORD still crashes acad, though it does look good now.

	dwg: fix some header_vars mischmasch
	esp. TREEDEPTH was off by one, a whole section was off.

	dxf: improve TABLES stability
	A table layer entry can also be a DICTIONARY, skip that then.
	check all types

	decode: skip invalid hash_set 0
	empty handle values are invalid, only appear with unhandled classes.

	dxf: add 330 parenthandle
	it should be under AcDbObject, but is in some cases under the
	subclass.

	dxf: always write a handle
	even for a null handle value. this is needed for
	DICTIONARY pairs

	dxf: r2007+ header fixes
	add several missing header vars

	dxf: 2004+ header fixes
	various, tested with r2007.
	this imports now until "Updating header seed."
	r2010 goes even until DICTIONARY.

2018-06-14  Reini Urban  <rurban@cpan.org>

	fix make dist, skip unreleased test-data files
	The release is made on travis from a fresh checkout.
	But locally, with .git, there can be many unrelated big
	DWG's lying around under test-data.
	Take only the files which are under git.
	With huge DWGs > 40MB make distcheck became unusable.

	This uses some GNU make extension := and $(shell ).  BSD makes understands
	it also.  Comment this out when your special make does not take that.

2018-06-14  Reini Urban  <rurban@cpan.org>

	dxfb: fix header
	and remove logging

	rm more .bak test dwgs
	These were accidentally committed.

	dxfb: add _REACTORS, _XDICOBJHANDLE
	but it fails much earlier, in the header at address 90 with a r2000 DXFB already

	dxf: skip empty xdicobjhandle
	ACAD_XDICTIONARY fields

2018-06-14  Reini Urban  <rurban@cpan.org>

	dxf: special-case PLACEHOLDER
	this is actually the only fixedtype, not just variable,
	which has no dxfname. checke the type instead.

	DXFIN r2004 still fails, without proper error message.

2018-06-14  Reini Urban  <rurban@cpan.org>

	dxf: add block iterator
	write the dxf BLOCKS section with all BLOCK .. ENDBLK entities,
	for model space and paper space.

	With these changes we can finally DXFIN (i.e. acad import)
	a full r2000 DXF.

2018-06-14  Reini Urban  <rurban@cpan.org>

	add dwg to all object/entity spec handlers
	e.g. to access the header vars or to resolve handles

	dxf: fix BLOCK_CONTROL num_entries

	change resolve_handle warning
	from Object not found to Object handle not found.
	This warning is mostly harmless.

2018-06-14  Reini Urban  <rurban@cpan.org>

	dwg2dxf: allow multiple input files
	add -o to name the output for a single input file only.
	use dwg2dxf *.dwg is so much easier.
	for the single file filter case we already have dwgread.

	restrict regen-man to POSIX only. didn't work without ./ prefix,
	a help2man limitation.

2018-06-14  Reini Urban  <rurban@cpan.org>

	in_dxf: extend scanf double
	we still had compiler warnings

	dxf: improve var types RECORD names
	always use the dxfname, not our internal objectname.
	this keeps our names nice, and DXF correct.

	dxf: dxf_cvt_tablerecord with r13 already
	do the allcaps conversion of builtin table names with r13+

2018-06-13  Reini Urban  <rurban@cpan.org>

	trace: change Unhandled Class object
	to display the object index and handle value, not the position.
	With a handle we can see if it is referenced and compare to the
	subsequent object_map resolver errors

	dxf: remove most minimal
	See [GH #21]. There's not much need for minimal, just
	for writing header and entities. But not for the object fields,
	there are merely version specific.

	dxf: add XDICOBJHANDLE dxf 360

	dwg: move common fields reactors, xdicobjhandle up
	to the common Dwg_Object_Object and Dwg_Object_Entity structs.
	now together with the relevant num_ and binary fields.
	and they don't pollute the entity specific structs.

	dxf: disable XRECORD for now
	and return no error on DUMMY, not DWG_ERR_UNHANDLEDCLASS

	dxf: add reactors to all objects
	even if not used (e.g. not used in each CONTROL table)

	dxf objects: simplify REACTORS
	XDICOBJHANDLE(3) not yet implemented (and unnecessary for now)

	dxf: LWPOLYLINE bulge is also in radian
	I think the DXF group 42 is in degrees. Found no samples yet.

	dxf: convert angles
	add rad2deg to all angles. not yet in_dxf*.c

	dxf: start fixing objects: DICTIONARY*, ...
	fixed DICTIONARY, DICTIONARYWDFLT, PLACEHOLDER, MLINESTYLE (almost).
	set obj->fixedtype when reading.
	ACDBPLACEHOLDER has no SUBCLASS marker in the DXF.
	Some DXF names have a ACDB prefix, maybe rename them back (again).

	dxf: fix REACTORS group -5 => 330
	This fixed reading ENTITIES.
	Now we are struck at the OBJECTS section.

	dxf: move PROXY_OBJECT from variable to switch
	it does not survive the klass 500-num_classes check,
	and leads to an invalid dwg->dwg_class[] access.

	dxf: move 100 AcDbEntity after Reactors

	dxf: BLOCK_RECORD table only r13+
	and check against libdxfrw. oh my, so many mistakes and TODOs.
	we need to get rid of --low again, and fix most minimal checks to
	version checks

	resort the dwg_version_as check
	put the most likely upfront
	as we have a linear search.

	up object_map tracing to -v4 HANDLE

	dwgrewrite: return only critical errors
	as error level result

	fix realloced retval for dirty_refs
	dwg_decode_add_object() does not always realloc anymore.
	only return -1 when it did, otherwise return the uncritical error bits

	ignore CRC mismatch warnings on r2000 for the 1st section
	We really need to know the numbers of setions first, to
	know if its broken or not. These were all false negatives.

	unify CRC mismatch warnings
	print them all in %X hex, not %x or %d

	ignore warnings on invalid handles
	now we get about the same amount of Object not found
	errors as there are unknown/unhandled objects, and someone is
	pointing to it.

2018-06-13  Reini Urban  <rurban@cpan.org>

	dxf: add missing LINE,... pts. POLYLINE special-case
	before r2004 there was no LWPOLYLINE in a DXF,
	only a POLYLINE. need to convert to VERTEX_2D later.

	there was special DXF DECODER/ENCODER logic in the spec
	missing out on the DXF case.

	simplify minimal handling on some objects on the switch,
	not to run into MTEXT again

2018-06-13  Reini Urban  <rurban@cpan.org>

	dxf: fix VIEWPORT
	add missing fields 68 on_off and 69 id.
	both hardcoded to 1 for now, as it is not stored in a DWG r13+

	dwg2dxf: skip free (filename_out) also
	not needed, unless you are a valgrind enthusaist.

	dxf: fix major DICTIONARY --minimal bug
	with --minimal it just skipped over to MTEXT, and crashed there.

	document compile-time strcmp as valid
	The strcmp with a compile-time # pasted token and a constant is
	really being optimized away at compile-time https://godbolt.org/g/AqkhwL
	Impressive.

2018-06-11  Reini Urban  <rurban@cpan.org>

	rename branches, smoke policy
	don't smoke the open work/ branches anymore.
	just master, the tagged pre-releases and any smoke/ branches being worked on.

2018-06-11  Reini Urban  <rurban@cpan.org>

	Fix windows cr cr lf
	Ensure fopen wb mode everywhere for DXF.
	The windows msvcrt fwrite adds a \r before every \n, so we get it twice.

	Fixes [GH #17], thanks to Shing Liu @eryar for the report and screenshot.

2018-06-11  Reini Urban  <rurban@cpan.org>

	skip free with some programs
	time for 40MB DWG went from 3m to 7s, mostly console-out for the errors.
	This is with the new hash object_map. (without it was 2m)

	forget about valgrind reporting leaks. The kernel frees it better.
	The library is still leak-free of course.
	Closes [GH #18]

2018-06-11  Reini Urban  <rurban@cpan.org>

	errors: print even lower errors on success
	don't collapse < CRITICAL to 0 in dwgread, dwgwrite, ...

	stability: low error on obj_string_stream
	which is ignored.
	track dwg_decode_eed and handle errors properly, which could be disturbed by the
	previous obj_string_stream error.

2018-06-11  Reini Urban  <rurban@cpan.org>

	hash: fix the resize logic
	add elems for proper fillrate calculation,
	remove the resize size arg, not needed.
	don't realloc the array at resize, use a fresh zeroed space.
	this fixed getting back random wrong values after resize

	added hash tracing

2018-06-11  Reini Urban  <rurban@cpan.org>

	hash: allow 0 values
	use HASH_NOT_FOUND -1 as special not found return value,
	ie MAX_INT32.

	hash: use the new hash for the object_map WIP
	to speed up dwg_resolve_handle.
	looks a bit unstable though.

	hash: check against out of memory

	add int hash with linear probing
	written from scratch in 30 minutes.
	we disallow keys and values with 0, as they don't appear in the object_ref map.
	we also don't need to delete keys, so the implementation can do without
	tombstones (key -1), or a NOT_FOUND hash_get return value of -1.

	decode: fix free obj->eed[idx].raw
	because this could be a raw from a prev. idx.

	common.h: docs only

	dxf: strange AcDbText class separator expected
	move the AcDbEntity specific TEXT field upwards.
	skip non-public LWPOLYLINE flag values.

	dxf: move COMMON_ENTITY_HANDLE_DATA to the front
	dxf expects common data, like layer name, ltype, ... before the
	entity-specific subclass marker.
	it's a common AcDbEntity property after all.

	dxf: likewise rename section to table
	HANDLE_NAME does the name look in a table record,
	not a section

	dxf: rename dxf_write_handle to dxfb_cvt_tablerecord
	it's not a handle, it a table record entry.
	it's not a writer, it just converts/normalizes some builtin names.

	dxf: empty ctrl->paper_space with r2010+

2018-06-11  Reini Urban  <rurban@cpan.org>

	dxf: LTYPE handle 6 => name, not hex
	Now all tables and blocks can be read by acad.

	What other handles are resolved to their name in DXF?
	We eventually need to replace e.g.
	FIELD_HANDLE (DIMTXSTY, 5, 340)
	with
	FIELD_HANDLE_NAME (DIMTXSTY, 5, 340, STYLE)
	to resolve with DXF to the name in the section.

2018-06-11  Reini Urban  <rurban@cpan.org>

	dxf: adjust control 70, add BLOCK_RECORD
	the BLOCK_RECORD table records are apparently mandatory.
	acad complains when missing.

2018-06-10  Reini Urban  <rurban@cpan.org>

	dxf: always set the global *_control objects
	we need at least the handle for dxf

	dxf: fix TIMEBLL format
	add the double calculation (for the binary dxf).
	fix the trace and DXF output.

	doc: PythonCAD R38 also uses LibreDWG
	http://pythoncad.sourceforge.net/dokuwiki/doku.php?id=r38_roadmap

	dxf: tables are mandatory
	not optional.

	dxf: fix AcDbDimStyleTable
	handle code 105,
	no special-case for num_entries
	add missing group 71

	dxf: progress with tables
	add the missing the layer table subclasses,
	special-case the control handle, and the BLOCK_HEADER name.
	const some objects
	remove all the prev. added RECORD () for the object names.

	dxf: avoid empty numbers
	only strings may be empty. numbers will be changed to 0

	dxf: strip ending .00000000000
	for .0 and .5. It's just a heuristic but catches most cases.
	I don't want to invest much more into this mere beauty issue.

2018-06-10  Reini Urban  <rurban@cpan.org>

	dxf: fix wrong LTYPE type description
	which has DXF type 3, not 48.

	add a check to avoid empty numbers, only allowed for strings.
	rather print 0 then

2018-06-10  Reini Urban  <rurban@cpan.org>

	check-dwg-valgrind: less verbose, small files only
	we only care for segfaults, not the field tracing.
	the log file already gets huge.

	restrict check-dwg-valgrind to DWGs size < 10M,
	check-dwg-valgrind to size < 40M.

2018-06-10  Reini Urban  <rurban@cpan.org>

	alive.test: rm core file
	writers may create core files, which may fail the distuninstall test

2018-06-10  Reini Urban  <rurban@cpan.org>

	fix reading huge files
	Fixes reading DWG files >40MB with many elements exceeding
	the previous hardcoded limits. E.g. this example had
	789388 objects and 2453916 object refs.
	Note that the decompressed sizes are bigger than the filesize,
	roughly by factor 2.0.

	It is really slow though.
	The object_refs hash table really improves it from 2m to 5s.

	See https://savannah.gnu.org/bugs/index.php?28503

2018-06-10  Reini Urban  <rurban@cpan.org>

	section decode stability
	fix some uint32_t types (not unsigned long on amd64),
	fixing some overflows.
	check and abort on more 2004 and 2007 invalid section sizes.
	thanks to llvm scan-build

	CI: remove --enable-write

	2004 stability: skip empty or wrong sections
	I got one broken 2007 DWG, which when saved as r2004 is also broken.
	Don't segfault, at least error gracefully.
	See https://savannah.gnu.org/bugs/index.php?28503

	2007: more file_header logging
	add len2, which is always 0.

	in_dxf: sscanf %lf for double
	clang warning: format specifies type 'float *' but the argument has type 'double *'

2018-06-09  Reini Urban  <rurban@cpan.org>

	dist: add regen-man, fix distcheck
	Stabilize the creation of the man files.
	They are only generated by the maintainer, not generally.
	Copy them from srcdir, not builddir.

	Add temp. logs to CLEANFILES

	Add PACKAGE_URL for bugreports

2018-06-09  Reini Urban  <rurban@cpan.org>

	errors: pass through 2007 errors
	don't report success with Failed to read 2007 meta data

	stability: improve reading broken r2007 files
	got a sample DWG which asserted. Convert assertions to proper errors.

	docs: update
	we are near the first release.

	programs: fix --help features

	default to --enable-write
	switch to --disable-write

	xmlsuite: Helix => HELIX
	and fix another classes overflow.

2018-06-09  Reini Urban  <rurban@cpan.org>

	move classes dispatcher into common.inc
	no various copies around. Now the variable typed classes
	are maintained in one and only place. Just the static ones have
	copied switch tables, but this number is fixed. There will be no
	new ones, so I'm fine with that.

	sort classes.inc by stability, entity, and names.

2018-06-09  Reini Urban  <rurban@cpan.org>

	major varying classes refactor
	abstract away the several types of class stabilities in the switch dispatcher:
	stable, untested, debugging and unhandled.
	In the next commit we will extract the class dispatchers into one single
	classes.inc.
	free is now a bit slower because of the dynamic strcmp dispatcher
	checks, but we win in massive consistency improvements. This could also be
	improved later by switching to dynamic enum/int checks.

	fix typo: DICTIONARYWDLFT => DICTIONARYWDFLT,

	add HELIX

	set obj->fixedtype, to the fixed enum DWG_OBJECT_TYPE, which is
	independent on the class index. then you don't need to check the dxfname
	anymore, and we can possibly get away with all the strcmp dxfname.
	This must be enforced by all importers (in_dxf*, ...) also.

	collapse the various SURFACE types to one SURFACE entity,
	in DXF there's only one SURFACE entity.

	Fixed various dead-code issues in VBA_PROJECT, MULTILEADER. Some latest
	changes were hidden behind DEBUG_*. Now not anymore.

2018-06-09  Reini Urban  <rurban@cpan.org>

	appveyor: deploy as pre-release
	not as draft anymore. They are stable enough to warrant
	official nightlies. Such a pre-release creates a tag,
	which triggers a travis make dist deploy.

	Before I had to manually trigger each drafted release,
	which you didn't see. Now it goes directly to public pre-releases.

2018-06-08  Reini Urban  <rurban@cpan.org>

	dxf: cleanup from prev. errors refactor

2018-06-08  Reini Urban  <rurban@cpan.org>

	rename AcDbField to FIELD, tested ok
	found an example with it.
	Looks broken at childs[0] [H 360]
	and then at evaluation_error_msg [T 300].

	num_childs occurs twice. the first is unreliable. if >0 dec by one.
	but really num_childval 93 is better.

	FIELD and FIELDLIST are now tested ok.

2018-06-08  Reini Urban  <rurban@cpan.org>

	fix TABLE crashes
	with free. The TABLE fields look pretty wrong to me.
	Also add a DATATABLE skeleton

	errors: add to docs

	errors: add DWG_ERR_CRITICAL for programs
	Don't report errors if less severe than DWG_ERR_CRITICAL.
	i.e. DWG_ERR_VALUEOUTOFBOUNDS.
	Same for the high-level dwg API: dwg_read_file, dwg_write_file
	dxf_*_file.

2018-06-08  Reini Urban  <rurban@cpan.org>

	errors: pass through decode/encode/print/...
	The errors are now severity sorted bitmasks, and we pass it all through,
	just not the bits API, as this is functional without *error retval.
	We don't stop on any coding error, we just accumulate the error bits.

	Every dwg_TYPE_##token function returns now an error code.
	Flip the dwg_TYPE_variable_type() logic to return 0 on success
	and DWG_ERR_UNHANDLEDCLASS to switch to UNKNOWN_*

	Fix the annoying in_dxf char** warnings.

2018-06-08  Reini Urban  <rurban@cpan.org>

	errors: add error codes to decode_r2007.c

	errors: add DWG_ERR_CLASSESNOTFOUND

	errors: add error codes to bits.c/dwg.c

	errors: add error codes to encode

	errors: add error codes to decode
	but not yet through the dwg_decode_OBJECT path via dwg_decode_add_object.

	add .drone.yml for tea-ci.org

	Add .gitlab-ci.yml

	NanoSPDS marker classes
	This is a flexlm License Parser.
	Just classes, registered as entity, not found in entities though.
	Found in AEC and MAP dwg's

	dxf: special-case POSITIONMARKER dxf name
	and add some minor stuff

	add unsorted UNDERLAY, fix EXTRUDEDSURFACE
	change DUMMY, LONG_TRANSACTION to objects.
	DUMMY is never a proper object, it is just a generic dwg filer method. (proxies?)
	add some missing COMMON_ENTITY_HANDLE_DATA

2018-06-07  Reini Urban  <rurban@cpan.org>

	add GEOPOSITIONMARKER geojson
	at least rudimentary, with Text

	add unsorted EXTRUDEDSURFACE entity
	with known DXF fields. r2007+
	no coverage in any DWG yet. None of the SURFACE entities

	fix clang's dangling else warning

	.gitignore: ignore more

	TODO: check test coverage
	for missing entities/objects in our catch-all example_2000.dwg
	the best is actually 2018/example_2018.dwg with 21 entities out of 60.
	list all missing entities/objects to be added into a better all.dwg
	for better test coverage

	print: tighter logging
	print UNKNOWN bytes tighter without space.
	print points as (...) list

2018-06-06  Reini Urban  <rurban@cpan.org>

	dwg.h: fix some _RC to _BS
	only done in the spec previously with 323efd78ea,
	so we had a mismatch. only detected on windows.

	fix windows deploy: not the libtool wrappers
	Fixes #15
	The windows make install does not put the proper binaries into bin,
	so we went and copied it manually. But the wrong ones.

2018-06-06  Reini Urban  <rurban@cpan.org>

	extend xmlsuite
	add support for a couple of more elements, in fact
	all elements found in the prepared XMLs used for this test.

	Even some custom class Helix, which doesn't have a graphical
	representation in the DWG, only a class definition.

2018-06-06  Reini Urban  <rurban@cpan.org>

	docs: update Copyright headers
	for all recent significant changes

	windows: add declspec(dllimport)
	for external programs linking to the dll, ie
	where DLL_EXPORT is not set (libtool does this for us).

	doc update
	and rename the CRC field in header_variables
	to crc, to match the docs. Only uppercase matches DXF vars.

	free: FREE_IF objects

	dwgrewrite: default to r2000, stability
	write: don't error on empty fields or handles.

	more objects: GEOPOSITIONMARKER, CAMERA
	and some minor fixes: PLOTSETTINGS, MATERIAL.
	CAMERA should not be in any DWG, but maybe in a DXF or other format.
	rename some PLOTSETTINGS fields for consistency with LAYOUT.
	some crosschecks with the oarx docs.

	more plausible SUN fields
	light reorder. problem is that we don't have a SUN object in any
	DXF yet, just the class. will do that later.

2018-06-06  Reini Urban  <rurban@cpan.org>

	more SUN
	found documentation. it's not a table entry (no name),
	it's rather a singleton.
	now we have 46 bits unknown bits left (some doubles: direction,
	altitude, azimuth?), and the order is yet unknown.

	fix MATERIAL RC to BS types.
	add some more SUBCLASS markers from newer DXFs

2018-06-05  Reini Urban  <rurban@cpan.org>

	add SUN, OBJECT_PTR
	SUN misses 11 byte/3 bit. OBJECT_PTR not yet tested

	add unsorted fields for PLOTSETTINGS, LIGHT
	dxf: add all the missing dxf SUBCLASS markers (with help from the ARX docs),
	  also table control objects.
	add field docs for PROXY_ENTITY, LWPOLYLINE, MLINESTYLE,
	fix dxf output for LWPOLYLINE (with bulges and widths),
	rename WIPEOUTVARIABLE to WIPEOUTVARIABLES

	api: 3dsolid, spline, mline, dictionary
	several api fixes.
	do not use an Entity/_ent prefix for non-entity substructs.

	doc: fixup bits.h endcode

	dxf: fix some MTEXT groups
	and rename some fields, add some docs.

2018-06-04  Reini Urban  <rurban@cpan.org>

	api: more const, restrict, docs
	also replace all BITCODE_BD with double.

	2010: improve stability
	can now read even the prev. failing AEC DWGs.
	fix setting the ent->color.name (not alloced)
	skip invalid EEDs
	skip invalid and unknown objects

	fix some -Wformat warnings

2018-06-04  Reini Urban  <rurban@cpan.org>

	unify REPEAT macros
	move them to the common spec.h. Just decode has different variants,
	with calloc.

	add a couple of unchecked variants, when either the type
	or a constant int make the rcount overflow check useless. To
	avoid compiler warnings.

2018-06-04  Reini Urban  <rurban@cpan.org>

	2010: adjust TODO

2018-06-04  Reini Urban  <rurban@cpan.org>

	2007: fix section_string_stream for overlarge data_size
	The overflow logic with hi_size was wrong. Too small type.

	We can now read many AEC drawings with a data_size > 0x8000
	and >300 classes. E.g. Autodesk Architectural Desktop 2007.
	But some of them are still problematic.

	Allow reading r2010+ now with a tarball release, and enable
	the xmlsuite for it. But programs/alive.text does not work yet with
	Leader_2010+: dwg2dxf

2018-06-04  Reini Urban  <rurban@cpan.org>

	2010+: enhance stability, update docs
	make check and most DWGs pass now.

	stability:
	  skip tables/vectors with more than 0x1000 entries: REPEAT,
	  reactors.
	  fix entity picture size (IMAGE, WIPEOUT) from BLL to BL, but this is
	  still buggy for 2010+. skip it.
	  skip empty table names.
	  dxf: skip unknown objects and tables, i.e. some newer VIEWSTYLE tables.

	test: skip the DXF comparison check, as it is not ready yet.
	the diff became too large.

2018-06-03  Reini Urban  <rurban@cpan.org>

	2010: fix the remaining stream offsets
	harmonize entities with objects.
	Now most fields can be read, just a few are broken.
	The 2010 DWGs itself report success.

	2010: add UMC unsigned type for handlestream_size
	and revert the old object map offsets to signed MC.
	This fixes now most Objects, just one still broken.
	Now Entities are left.

	bits: fix MC type to unsigned
	it cannot be negative at all.
	Fixes the r2010+ objects with negative Hdlsizs,
	but broke many earlier dwgs.

	2010: fix object hdlpos
	+ 8.
	Now just the bit_read_MC is broken, sometimes returning negative values.

	2010: fix object bitsize calculation
	8*size - handlestream_size
	the object string stream is now correct, missing just the handle stream offset.

	2010: fix Header offsets
	The string and handle offsets are also correct now.

2018-06-03  Reini Urban  <rurban@cpan.org>

	2010: fix Classes section_string_stream endbit
	8*24 = 192: bitsize + 191

	Now we can read all the 2010-2018 Classes

2018-06-03  Reini Urban  <rurban@cpan.org>

	dxf: fix XRECORD objid_handles
	wrong order of arguments. Only relevant for out_dxf

	api: add missing restrict

	api: add several table/handle helpers
	rename dwg_obj_ref_get_abs_ref to dwg_ref_get_absref
	       dwg_obj_reference_get_object to dwg_obj_ref_get_object
	add dwg_ref_get_table_name (default: ByLayer), dwg_ent_get_layer_name (default: 0),
	remove dwg_ent_m?insert_get_ref_handle, dwg_ent_m?insert_get_abs_ref,
	  replaced by dwg_ent_m?insert_get_block_header.
	enhance dwg_obj_table_get_name: allow a DICTIONARY (e.g. a material or plotstyle handle)
	also.
	use it in the enhanced xmlsuite for common_entity_attrs().

	xmlsuite: various improvements
	simplify, add vertices, ...

2018-06-02  Reini Urban  <rurban@cpan.org>

	r11: more work on pre-R13 entities
	read all the remaining common entity fields.
	fix INSERT and the entity handle. WIP
	skip entities at an invalid size.

	performance: use the REFS_PER_REALLOC pool
	now also for dwg->object, not just for dwg->object_refs.

2018-06-02  Reini Urban  <rurban@cpan.org>

	after add resolve all objectrefs
	walk through the object_ref array and re-resolve all found objects.
	set dirt_refs when the object array was realloced, to skip using
	the cached handleref->obj, but re-assign it.

	add more restrict to the encode API

2018-06-02  Reini Urban  <rurban@cpan.org>

	testcases: silence -Wpragma-pack

2018-06-02  Reini Urban  <rurban@cpan.org>

	api: use -fvisibility=hidden to export only public funcs
	This mimics the default visibility on windows.
	Closes GH #13.

	Some internal unit-tests failed to work,
	they need to link to the object file also, not just the library.

2018-06-01  Reini Urban  <rurban@cpan.org>

	use $(WARN_CFLAGS)
	do not copy WARN_CFLAGS into AM_CFLAGS, rather
	allow changing it later and using it in CFLAGS.
	Before changing WARN_CFLAGS had no effect at all

2018-06-01  Reini Urban  <rurban@cpan.org>

	parent: change object uplink to objid
	Dwg_Object_{Object,Entity}:
	  change object to objid field. add dwg field.
	add 2 new API functions to return the Dwg_Object from the obj_obj,
	resp. obj_ent via the objid.

	Closes GH #11

2018-06-01  Reini Urban  <rurban@cpan.org>

	parent: SET_PARENT macros
	this doesn't yet fix the moving obj problem from #11, but it looks much
	better now. The next commit will fix the remaining link to the moving obj.

	refman: remove flymake temp.

	parent: move parent to the front for generic
	ensure structural integrity, ent_generic just casts the struct.
	also add a couple of testcases,
	remove the obsolete dummy fields from DUMMY, SEQEND and ENDBLK,
	add testcases for the parent API
	fix more parent setters in some structs, check if the child was even created.
	rename some childs to proper names.

	api: rearrange the c file a bit
	separate generic ent section.
	improve the docs for dwg_get_type.

2018-06-01  Reini Urban  <rurban@cpan.org>

	api: add functions to get the parents
	add dwg_ent_generic, dwg_obj_generic, dwg_tbl_generic types.
	add dwg_ent_generic_to_object, dwg_ent_generic_parent,
	    dwg_obj_generic_to_object, dwg_obj_generic_parent functions.

	Closes [GH #11]

2018-06-01  Reini Urban  <rurban@cpan.org>

	api: link most the complicated parent fields
	TABLE, TABLESTYLE, TABLEGEOMETRY, FIELD, LAYER_INDEX substructs.
	I might have missed some.

	See [GH #11]

2018-06-01  Reini Urban  <rurban@cpan.org>

	api: add parent field to each _dwg_{entity,object}_ENTITY
	See [GH #11].
	We have to jump through absurd hurdles in the API to get around that.
	The parent points to the _dwg_object_{entity, object}, which points
	via the object field to the _dwg_object.

	Also add parent fields to each subentity, such
	as e.g. MLINE_line - > MLINE_vertex -> MLINE,
	and HATCH.

2018-06-01  Reini Urban  <rurban@cpan.org>

	man: bump month to June 2018

	logging: display handles as hex
	to match with the DXF 5 and 330 groups. display the objid index also as hex.

	encode: disable write modules
	don't even compile encode and the DXF in_* modules,
	to save compile-time and object size.
	they are quite large.

2018-06-01  Reini Urban  <rurban@cpan.org>

	dwg: add unsorted MATERIAL fields
	needs CFLAGS="-DDEBUG_MATERIAL"

	so far the first two text fields: name, desc are known, the rest unknown.

2018-05-31  Reini Urban  <rurban@cpan.org>

	dxf: fix LTYPE table

2018-05-31  Reini Urban  <rurban@cpan.org>

	fix compiler warnings
	avoid unused functions warnings, add them to some if(0) {} dead block.
	add a LAYER_TABLE_FLAGS type specialization:
	  because of the LAYER flags RS type, not RC.

	now just the WIP in_dxf.c throws a lot of warnings.

2018-05-31  Reini Urban  <rurban@cpan.org>

	dxf: more loop stuff
	add DXF_BREAK_ENDSEC, SECTION(THUMBNAILIMAGE).

	but we will abandon that und use the alternate approach.

2018-05-31  Reini Urban  <rurban@cpan.org>

	api: add generic table getters
	the name of an entry,
	the entries as array of refs,
	and all the common fields of a table control object.

	rearrange internal layout, use COMMON_TABLE_CONTROL_FIELDS
	to guarantee a common control table layout, to access all entries
	from the obj, not the Dwg_Entity_OBJECT.

2018-05-31  Reini Urban  <rurban@cpan.org>

	api: add more table apis
	so far we only cover block, layer and appid tables.
	add generic dwg_obj_table_get_name, and
	dwg_obj_tablectrl_get_num_entries.

	TODO: dwg_obj_tablectrl_get_entry(index) and dwg_obj_tablectrl_entries - all
	and the API for the special control objects.
	not sure if the layout for all control objects is the same, to access
	the handles.

2018-05-31  Reini Urban  <rurban@cpan.org>

	doc: remove useless Macro call to cast prefix
	its not relevant, and clear to everybody.

2018-05-31  Reini Urban  <rurban@cpan.org>

	api: remove the entity init functions also
	this is the same as memset(0), affecting only the few geometric fields.
	it's distracting that all the common fields are unaffected.

	what would be useful would be to reset/init the common entity and object
	fields and handles, but there's no API for that yet.

2018-05-31  Reini Urban  <rurban@cpan.org>

	api: remove the wrong new/delete/free functions
	these were only entity specific, and didn't add them to the DWG
	an object consists of the generic Dwg_Object, a common-entity
	Dwg_Object_Entity and the specific Dwg_Entity_ENTITY.

	Use the dwg_add_ENTITY and dwg_free_object API instead.
	Closes GH #10

2018-05-31  Reini Urban  <rurban@cpan.org>

	api: add dwg_add_##ENTITY to the public API
	change the return value to the newly created object.
	also add the counterpart dwg_free_object() to the public API.
	src/free.h is now empty and could be removed. (later)

	The next commit will remove the wrong dwg_ent_ENTITY_new/delete/free
	functions from the API.  See [GH #10]

2018-05-31  Reini Urban  <rurban@cpan.org>

	api: warn about useless _new functions
	See [GH #10] and the note in the previous commit.

2018-05-31  Reini Urban  <rurban@cpan.org>

	api + doc: improve dwg_api for CIRCLE,LINE,ARC
	add const, restrict and API docs.
	dwg_ent_*_delete: remove error arg. free can handle NULL just fine.

	FIXME: Note that these new/delete/free functions are basically useless,
	as they don't add the entity to the DWG. We need to add a Dwg_Object
	and the associated Dwg_Object_Entity and then this Dwg_Entity_CIRCLE.
	See encode.c for dwg_add_##ENTITY for the proper API.

2018-05-30  Reini Urban  <rurban@cpan.org>

	api + doc: improve dwg_api for TABLE
	add error checks, and API docs.

	doc: more bit type descriptions

	fixup internal api: cleanup extern and headers
	version_codes may not be duplicated.
	duplicate symbol _version_codes in:
	    .libs/dwg.o
	    .libs/common.o

	*.inc: add emacs c-mode lines

	add -Wchar-subscripts, which is default on cygwin
	prevent signed char from being used as array index, e.g.
	isprintf(*string)

	fix -Wchar-subscripts warnings
	isprint might involve arrays, and a char index might be signed,
	which is UB. Only detected on cygwin.

2018-05-30  Reini Urban  <rurban@cpan.org>

	cygwin: strdup fixes, ...
	strdup is not ANSI, we need some POSIX spec to enable it, esp. on cygwin.

	the spec needs obj_string_stream, which is defined in decode.h (only
	detected by cygwin)

2018-05-30  Reini Urban  <rurban@cpan.org>

	configure: fixup skip valgrind on cross_compiling
	autoconf is a bit too fragile

	TODO: update

	add example_2000.dxfb, a binary DXF

	in_dxf: revise plan (comments only)

2018-05-30  Reini Urban  <rurban@cpan.org>

	windows: fix programs man rules, typo
	first dwgread.exe was built, but then for the .1 page
	dwgread was built, using the internal cross-compiler rules
	which missed AM_CFLAGS.

	since building the .1 pages would need wine for help2man
	I rather skip those rules under HAVE_MINGW_CROSS

2018-05-30  Reini Urban  <rurban@cpan.org>

	configure: skip valgrind on cross_compiling
	avoid setenv warning when --enable-trace was not enabled, as it is not needed
	without tracing.

	improve dejagnu warning. only one of 4 major testsuites are skipped then.

2018-05-30  Reini Urban  <rurban@cpan.org>

	internal api: cleanup extern and headers
	add all resused functions to all internal headers. this was a mess.
	again thanks to mingw-gcc, which is a bit stricter in this regard.

	get rid of wrong extern decl.  we don't use any extern functions, only library
	internal ones.

2018-05-30  Reini Urban  <rurban@cpan.org>

	dxf: use L"" on windows
	for VALUE_TU

2018-05-30  Reini Urban  <rurban@cpan.org>

	fix massive obj_string_stream bug
	I once wrote it to take the bitsize as 2nd arg, and then refactored it
	to take the object. (for the has_string flag).
	Not after carefully readng the mingw gcc warnings, I didn't use it in the header,
	but manually pasted the decl into the c files. but just the old decl!
	Tahts why the string stream offset calculation was so unstable.

	This should improve the r2007+ situation a lot.

	Add reused functions to its headers and use it.
	Add restrict to the dwg_decode_##token methods
	Fix redundant redeclaration of 'dwg_decode_add_object'

2018-05-30  Reini Urban  <rurban@cpan.org>

	appveyor: measure used space/free space
	we have a 80GB quota. see if logs and artefacts affect it.

2018-05-29  Reini Urban  <rurban@cpan.org>

	programs: fix error handling
	fix verbosity num_args
	avoid free of empty dwg,
	zero the struct before returning a file not found error

	decode: more PT tracing
	in shorter lisp fashion:
	DD, 2DD, 2BD_1, 3BD_1

	dxf: fix dwg_dxf_object -Wmissing-prototypes
	fix no previous prototype for function 'dwg_dxf_object'
	[-Wmissing-prototypes]. also for dwg_free_xdata_resbuf.
	This is not useful publicly, so make it static.

	more header_write returns
	they need an int now.
	control reaches end of non-void function [-Wreturn-type]

	api: remove redundant declarations
	of dwg_get_num_objects, dwg_get_num_entities.
	They are already in dwg.h/dwg.c

	travis: sha1sum => sha256sum
	already announced in the ChangeLog but missed it

	in_dxf: more checks and fields

	dxf_read_file: fail on DWG file

	out_dxfb: copy from dxf
	add a couple of restrict
	and remove the unneeded out_dxfb.h header
	in_dxf: more return type fixes.

	in_dxf: fixup return values
	which we need for checking EOF

	in_dxf: restructure loop
	add a few helpers

	in_dxf: add dxf_read_pair
	always read pairs

	in_dxf: sscanf is broken for me
	handroll our own.
	still need to read record pairs, and use a common loop
	to assign the values to the fields.

2018-05-28  Reini Urban  <rurban@cpan.org>

	in_dxf: start reading the dxf WIP
	not from the dat->fh but the chain.
	fails on the first sscanf call.

	abstract away macros with constant strings, because
	we cannot write to those strings:
	SUBCLASS for the readonly subclassmarker 100 group

2018-05-28  Reini Urban  <rurban@cpan.org>

	write: add internal dwg_add_TYPE api
	For dwgwrite/dxf2dwg we need to create/add arbitrary dwg objects. (e.g. from dxf)
	Add all the add functions to encode.c/.h (later eventually to dwg_api.h)

	rename DWG_TYPE_3DSOLID to DWG_TYPE__3DSOLID for consistency (to create it by type)
	ditto for PROXY rename to PROXY_OBJECT (even if the DXF name is only proxy)
	add fixed DWG_TYPE_object enums for all variable objects, they don't
	match the real obj->type field, which is the class id + 500. But the
	type is needed temp. for the add API.

	Create the objects from an empty/zeroed Bit_Chain stream.  Suppress all
	warnings/errors there.  field values and arrays need to be added later.
	This just allocates the room in dwg->objects and set's up the Dwg_Object and
	Dwg_Object_##type, and esp. applies all the encoding default values from dwg.spec.

2018-05-28  Reini Urban  <rurban@cpan.org>

	in_dxf: implement helper structures
	global Dxf_Objs holding all objs (header_vars, entities, objects)
	and its fields.
	add dxf_add_field for FIELD() and dxf_search_field for the 2nd round

	linear search is enough for those 30 objs, and max 20 fields.
	no binary search or hash needed here.
	these can be used for both ascii and binary dxf. (probably also for in_json)

	remove unneeded in_dxfb.h. we share all with in_dxf.h, only the field getters are different.

2018-05-28  Reini Urban  <rurban@cpan.org>

	in_dxf: TODO plan

2018-05-28  Reini Urban  <rurban@cpan.org>

	distcheck: add doc and programs DISTCLEANFILES
	and MAINTAINERCLEANFILES.
	Note that the man's are in git and the dist.

	add more DISTCLEANFILES without libps or enable-write.
	clean it then, because we didn't create it.

2018-05-28  Reini Urban  <rurban@cpan.org>

	doc: more doxygen, add refman, refman-pdf targets
	I tried to include the generated tex files into our texinfo,
	but this is not easily possible. The GNU stdlibc++ tried also
	but eventually uses two separate manuals, the texinfo and the
	doxygen generated.

	TODO: Integrated the doxygen refman html output into our generated
	manual. With html this should be easy.

2018-05-28  Reini Urban  <rurban@cpan.org>

	doxygen: probe and add as make target
	start some documentation effort, still looks horrible.
	the latex parts can then be included into our manual.

	htags is not much better, but at least properly clickable through.

2018-05-28  Reini Urban  <rurban@cpan.org>

	api: empty args check, null malloc
	simplify the boolean empty args checks.
	fix wrong error messages: null malloc when out of memory,
	empty arg when the arg was missing (NULL)

	api: rename api lwpolyline methods back to lwpline
	analog to AutoLISP method names. There it also abbrevated as lwpline

2018-05-27  Reini Urban  <rurban@cpan.org>

	api: rename LWPLINE to LWPOLYLINE
	this is the real entity name, in the AcDb and DXF

2018-05-27  Reini Urban  <rurban@cpan.org>

	dxf: more entities
	the 5 handle is mandatory, also add the common 330 and 100 values.

	temp. disable some broken tables.

2018-05-27  Reini Urban  <rurban@cpan.org>

	dxf: fix minimal HANDSEED crash
	it needs to be a valid value >0.
	disable BLOCK in TABLE
	disable BLOCK,ENDBLK in ENTITIES

	dxf: add 70 flag to all tables, harmonize layer flag
	all tables need a flag, set it in COMMON_TABLE_FLAGS.
	we don't need the extra flag_s short for layers, use one only.

2018-05-27  Reini Urban  <rurban@cpan.org>

	* src/out_dxf.c:
	dxf: add VALUE_BINARY for xdata and THUMBNAILIMAGE
	split into mult. lines of max size 127 (as %02X hex)

        * include/dwg.h, src/dec_macros.h:
	logging: shorten points
	log most 2d/3d points as %g (no ending zeros)
	and in parens as in AutoLISP.

        * src/dec_macros.h:
	decode: trace handle absolute as hex
	in DXF they are only used as hex.
	easier verification

        * src/out_dxf.c:
	dxf: 100 groups only with r2000+

2018-05-27  Reini Urban  <rurban@cpan.org>

	* src/out_dxf.c:
        dxf: more minimal cleanup, and several fixes
	avoid duplicate entity 0 RECORDS,
	fix FIELD_VECTOR: LWPLINE bulges,
	avoid 330 handles and 100 names with minimal.

	but we still get a eNullHandle assertion on ACAD import.

2018-05-27  Reini Urban  <rurban@cpan.org>

	* programs/dwg2dxf.c:
	dwg2dxf: fix -m --minimal arg processing
	on another note: acad will crash with our -m dxf file so far :(
	we need to minimize it a bit more.

        * src/out_dxf.c:
	dxf: skip empty TABLE_CONTROL null_handles

2018-05-27  Reini Urban  <rurban@cpan.org>

	* src/out_dxf.c: dxf: fix duplicate 5 handles
	we emit the owner 5 handle already with DWG_OBJECT for all objects,
	skip it for COMMON_TABLE_CONTROL_FLAGS and COMMON_TABLE_FLAGS.

	acad import still fails at table APPID

2018-05-27  Reini Urban  <rurban@cpan.org>

        * src/decode.c, src/dwg.spec, src/out_dxf.c:
	dxf: add dxf_write_xdata for XRECORD

2018-05-26  Reini Urban  <rurban@cpan.org>

        * src/dwg.spec, src/in_dxf.c, src/out_dxf.c,
        src/spec.h:
	dxf more DICTIONARY and XRECORD fields
	but the 102 names for XRECORD not yet.

2018-05-26  Reini Urban  <rurban@cpan.org>

        * src/out_dxf.c:
	dxf: add DbSaveVer if --as-rNNN
	when a VPORT table was saved in a newer version,
	dxf-out this version as DbSaveVer,1000.

	This is the only table with DbSaveVer. Some objects do have a
	AcDbSavedByObjectVersion tag, for the class version.

2018-05-26  Reini Urban  <rurban@cpan.org>

        * include/dwg.h, src/dec_macros.h, src/decode.c, src/dwg.spec
        src/encode.c, src/free.c, src/out_dxf.c, src/out_json.c,
        src/print.c:
	dxf: rename VIEWMODE, fix table num_entries
	VIEWMODE is a systemvariable, renamed from view_mode in VPORT and VIEW.
	combine UCSFOLLOW with it (for encode and dxf).
	via DXF the num_entries don't count the control entities.
	initialize and DXF the VPORT_CONTROL->flag

        * .appveyor.yml:
	appveyor: decrease disk usage
	delete the deployed zips. I hope this decreases the quota
	which is 80GB per user.

        * src/dwg.spec:
	spec: simplify encode_3dsolid decl
	make it static so we can avoid the decl.
	log the error that encode_3dsolid is nyi (not yet implemented)

2018-05-26  Reini Urban  <rurban@cpan.org>

        * include/dwg_api.h, src/dwg_api.c,
        test/testcases/3dsolid.c, test/testcases/body.c,
        test/testcases/region.c, test/unit-testing/3dsolid.c,
        test/unit-testing/body.c, test/unit-testing/region.c:
	api: rename dwg_ent_<ACIS>_get_{wire,silhouette}
	to get_wires, get_silhouettes.
	It returns the array of all, not just one.

2018-05-26  Reini Urban  <rurban@cpan.org>

        * include/dwg_api.h, src/dwg_api.c:
	api: remove array num setters
	there exist various api functions to change the number of some elements
	without changing the associated array itself, e.g.
	dwg_ent_polyline_mesh_set_num_n_verts without setting the n_verts array.
	all the set_num_ api functions need to go.
	this is unsafe.

	set_num_owned, set_numcols, set_numrows, set_num_lines, ...
	See [GH #9]

	not yet added add_array (i.e. push) and delete_array(at_index) apis yet.

2018-05-26  Reini Urban  <rurban@cpan.org>

        * include/dwg.h, include/dwg_api.h, src/dec_macros.h,
        src/decode.c, src/decode_r2007.c, src/dwg.c, src/dwg.spec, src/dwg_api.c,
        src/encode.c, src/free.c, src/in_dxf.c, src/in_dxfb.c, src/out_dxf.c,
        src/out_dxfb.c, src/out_json.c, src/print.c, test/testcases/insert.c,
        test/testcases/minsert.c, test/testcases/polyline_3d.c,
        test/testcases/polyline_mesh.c, test/testcases/polyline_pface.c,
        test/unit-testing/insert.c, test/unit-testing/minsert.c,
        test/unit-testing/polyline_3d.c, test/unit-testing/polyline_mesh.c:
	api: rename *_count fields to num*,
	owned_obj_count + owned_object_count => num_owned,
	insert_count => num_inserts,
	instance_count => num_instances,
	frozen_layer_count => num_frozen_layers,
	FIELD_INSERT_COUNT => FIELD_NUM_INSERTS,
	object_count => num_objects: dwg_get_num_objects already existed in dwg.h,
	                             remove duplicate from dwg_api.h,
	entity_count => num_entities: dwg_get_num_entities already existed in dwg.h,
		 		      remove duplicate from dwg_api.h,
	m_vert_count => num_m_verts,
	n_vert_count => num_n_verts,
	attr_def_count => num_attr_defs,

	Closes [GH #8]

2018-05-26  Reini Urban  <rurban@cpan.org>

	api: rename VPORT_ENT to VPORT_ENTITY
	for consistency. we don't use the ENT abbreviation in no
	other object, but we do use _ENTITY already

	dxf: oops
	delete a .bak test-data file

	dxf: fix VPORT aspect_ratio 41
	The real aspect_ratio needs to be divided by the viewsize,
	since r13 at least. <=r12 stores the real aspect_ratio already.

	dwg2dxf: fix printing as version
	to stdout not stderr

	dxf: use more dxf_write_handle conversions
	also for the name in COMMON_TABLE_FLAGS, as those names
	also need conversions.
	also add *Active

	dxf: $MEASUREMENT is r14 already
	simplify the logic also

	dxf: $UCSBASE is r2000+ only

	dxf: write even empty names/strings
	don't skip the 1 group of e.g. DIMBLK1
	convert unicode names to utf8
	convert reversed standard names if read from newer and write as older.

2018-05-26  Reini Urban  <rurban@cpan.org>

	dxf: abstract HANDLE_NAME to dxf_write_handle
	since r2000+ some Standard handle names are renamed:
	STANDARD to Standard, BYLAYER to ByLayer, BYBLOCK to ByBlock.

	also check that the table name is really an object, not an entity.

2018-05-26  Reini Urban  <rurban@cpan.org>

	dxf: add examples in more versions
	sample_2000.dwg in r14-2018 DXF formats
	example_2000.dwg in 2018 dwg and dxf formats

	alive.test: add filt_dxf.pl
	to normalize POSIX sprintf("%-16.14f") floating point numbers to
	the format used with MSVC with native AutoCAD, so that we can
	easily compare the output of oursvs them.

2018-05-25  Reini Urban  <rurban@cpan.org>

	restrict: add C99 restrict pointer decls
	just a few pointers might be the same: dat, hdl_dat and str_dat.

	2007: fix unaligned access on copy_n helpers
	1-3 is reverse, 4-8 is straight. 16 is reverse 8-wise.
	just use memcpy

2018-05-25  Reini Urban  <rurban@cpan.org>

	dxf: special-case VPORT field order
	for DXF output.

	fixed some wrong VPORT fields: sun_handle -> shade_plot_handle 333 (vport owns these)
	view_twist_angle -> view_twist for consistency
	aspect_ratio 41 is still wrong
	view_twist 50 -> 51
	back_clip 33 -> 44

	also fix the common table format a bit
	allow DXF groups in the spec

2018-05-25  Reini Urban  <rurban@cpan.org>

	dxf: support Standard in HANDLE_NAME
	the DWG Standard table entry_name is called STANDARD,
	but in the DXF it is translated to Standard.

	Also simplify HANDLE_NAME to avoid the tmp buf,
	names are always strings.

2018-05-25  Reini Urban  <rurban@cpan.org>

	man: fix dependency problem and POSIX/Windows compat
	The .1 files depend on the c and the binary.
	remove the $(*F) gnu make-ism.
	enable windows compat to generate the man pages.
	improve the man target: no submake's, enable proper deps.

	Fixes spurious help2man: can't get `--help' info from ./dwgwrite errors
	when the binary was not generated yet in parallel builds.
	Closes GH #4

2018-05-25  Reini Urban  <rurban@cpan.org>

	appveyor.yml: skip_tags: true
	we tag only already tested and deployed commits.
	avoid double smoking on our slowest smoker.

	on the other hand travis needs the tag to deploy the generated
	dist's to this tag.

2018-05-24  Reini Urban  <rurban@cpan.org>

	fix bit_utf8_to_TU, 3 byte case. detected by gcc-8
	praise the good compiler.
	warning: bitwise comparison always evaluates to false [-Wtautological-compare]

	encode: return early for 2004
	to avoid useless hangs

2018-05-24  Reini Urban  <rurban@cpan.org>

	stability: return 0 on bit overflows
	when a number is wrong we prev. returned -1,
	leading to abnormal high numbers, sizes.
	rather zero it to be able to continue on some unknown data.

	avoid bit_calc_CRC overflows

2018-05-24  Reini Urban  <rurban@cpan.org>

	dwg_decode_handleref_with_code: fix null pointer dereference

	api: fix null pointer dereference

	add build-aux/dejagnu.h.patch
	this header throws too many warnings with newer clang's.
	for now only suppress clang warnings, gcc not yet.
	(only tested until gcc-6 on macports. no idea about gcc-8)

	rename VP_ENT_{HDR,CONTROL}
	to more natural names. AutoCAD used ViewportEntity (r11-r2000).
	Analog to block use VPORT_ENT_CONTROL and VPORT_ENT_HEADER.

	rename {ucs,block,view}_control_handle to *_control
	to harmonize all the control handles, which have no suffix.

2018-05-24  Reini Urban  <rurban@cpan.org>

	rename SHAPEFILE to STYLE
	see [GH #7]
	nobody else names it SHAPEFILE, only the ODA.

	dxf names it STYLE and $TEXTSTYLE,
	AutoCAD names it AcDbTextStyleTable,
	libdxfrw names it STYLE and TEXTSTYLE

2018-05-24  Reini Urban  <rurban@cpan.org>

	geojson: use the new APIs
	for polyline_2d, polyline_3d and add point.

	api: add polyline_3d points api
	and remove the badly named owned_obj_count field api

	api: const most getters

2018-05-24  Reini Urban  <rurban@cpan.org>

	dxf: more table control fields
	each table has at first the control object,
	and then the COMMON_TABLE_FLAGS(owner, acdbname) before
	the other fields, not after.
	special-case this.

	add a new objid to each control object, as link back to the Dwg_Object
	(e.g. for the owner handle).

2018-05-24  Reini Urban  <rurban@cpan.org>

	dxf: add PUCSORTHOREF, fix HANDSEED

	dwg2ps: use the new pline points API

	cbmc: experimental CBMC rule for bits_test.c
	To create coverage testcases.  Does not work so far, and needs an insane
	amount of time.  Should be limited to single functions only.

2018-05-24  Reini Urban  <rurban@cpan.org>

	api: rename pline numpoints, add get_points API
	numpoints is different across versions.

	add a get_points API for various pline types,
	this is also different across versions.

2018-05-24  Reini Urban  <rurban@cpan.org>

	json: new geojson output formatter
	only LINE,LWPLINE,POLYLINE_2D,INSERT (unexploded) entities so far.

	TODO: facetting of curves, ocs/ucs transforms, use the new pline points api.

	TODO: NOCOMMA and \n not with stdout. stdout is line-buffered
	so NOCOMMA cannot backup past the previous \n to delete the comma.
	We really have to add the comma before, not after, and special case the first
	field, not the last to omit the comma.

2018-05-23  Reini Urban  <rurban@cpan.org>

	dwg2ps: fix POLYLINE_2D
	wrong loop index

2018-05-22  Reini Urban  <rurban@cpan.org>

	dxf: remove wrong test dxfs
	we compare now our own created dxfs against {ex,s}ample_2000.dxf
	unfortunately they don't match the versions. create proper ones later,
	the one remaining should be enough for now.

	travis: simplify distcheck
	distcheck already creates the tardists.
	add sha256sum (in ubuntu coreutils), we upload them to github releases.

	travis: deploy releases on tags

2018-05-22  Reini Urban  <rurban@cpan.org>

	appveyor: re-try mingw install
	install-binPROGRAMS is not triggered, do it manually.
	also install examples/*.{c,exe}

	move the dll to the root, together with all the programs. on windows
	they should stay together. the rest is devel stuff.

2018-05-22  Reini Urban  <rurban@cpan.org>

	dwgwrite: improve encoding
	of empty data. alloc empty sections and section_info.
	allow empty handles (null_handle).
	set the default version for dwgwrite to R_2000, support --as-rNNNN
	add the dwgwrite.1 dxf2dwg.1 man pages

	README: write is good enough for r2000
	for most DWG's, some not yet.

2018-05-22  Reini Urban  <rurban@cpan.org>

	add API unicode support (for r2007 strings, optional)
	convert UCS-2 to utf-8 (char*)

	add bit_convert_TU() and bit_utf8_to_TU() converters, bit_convert_TU()
	was prev. only latin-1, now full utf-8. converters written from scratch,
	they are trivial. Ken Thompson designed it that way.
	not rejecting any wrong utf-8 encodings yet.

	add dwg_api_init_version(&dwg) for the version. only needed since r2007,
	utf-8 is backwards compatible. ucs-2 not.

	call inlined dwg_api_init_version on every API function with an
	Dwg_Object or Dwg_Data.

2018-05-21  Reini Urban  <rurban@cpan.org>

	add dwglayers
	Prints all layers in a DWG.

	improve help2man rule, avoid --version warnings.

2018-05-21  Reini Urban  <rurban@cpan.org>

	cmp_dxf.pl: add some basics

	dxf: change float printf format to %-16.14f
	on windows it is different. %g swallows the ending zeros

	dxf: use DOS EOL \r\n

	HACKING: add fuzzing with afl-fuzz
	fast enough on linux without our own loop so far.

2018-05-21  Reini Urban  <rurban@cpan.org>

	dwg_read_file: support - for stdin
	dwgread - now reads from stdin.
	I needed it for afl-fuzz, but should come handy elsewhere.
	dwgwrite already supports reading from stdin.

	* dwg.c (dat_read_stream,dat_read_file): helpers added.
	  (dwg_read_file): use it.

2018-05-21  Reini Urban  <rurban@cpan.org>

	TODO: update practical TODOs
	smoke.sh: delete duplicate python3.6m.

2018-05-20  Reini Urban  <rurban@cpan.org>

	dxf_format: add new DXF codes up to r2014

	bits_test: improve flapping CRC tests
	realloc creates uninitialized memory

	smoke: whitespace only

	bits_test: stabilize
	avoid uninitialized memory, leading
	to problems with -O2

2018-05-20  Reini Urban  <rurban@cpan.org>

	dxf: encode linetype_flags BYLAYER/BYBLOCK/CONTINUOUS
	enable MLINESTYLE which has a similar lines[rcount].ltindex
	flag.

	add a BS 32767 bits test. This was not the problem.

2018-05-20  Reini Urban  <rurban@cpan.org>

	bits_test: add r2004 CMC test
	and fix a stack-overflow, detected by asan

	smoke: add python paths on darwin. no system libxml2, only via macports

2018-05-20  Reini Urban  <rurban@cpan.org>

	man: fix --version output for dwgrewrite
	to help help2man
	help2man: can't get `--version' info from ./dwgrewrite
	Try `--no-discard-stderr' if option outputs to stderr

2018-05-19  Reini Urban  <rurban@cpan.org>

	encode: write empty null_handle
	and simplify common_entity_handle_data.spec: use spec.h
	common_entity_handle_data.spec: set isbylayerlt
	dwg_encode_handleref: resolve handle codes

	dwgrewrite: set --verbose dwg.opts
	and print the objref object fields again only with -v4 (HANDLE) or higher.

	decode: skip TRACE with FIELD_TF, FIELD_TFF
	only log the (overlong) value at the INSANE level

	encode: fix object size calculation
	no Wrong object size: warning anymore

	encode: fix object handle
	wrote the wrong handle for each object

	free: free class->dxfname_u also

	fix bits, enable more testcases/bits_test's
	fix bit_write_DD case BB=3.
	fix bit_read_L, bit_write_L (unused).
	add _H testcases, and many more.

2018-05-18  Reini Urban  <rurban@cpan.org>

	encode: fixed for r2000
	write the object CRC (same seed).
	dwgrewrite works now for sample_2000.dwg

2018-05-18  Reini Urban  <rurban@cpan.org>

	encode: fix bitsize
	no duplicate bitsize fields on Dwg_Object_Object and Dwg_Object, only one.

	patch encode bitsize after the object/entity was written.
	we cannot assume that the encode user knows the bitsize, hence write the
	actual bitsize. use a temp. obj->size*8 value. size change would be at 0x7fff.
	so far we ignore that.

2018-05-17  Reini Urban  <rurban@cpan.org>

	xmlsuite: make it python3 compatible
	tested ok with python 2.7 and 3.6.

	smoke with --enable-python=python3.6m

	fix m4/ax_python_devel.m4 for macports
	which uses the --enable-framework=/opt/local/Library/Frameworks
	prefix, which is not honored in the -L prefixes.
	add a couple of echos

2018-05-16  Reini Urban  <rurban@cpan.org>

	man: make help2man optional
	we ship the .1 files, and help2man is not on all systems.
	only needed to regen the man files.
	e.g. cygwin does not have it. add it there.

	dxf: add BLOCKS
	now only a few minor DXF issues are remaining

	dxf: add ENTITIES and OBJECTS

2018-05-15  Reini Urban  <rurban@cpan.org>

	DEBUG_HERE: silence wrong uninit warning

	free: add dwg_obj_is_control function
	the tables have copies in dwg

2018-05-15  Reini Urban  <rurban@cpan.org>

	dwg, out_dxf: fix TABLES
	as expected we have to copy the CONTROL object fields
	to avoid corruption by realloc.

	also rename SHAPEFILE handles field to styles.

2018-05-15  Reini Urban  <rurban@cpan.org>

	dwg, out_dxf: add TABLES
	and add the table control links to the dwg struct.
	note that these links might be corrupted if objects are realloced.
	if so then we need to copy struct fields.

	remove dwg->num_layers and harmonize with the other tables.

2018-05-15  Reini Urban  <rurban@cpan.org>

	dwg2dxf --help: add r2007, r2010, r2013
	the dxf writer can do that already, i.e. will do that

	add dist_man1_MANS
	we distribute the man1 pages. but no man3, just the info.

	dsymutil: add noinst_PROGRAMS also

	README: Update
	dwg2ps is not so good to be advertised in the README

	dwg2ps: fix compiler warning
	-Wdeclaration-after-statement

	configure: allow CFLAGS overrides
	e.g. for pslib CFLAGS=-I/usr/local/include LDFLAGS=-L/usr/local/lib

2018-05-15  Reini Urban  <rurban@cpan.org>

	scan-build: don't wait
	scan-build -V calls scan-view which waits until we are finished
	looking at it in the browser.
	put this into the background, we need to kill scan-view
	later (a python process).

	without make just waits here, but we don't want to test this via smoke.sh

2018-05-15  Reini Urban  <rurban@cpan.org>

	dwgwrite: improve reader format detection
	which reader: either manual -I --format argument, or by the extension of the
	input file.

	fix build-aux/smoke.sh
	syntax error with CC, darwin only

2018-05-14  Reini Urban  <rurban@cpan.org>

	dwg_resolve_handle* not public yet
	move out of dwg.h, it doesn't look stable enough.
	but add a new dwg_ref_get_object_relative
	to find a relative object from an handle and base object

	dwg2ps: add arc and circle

2018-05-14  Reini Urban  <rurban@cpan.org>

	extend dwg_ref_get_object
	to actually search for the object via absolute_ref,
	not just the cached obj.
	use it for polyline vertices in dwg2ps.

	move the handle resolvers from private decode to the public dwg.

2018-05-14  Reini Urban  <rurban@cpan.org>

	dwgwrite: use dxf_read_file
	which decides upon ascii or binary,
	or dwg_read_dxfb directly with the .dxfb extension

2018-05-14  Reini Urban  <rurban@cpan.org>

	move dxf reading from dxf2dwg to in_dxf
	from the sample into the library. dwgwrite will need that also,
	and users also.
	note that the reading implementation is not yet written.
	it's mere copy of the writers (ascii and binary).
	the reader needs to account for unsorted order of items.

	and add a few const's

2018-05-13  Reini Urban  <rurban@cpan.org>

	improve gcov from 1% to 35%
	the true library coverage is about 75%, but we are getting closer.

	alive.test: dash fixes, empty $problems
	115: [: =: unexpected operator
	and more.

	windows: skip dwgrewrite tests
	on mingw. killall does not work there

	configure: add --disable-python
	and work on --enable-python=python3.6

	smoke: more compilers

2018-05-12  Reini Urban  <rurban@cpan.org>

	HACKING: update deps, tips, dates

	dwg_api.h: no double decl of dwg_object_ref
	only clang-4 -std=c99 complained

	POSIX 2008 for strdup, and add M_PI
	several stricter compilers don't have strdup nor M_PI.
	define _POSIX_C_SOURCE to 200809L
	This fixes e.g. clang-4 -std=c99

	add smoke.sh for darwin/linux
	and probe for basename, which fails on my arm cross.
	use POSIX libgen.h before string.h with the GNU extension of basename.
	without basename fall back to fullpath for the outfile.

2018-05-11  Reini Urban  <rurban@cpan.org>

	various -Wall fixes
	detected by the arm cross-compiler, which is a bit stricter

	dwg2svg2: fix a few warnings
	from clang -Weverything

	json: add NOCOMMA, object fields
	looks pretty good now, almost correct.
	NOCOMMA erases the last ,\n of an array/hash

2018-05-11  Reini Urban  <rurban@cpan.org>

	configure: change setenv warning
	tracing works now even without setenv(). Just --enable-trace
	will not work as expected. -v1 does though.

	Also note that we currently need a gmake on BSD's

2018-05-11  Reini Urban  <rurban@cpan.org>

	appveyor: re-enable --enable-write
	we now kill hanging dwgrewrite processes

	dxf: fix windows cast warning

	dxf: unify into header_variables_dxf.spec
	now just some more sections are missing.
	also add some rudimentary dxf content testing.
	add AutoCAD native and libdxfrw dxf's to compare against.
	(no theiga yet)

	dxf: harmonize ascii/binary types more
	and simplify spec.h. add a special DXF (out) block

	travis: add suggested texlive
	suggested by verbose distcheck.
	distcheck passes now on travis, so en-arm it.

	travis: verbose DISTCHECK
	now it fails with make dvi

	travis: add swig

	work over all authors and copyright years

2018-05-10  Reini Urban  <rurban@cpan.org>

	encode: harmonize handle logging

	appveyor: clean tag release names
	don't double add the prefix and suffix.
	stay with the simple tags, ie. the build number.
	the zip has the proper name.

	appveyor: disable write
	it started segfaulting, since we improved it. enable it, when
	it starts becoming more stable.

2018-05-10  Reini Urban  <rurban@cpan.org>

	encode: add RESET_VER
	cur_ver should be reset after after SINCE/... version check block,
	otherwise e.g. handles are not printed.

	We are stuck with this syntax without the block in the macro, so try
	to add these RESET_VER wherever it is missing.

2018-05-10  Reini Urban  <rurban@cpan.org>

	encode: fix HANDLE
	reset wrong cur_ver to allow printing handles

	encode: harmonize HANDLE tracing
	and fix 2 minor issues: reactors have dxf code -5.
	print the type as decode

	dxf: more dxf codes, add dxf_codepage()
	add dxf codes for FIELD and GEODATA.
	support codepage 29: ANSI_1251

	dxfb: more types and harmonize
	the goal should be a header_vars_dxfout.spec, with typed fields, like HEADER_RC.
	but maybe it can even serve for dxfin also, looping over all available names.

2018-05-09  Reini Urban  <rurban@cpan.org>

	encode: fix objects
	advance to the next object, don't reset to start start address.
	previously objects were overwriting each other.
	calculate size, and adjust if wrong. users cannot be expected to
	write both sizes, byte and bits correctly.

	Now only bit_write_handle is broken, and several object sizes are off.

2018-05-09  Reini Urban  <rurban@cpan.org>

	encode: simplify bit_write_MS
	this is just a very simple RLE encoded int, with the highest bit
	announcing a further short. in this case 1 or 2 shorts.

2018-05-08  Reini Urban  <rurban@cpan.org>

	encode: ensure chain size
	when writing objects

	dxf: more header vars
	fix colors,
	fix MLINESTYLE handle name to entry_name for consistency,
	rename the HEADER_VAR and HANDLE_VALUE macros.

	Fix decode WE_CAN only error message
	we can only decode version R13-R2007 (code: AC1012-AC1021) DWG files.
	was -R2004

	decode: improve version file-magic check
	error with Invalid DWG, magic: %s
	or Invalid or unimplemented DWG version code %s

	dxf: add common_entity_handle_data
	and few more minor improvements. only output
	dxf codes != 0. still a lot todo.

	json: indent arrays and hashes
	add abstractions, also useful later for YAML.

	dxf: add and fix more 2007+ vars
	and fix some 2004+ dxf codes.
	add SHADOWPLANELOCATION and REALWORLDSCALE unknowns.

2018-05-08  Reini Urban  <rurban@cpan.org>

	dxf: add REQUIREDVERSIONS as 160
	this is a DXF header value.

	also convert ucs-2 CLASS strings down to ascii for DXF.
	TODO: decode header variable LASTSAVEDBY 2010+

2018-05-08  Reini Urban  <rurban@cpan.org>

	alive.test: simplify dwgrewrite handling
	This does not need an extra argument anymore.

	rename fmt_ to out_
	corresponding to the needed in_ readers:
	json, dxf, dxfb

2018-05-07  Reini Urban  <rurban@cpan.org>

	add dwgwrite skeleton
	corresponding to dwgread. need format readers, not writers.
	dwg_read_json(), dwg_read_dxf(), dwg_read_dxfb()

	doc: fix Decoding API example

	add manual, gendocs.sh
	from gnulib (GPLv3).
	just remove a wrong htmlarg setting.

	dxf: DWGCODEPAGE is since r10

	probe for strcasecmp header
	use AX_INCLUDE_STRCASECMP from autoconf-archive.

	dwg2dxf: use fmt_dxf{,b}

2018-05-07  Reini Urban  <rurban@cpan.org>

	dwgread: add the 3 output formats
	and add -o outfile support and regen the man pages.

	If this turns out nice, add the other output formats also:
	YAML, XML, PS, SVG, ...

2018-05-07  Reini Urban  <rurban@cpan.org>

	add fmt_dxf and fmt_dxfb also

2018-05-07  Reini Urban  <rurban@cpan.org>

	json: start with -O fmt JSON WIP
	various formatter output modules: -O json,yaml,xml,dxf for dwgread.
	maybe even ps and svg. so we will need only a dwgread and dwgwrite,
	not any other helpers.

	add fmt_json.
	for now they all print to stdout as stream,
	but dwg2dxf might want to print to a fh, because this construct outfile from infile.
	The --format arg can also serve for dwggrep as output format for each found entity.

2018-05-04  Reini Urban  <rurban@cpan.org>

	trace: init 2007 loglevel for 2010+
	otherwise some 2007 helper functions, like section_string_stream
	and obj_string_stream do no logging.
	loglevel is module specific, and those helpers don't have dwg as arg.

	TODO: update TODO

	testcases: fix more wrong format types

	ubsan: fix signed integer overflow
	for the hash calc use an unsigned rseed.

	eed: fix asan write error
	when adding the ucs-2 string delimiter it will write 2 byte, past
	the allocated bufsize. hence alloc size+2 to ensure delimited unicode strings.
	and then we can skip writing the last 0, as we already used calloc with size+2.

	trace: enable loglevel via -v
	in encode, decode and free entry points

	examples: add -v[0-9] support

	work over copyright headers, add one AUTHOR
	fix the years, add missing authors.

	trace: independent loglevel per dwg.opts
	pass through the loglevel/--verbosity without --enable-trace, resp.
	without setenv()

2018-05-02  Reini Urban  <rurban@cpan.org>

	read_2004_section_classes: wrong max_num type

	add build-aux/appveyor-deploy.bat
	deploy either a tagged commit or nightly branch, not both

	appveyor: add nightly deployments
	for master branch changes.
	see https://github.com/rurban/libredwg/releases

	windows: add .appveyor.yml deploy
	as zip

	windows: harmonize wchar_t logging
	improve native wchar_t as UCS-2 support (windows),
	printing it natively

	Makefile.am: remove check-wine
	make check can handle wine already, check-wine was broken for a while

	programs: fix wine typo
	the additional ) caused run 'dwgrewrite.exe)' example_2000

	less logging: adjust levels a bit
	log less important info with higher levels.
	add LOG_TF for fixed text for arbitrary levels, use if for binary
	fixed blobs with INSANE, not TRACE.
	log @ positions with level 4 HANDLE.

2018-05-02  Reini Urban  <rurban@cpan.org>

	check-dwg*: use -v3, not -v4
	avoid logging large binary blobs, esp. with unsupported versions.
	some example logs are >2GB

	no double .PHONY targets

2018-05-02  Reini Urban  <rurban@cpan.org>

	check-dwg*: use -v3, not -v4
	avoid logging large binary blobs, esp. with unsupported versions.
	some example logs are >2GB

2018-05-01  Reini Urban  <rurban@cpan.org>

	2007: enable 2007 decoding, now supported.
	enable tests, disarm the decode_R2007 IS_RELEASE check,
	remove the warning, fix the docs.

2018-05-01  Reini Urban  <rurban@cpan.org>

	2010: prepare 2010 classes, fix 2007
	on top of the 2004 section format. copy over the logic from 2017.
	harmonizes classes, and fixes reading the last class (max_num) for 2007+.

	This fixed reading most 2007 DWGs

2018-05-01  Reini Urban  <rurban@cpan.org>

	2010: prepare decode_header_variables
	add bitsize_hi, calc. bitsize.
	separate the 3 streams for 2010.
	can parse now until the individual object bitsizes. (still 0)

	2007: change decode warning message
	handle and string streams are now solved. start working on the
	remaining bugs

2018-04-30  Reini Urban  <rurban@cpan.org>

	2007: fix xrefindex_plus1 ODA doc bug
	xrefdep is before xrefindex_plus1 since r2007+, not r2010+

	rename table flag bit 7 _64_flag to xrefref
	referenced external reference, block code 70, bit 7 (64)

2018-04-29  Reini Urban  <rurban@cpan.org>

	2007: better hdlpos calculation
	no -42 offset. start before reading the type after the size.
	then the handle position naturally aligns.
	add a Dwg_Object address field.
	The r2010 bitsize derives from the obj->size.

2018-04-28  Reini Urban  <rurban@cpan.org>

	2007: adjust hdlpos by -42
	found out error experimentally.
	Most r2007 objects can now be read, just a few remaining errors.

	unify START_HANDLE_STREAM
	esp. it is r2007+ only

	dwg.spec: cosmetics LOG_ERROR
	for invalid DICTIONARY.numitems

	2007: add FIELD_VECTOR_T vcount index
	as <r2007. see DICTIONARY

	2007: trust hdlpos
	and distrust obj->has_strings. hdlpos should be always right.
	some objects seem to ignore has_strings, like ENDBLK

2018-04-28  Reini Urban  <rurban@cpan.org>

	2007: fix obj string stream calc
	fix for negative advance.
	use one more byte offset to the back. data_size is now correct.
	check bit_advance_position also for underflow < 0

	TODO: with no strings don't try to read strings, set them to NULL.
	(MLINESTYLE)

2018-04-28  Reini Urban  <rurban@cpan.org>

	2007: LAYER set flag bits
	2007+ reads only a RS, set the bits for older releases.
	also add some string stream debugging code

	2010: use LAYER handles r2010+

	2007: use COMMON_TABLE_FLAGS entry_name
	FIELD_T, not FIELD_TV

2018-04-27  Reini Urban  <rurban@cpan.org>

	2007: undo START_HANDLE_STREAM has_strings offset

2018-04-27  Reini Urban  <rurban@cpan.org>

	2007: fix the hdlpos offset
	and ignore the still wrong has_string bit.
	Now the handle_stream and string_stream offsets are correct, just the string stream
	length and bit are wrong.
	Thus ignore the has_string bit for now in START_HANDLE_STREAM

	Fixes many 2007 objects.

2018-04-27  Reini Urban  <rurban@cpan.org>

	2007: add FIELD_VECTOR_T
	for 2007 array of TU texts. Fixes DICTIONARY with r2007.

	read/write: allow hard- and symlinks
	not just regular files. just on windows with mingw S_ISLNK is undefined.
	and some minor improvements on write: binary, rename vars.

	programs: crash on notexisting file
	when returning early from dwg_read_file (e.g. not found, not readable) we
	still call dwg_free, which needs the pointers to be NULLed.

	2007: rename some VIEWPORT fields
	def_lighting_type -> default_lighting_type
	use_def_lights -> use_default_lights
	ambient_light_color -> ambient_color

	2007: complete VIEW and VPORT spec fields
	rename Dwg_Color byte to flag

	HACKING: link to CONTRIBUTING and USING_FOREIGN_CODE

	USING_FOREIGN_CODE: add incompatible
	licenses also. From https://www.gnu.org/licenses/license-list.en.html

	add USING_FOREIGN_CODE
	answering the question which code can be used in
	LibreDWG, e.g. a reed-solomon library

	update docs

2018-04-27  Reini Urban  <rurban@cpan.org>

	add manpages and option handling
	option handling is minimal, position sensitive.
	not using getopt_long() yet.

	used help2man to create the initial manpages. (in sync)

	rename dwg_ps program to dwg2ps for consistency

2018-04-27  Reini Urban  <rurban@cpan.org>

	noinst_PROGRAMS: dwg2dxf dxf2dwg
	these are not yet ready.
	we are targettting an early alpha release, and these will
	not be ready for that

	TODO: more TODO

	leak: free the sections chain
	sections is the root, section just the current element in the linked list.
	only in the unlikely case of out of memory.

	leak: free the xdata chain
	and not just the last element, in case of out of memory (very unlikely).

2018-04-26  Reini Urban  <rurban@cpan.org>

	programs: default to LIBREDWG_TRACE 1
	probe for setenv and use it. this is only failing on mingw.
	print the error message when failing.
	Fixes Bugs #31867, #35110, #46175

	leak: set DWG_SUPERTYPE_UNKNOWN
	to avoid double-free of eed data. this is one big chunk only.
	free eed.raw only on size, otherwise it's a continuation with data only.

	leak: fix double-free of LAYOUT eed

	leak: free the eed data
	and COMMON_ENTITY_HANDLE_DATA: all the common handles, reactors.

	analyzer: initialize dwg->header.version
	Logic error	Result of operation is garbage or undefined
	programs/dxf2dwg.c	dwg_read_dxf

	analyzer: fix memory leaks

	analyzer: remove dead initialization
	dwg_encode_common_entity_handle_data does not need dwg (yet).

2018-04-26  Reini Urban  <rurban@cpan.org>

	analyzer: fix clang-analyzer warnings
	using the recent scan-build target.

	Allocator sizeof operand mismatch (wrong malloc casts)
	Branch condition evaluates to a garbage value (uninitialized obj_dat)
	Undefined allocation of 0 bytes (CERT MEM04-C; CWE-131) (for counts=0)

2018-04-26  Reini Urban  <rurban@cpan.org>

	pre-R13: start decoding entities WIP
	move the common pre-R13 entity fields to Dwg_Object_Entity
	and add a spec-local _ent for this.
	add a common decode_entity_preR13() decoder before the
	entity-specific handlers. 70% done.
	decode_preR13_entities: add the entity loop.
	  missing: check DIMENSION opts field for the type.
	dwg.spec: TODO ATTRIB/ATTDEF,
	  add VERTEX_2D, POLYLINE_2D
	  add R11OPTS(n) macro

	silence r11 compilation warnings
	use proper field casts for r11

2018-04-26  Reini Urban  <rurban@cpan.org>

	policy: add #ifndef IS_RELEASE checks
	abort on unsupported DWG versions to avoid segv on
	released packages.
	logic: if a .git directory is present it is not a release.

	also add a new scan-build target, using clang's static analyzer
	clang-analyzer.

2018-04-26  Reini Urban  <rurban@cpan.org>

	add CONTRIBUTING, adjust TODO
	copy CONTRIBUTING from the GCC project and adjust it.  Esp.  important for
	Legal Prerequisites.  This is an official and important GNU package, with
	ownership assigned to the FSF, to able to protect us from legal threats.

	adjust TODO, README and README-alpha.
	Mention that unreleased downloads of the library will crash
	as it will try to decode unsupported DWG versions. Released
	downloads will rather abort then.

2018-04-25  Pero Brbora  <pbrbora@stud.unidu.hr>

	unit-testing: Prevent segfault on error
	Closes Savannah #8628

2018-04-25  Reini Urban  <rurban@cpan.org>

	README: updates

2018-04-24  Reini Urban  <rurban@cpan.org>

	pre-R13: fix STYLE
	add bigfont_name field

	pre-R13 DIMSTYLE vars
	just the DIMBLK_T texts are unsure, and one unknown
	RC var not in DXF: DIMUPT probably

	pre-R13 header vars
	complete the header vars with DXF counterparts.
	missing are the handles (i.e. table indices), and texts.

2018-04-23  Reini Urban  <rurban@cpan.org>

	Improve object tracing
	Print the type even with loglevel 2, but not much more

2018-04-23  Reini Urban  <rurban@cpan.org>

	r11: reset tbl->number on failure
	when we read a non-object table, reset the index
	so we don't increment it in the next line

	   dwg->num_objects += tbl->number;

2018-04-23  Reini Urban  <rurban@cpan.org>

	xmlsuite: only process existing DwgTxtFileName
	protect from skipped dwgs, such as <r13 and >2004

	2007: add klass dxfname_u field
	and use dxfname as the ASCII variant for comparisons.
	This fixes reading all the class objects (>500).

	2007: fix obj_string_stream
	The bitsize calculation starts before reading the bitsize.
	Thus initialize the string stream before reading the bitsize.
	The bit is then always 0, as objects start at bit offset 0

	2007: fix EED code 0
	2007 already uses unicode strings in EED

	2007: add absolute last_offset tracing
	and outcomment last_handle for each object (was used
	for object idx plausibility)

2018-04-23  Reini Urban  <rurban@cpan.org>

	2007: limit string data size, read entity bitsize
	reset the string stream to start at the object offset and limited
	by the object size.

	fix reading the entity bitsize in dwg_decode_entity:
	R_2000 - R_2004 -> R_2000 - R_2010.

2018-04-20  Reini Urban  <rurban@cpan.org>

	harmonize Num Objects tracing
	also for r2007

	auxheader.spec: convert 20x unknown_rc RC to FIELD_TFF
	for more pleasant logging

	LOG_TRACE_TU: harmonize
	with logging of TV

	don't typos

	start separating encode version support
	add a separate encode_preR13(), but not for the other versions.
	they are all basically the same, just the sections maps are different.

	dwg_decode(), dwg_encode()
	harmonize the two main entry points.
	rename dwg_decode_data() to dwg_decode(),
	rename dwg_encode_chains() to dwg_encode()

	comment for dwg_encode_chains refactor
	version specific and rename to dwg_encode_data()

	2010: add BOT type
	use the 2004 format.
	bitcoded object type: single or double byte

	rename APPID_CONTROL->num_apps to num_entries
	for consistency with the other table control objects.

	abstract bit_set_position
	and a new bit_position getter

2018-04-18  Reini Urban  <rurban@cpan.org>

	xmlsuite: skip 2007+ so far

	2007: more handle stream work
	now almost works. we need to set the
	handle stream to the end of the object: pos+bitsize = hdlpos
	after the has_strings bit.

2018-04-16  Reini Urban  <rurban@cpan.org>

	name unknown DIMSTYLE_CONTROL vars
	morehandles

	undo <=2007 parenthandle
	object parenthandles appear also in r2010.
	The pointer to the control object.

	pack _encrypted_section_header also
	is wrong with some compiler settings, e.g. asan.

	replace FIELD_VECTOR RC with FIELD_TF
	esp. for tighter logging.
	array of bytes => fixed length text.

	WIP more 2007 handle stream
	not for entities yet. there we don't have a bitsize.
	initialize hdlpos after reading the object bitsize.
	before 2007 hdl_dat is just the same as dat, ditto str_dat.
	str_dat is a copy then because strings are interleaved.
	hdl_dat just needs one advance, because the handles are only
	at the end.

2018-04-15  Reini Urban  <rurban@cpan.org>

	sprintf %ls for cygwin
	warning: passing argument 2 of fprintf from incompatible pointer type [-Wincompatible-pointer-types]
	   LOG_TEXT_UNICODE(TRACE, (BITCODE_TU)wstr)

	2007: and WIP the handle stream

2018-04-14  Reini Urban  <rurban@cpan.org>

	WIP 2007: start working on 2007 object strings
	don't error on invalid handles (still invalid obj handle stream),
	start with a few 2007 strings

	2004: fix Data Section
	access the right r2004_header.section_info_id.
	e.g. 19 => index 16. 19 would be out of bounds

	fix r11 free empty class
	r11 has no classes at all, but tried
	to deref them

	2007: improve error handling
	when get_page or read_pages_map fails

	fix decompress_r2007: allow length 0
	This is basically a LZ77 decompressor, where the case length=0
	is allowed.

	whitespace cleanup decode.c
	M-x whitespace-mode

	whitespace cleanup decode_r2007.c
	M-x whitespace-mode

	add FIELD_TFF type, pre-allocated fixed string
	which merely makes for better logging.

	use bit_read_fixed helper
	for reading into already allocated fixed length string

	more section_handles harmonizations

	simplify 2004/2007 section_handles
	and harmonize.

	2007: WIP start reading objects and handles

	2007: update TODO plan
	merge decode_r2007 with the 2004 decoder, it is the same.

	more 2007 harmonization
	rename num_descriptions to num_infos, it is the section_info count.
	move read_2007_section_objects into read_2007_section_handles, same as with 2004.

	minor 2004+ section simplifications
	no logical changes

	2007: more sections handles and objects

2018-04-14  Reini Urban  <rurban@cpan.org>

	r2007 header_variables
	HANDSEED is not read from the handle stream, but the data stream.
	PUCSORTHOREF is wrong.
	separate obj_string_stream and section_string_stream:
	SECTION_STRING_STREAM got a prepared str_hdl already,
	START_STRING_STREAM calcs the stream pos from the obj->bitsize.
	encoding >= r2007 not yet started (need to calc. handle and string stream offsets)

	* bits.c,h (bit_set_position): added, set absolute

2018-04-14  Reini Urban  <rurban@cpan.org>

	add separate handle stream for r2007+
	before R2007 those two streams, dat and hdl_dat are the same.

	but no extra string stream yet.
	we handle that in the dwg.spec extra, locally.

2018-04-14  Reini Urban  <rurban@cpan.org>

	decode 2007 string streams
	for now switch dat back and forth, but we really should provide two
	streams: dat and str_dat for easier dwg.spec integration.
	And we'll also need a third handle stream, hdl_dat. See the next commit.

2018-04-11  Reini Urban  <rurban@cpan.org>

	WIP read_2007_section_classes
	missing: string stream.

	change the section lookup by type, not hashcode.
	it should be the same is with 2004 really. TODO merge the code base.

2018-04-11  Reini Urban  <rurban@cpan.org>

	add r2004+ dwg_section_type
	resolve the section wname to the enum DWG_SECTION_TYPE, which we need
	later. to lookup the header, classes, objects sections by index, not by name.

	do the same for preR13 and R13 section types (also as enum).

2018-04-10  Reini Urban  <rurban@cpan.org>

	start encode the r2004 Section Page Map
	Add the 5 r2004 section fields to the dwg->r2004_header and Dwg_Section.
	simplify section maps massively, no system_section union needed.

	Add native LE read/write bits for RL (yet unneeded).

2018-04-09  Reini Urban  <rurban@cpan.org>

	2018 fix for MLINESTYLE

	add 2018 test-data DWGs and matching DXFs
	The 2013 variants saved as 2018.

	Fix programs CC warnings
	with WARN_CFLAGS

	classes >= 2007
	add the missing 2007 class-map fields.

	xmlsuite: write into builddir
	not into srcdir, which could be read-only. e.g. make distcheck

	HACKING: add macports python

	move public headers into include/

2018-04-08  Reini Urban  <rurban@cpan.org>

	add HAVE_NATIVE_WCHAR2
	We can only use wchar.h when on Windows with a sizeof 2.
	On unix wchar_t is a 4-byte UTF-32.
	How to handle these? Use native wchar_t internally
	and convert when reading/writing?

	add ctype.h probe

	fix eed packed struct
	some gccs add intermediate bytes into the Eed_Data struct,
	esp. mingw.

2018-04-07  Reini Urban  <rurban@cpan.org>

	fix wrong encode class checks

	fix -Wsign-compare

	use bits _TF functions
	for larger strings/raw data. esp. for later conversion to FIELD_TF
	and LOG_TRACE_TF.

	eed rewrite
	EED are really a stream of size+app-handle + sequence of app-specific code+value pairs,
	not just one code+value per handle.
	So add a new eed struct per code+value pair, and leave the size empty of subsequent
	eeds, and re-use the handle.

2018-04-02  Reini Urban  <rurban@cpan.org>

	fixed some r14 second header parsing
	adjust for num_sections, which now actually matches the documentation

	more TODO

	Merge branch 'dxf' into work
	separate examples and programs.
	many improvements and fixes, esp. some objects, memory leaks and eed.

	Update TODO for the finished dxf branch

	fix get_first_owned_object
	with no BLOCK_HEADER entities, e.g. empty paperspace.

	fix MLEADERSTYLE eed
	wrong usage of index i, used twice, nested.
	rename the inner appid loop to j,
	the outer eed loop to idx.

	more auxheader: still debugging
	add some helpers: DEBUG_HERE() and LOG_TRACE_TF (fixed string)

	Makefile.am: fix check-dwg targets

	free: add dwg_free_handleref
	where we lookup the handle in the global list of refs
	and delete it there also.
	also free the reactors, defer freeing BLOCK_CONTROL,
	and set a freed obj->type to DWG_TYPE_FREED, to skip
	double-frees

	Fix reamining warnings
	proper casts for preR13 types,
	warp TODO objects into ifdef DEBUG_<OBJECT>
	change IMAGE.clip_mode from BS to B ??

	de-arm CRC check
	allow failing CRCs, just log the error

2018-04-02  Reini Urban  <rurban@cpan.org>

	add dwg_encode_xdata and dwg_free_xdata
	and enhance the xdata linked-list variant to
	r2007 unicode strings.
	simplify the mess a bit.

	XRECORD: write and free the objid_handles
	free the object_ref array.

2018-04-02  Reini Urban  <rurban@cpan.org>

	add check-dwg-valgrind

	free: dup klass->dxfname
	because freeing an object could free the dxfname also.
	and some cases are unhandled.

	VISUALSTYLE tested ok

	test VISUALSTYLE

	harmonize defined but disabled classes
	CELLSTYLEMAP also.

	fix more gcc-7 warnings
	-Wint-in-bool-context: compute the TABLE field num_cells. we use it twice.
	-Wsign-compare in some eed DEBUG sanity checks

	build: document missing check-valgrind
	for the alive.test hack. switch to a normal
	runtest env, which does have valgrind support

	change LAYER.color_rs from RS to signed short
	to check for negative colors <r13

2018-04-02  Reini Urban  <rurban@cpan.org>

	DEBUG_MULTILEADER
	all 4 actions decode/encode/print/free must be consistent
	if to run the handler or not.

	fixed 2004_Leader with empty BLOCK_HEADER->entities[0]
	with dwg2SVG

2018-04-02  Reini Urban  <rurban@cpan.org>

	.gitignore: a few more private files

2018-04-02  Reini Urban  <rurban@cpan.org>

	fix MLEADERSTYLE is_new_format
	add global dwg->appid_control, a list of all registered apps.
	when an MLEADERSTYLE eed handle points to a ACAD_MLEADERVER APPID, then
	use the new MLEADERSTYLE format (because it was imported from a newer version).
	Fixes the text_always_left bit offset.

	add dwg_resolve_handleref helper, a part of the handle decoder.

	rename MLEADER to MULTILEADER, the dxf really has the MULTILEADER name,
	libdwg uses it also.

2018-04-02  Reini Urban  <rurban@cpan.org>

	rename dxfname MLEADER to MULTILEADER
	but keep our object definition the same name as in the docs.
	unlike libdwg.

	also: SCALE has now enough coverage.

2018-04-02  Reini Urban  <rurban@cpan.org>

	remov -lm dependency
	use our own bit_nan()

	bit_read_BD: fix 64bit stackoverflow
	use int32_t, not long int to create nan.
	we still avoid to link against libm,
	even the dwg_api should not do anymore.

	second_header: fix sections overflow
	Leader_2000 has 6 sections there, not just 4

	alive.test: dwgbmp Leader_2004 will always fail
	because it has no embedded picture and it then returns -1

	decode: fix ubsan problems
	avoid *((uint64_t*)ptr) alignment problems (eg. sse).
	crc code: use unsigned properly typed rseed to handle overflows

	free: use default loglevel ERROR

	eed: do away with pesky valgrind overflows
	no idea why it still overflowed

	refactor eed
	make a raw copy, and also read into the eed union.

	separate programs dir
	for bin_PROGRAMS.
	enhance alive.test to test more DWGs

2018-04-02  Reini Urban  <rurban@cpan.org>

	free: add some more
	HANDLE_VECTOR, FIELD_VECTOR (esp. for TV),
	second_header.handlers, FIELD_HANDLE (the dwg_object_ref).

	zero the dwg struct on dwg_read_file() (in case of early free).
	dwg_encode_chains: initialize section_address (detected with -O2)

2018-04-02  Reini Urban  <rurban@cpan.org>

	dwg_bmp: protect from empty picture size
	fixes dwgbmp Leader_2004.dwg

2018-03-31  Reini Urban  <rurban@cpan.org>

	fix make distcheck: add dim_common.exp
	and src/free.h.
	avoid duplicate loglevel symbol.

	Fix r2000 second header
	r2000 has 5 chars before the sections, not 4 as before.

	Merge commit 'afa21732aa095f6a109821e561092748ae851d2e' into work

	finish the API revamp: unit-tests

	fix up the dimension unit tests
	for the new DIMENSION API.
	replace elevation_ecs11 by elevation.

	add new DIMENSION_common subentity
	for the API only, to save a lot of functions

	adjust dim testcases

	disable CELLSTYLEMAP, fix MTEXT style handle
	FIELD_G_TRACE: print the dxf code numerically.

	WIP cleanup the API
	and more

2018-03-31  Reini Urban  <rurban@cpan.org>

	WIP more dxf codes: REPEAT_4, macrofy
	remove _Entity/_Object from structs, which are not entities, objects,
	just parts thereof.

	macrofy common field accessors:
	Table_Value(value)  20.4.99 for FIELD and TABLE
	Cell_Style_Fields(sty)  20.4.101.4 for TABLE, TABLECONTENT and CELLSTYLEMAP
	Content_Format(fmt) 20.4.101.3 for TABLECONTENT and Cell_Style_Field

2018-03-31  Reini Urban  <rurban@cpan.org>

	WIP more dxf codes: almost done
	add END_REPEAT for free.
	fixup some types and errors.

	WIP more dxf codes
	mostly HATCH, MLEADER, TABLE, ...
	add VECTOR_FREE at the end of REPEAT

2018-03-30  Reini Urban  <rurban@cpan.org>

	WIP more dxf codes, and finish more objects
	dwg_decode_handleref_with_code: handle offset pointer codes.

	WIP more dxf codes
	and some typos and more documented objects. esp. the new tables objects.

	WIP add dxf codes to all fields
	and integrate more r11 tables into dwg.spec

	merge UCSICON_0+1 B to UCSICON BB

2018-03-29  Reini Urban  <rurban@cpan.org>

	typo: default_lightining_type
	=> default_lightning_type

	r11: fix free empty objects
	dwg_free_LAYOUT:
	obj->type == obj->parent->layout_number is not true there.

2018-03-29  Reini Urban  <rurban@cpan.org>

	dwg.spec: start adding r11 tables to the spec
	make each FIELD a statement, to allow bracket less
	single fields if statements. 3 lines => 1 line.
	but not for SINCE/UNTIL, since this needs to set cur_ver before.

	add IF_ENCODE_FROM_PRE_R13 r11 defaults, flags <=> bits,
	also needed for dxf.

2018-03-29  Reini Urban  <rurban@cpan.org>

	dwg.spec: reformat
	no functional changes, whitespace and rearrange FIELD macros only.

	r11: implement the tables
	add a BITCODE_TF fixed width text type.
	fixed a few typos:
	VIEW.lens_legth => lens_length
	MLEADER: ctx.text_heigth => ctx.text_height

2018-03-28  Reini Urban  <rurban@cpan.org>

	more r11: outline all tables/sections
	read now until the end

	add TIMEBLL type, more r11 work
	add a special TDCREATE type to simplify dxf handling.
	add Dwg_Section_Type_r11 enum, rename table processing to section,
	because they have similar structure.

	2007: add LOG_TEXT_UNICODE, LIBREDWG_TRACE
	honor LIBREDWG_TRACE on decode_2007.
	beautify the log output a bit.
	we can now print UCS-2 on unix platforms via LOG_TEXT_UNICODE
	update TODO

	R2004 decoding done, start with R2007

	spec: add more unknown templates
	and embed more parenthandle < 2007

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix 2004 Common Entity Data layer
	layer is only for 2000, not 2004.
	add shadow handle: 2007+
	fixes reading all 2004 dwgs

	fix HATCH num_boundary_handles
	only count num_boundary_handles on decoder,
	esp. not when printing it.
	calloc all REPEAT objects to zero-init all counters.

	HATCH: rename z_coord to elevation

	harmonize to parenthandle
	from XRECORD->parent and lots of parent_handle.

	more objects and specs
	complete the r2010+ optional xrefindex_plus1 for all tables,
	add WIPEOUTVARIABLE, add entity_HATCH_DefLine,
	optional null_handle 2010+,
	SHAPEFILE_CONTROL: num_entries BS => BL.

2018-03-27  Reini Urban  <rurban@cpan.org>

	more 2007 specs: go over all objects
	type all FIELDS: FIELD(name,type) => FIELD_type(name)
	some entities have no post common entity data handles 2007+

	DICTIONARY: no itemhandles <r2000
	MTEXT: flip rect_width with rect_height
	SPLINE: fixed 2013+, num_fit_pts BS => BL, read handles later,
	LEADER: associated_annotation since r13, not 14.
	BLOCK_CONTROL: num_entries BS => BL, paper_space <= 2007
	BLOCK_HEADER: 2010+ xrefindex_plus1, rename preview_data fields
	LAYER_CONTROL: num_entries BS => BL, null_handle <= 2007
	LAYER: 2010+ xrefindex_plus1

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix 2004 header_vars
	current_viewport_entity_header is only r13-r2000.

	read_2004_compressed_section: better logging
	and error handling. free the temp. decompression buffer.

	fix ENT_REACTORS encode
	and fix tracelevel for decode_object/entity: honor LOG_TRACE level.

	silence free DIMSTYLE
	some FIELD_CAST values were printed on free

	examples: don't leak suffix filename_out
	and add one missing dwg_free()

	dwgrewrite: warn when num_objects differ
	the previous re-read just checks for a valid structure,
	not if really all objects were written.

	suffix: fix . handling in ext
	when the ext already contains a dot
	don't add another one

	encode: write empty strings
	NULL chains.
	Not yet NULL handles

	2004: second_header since r2004
	is read partially. the sections map and handlers is handled
	elsewhere.

	decode_R2004: logging cosmetics

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix decompress_R2004_section assert
	src may be equal to decomp.
	fixes reading 2004/Leader_2004.dwg and 2004/Drawing_2004.dwg

	all my r11-r2004 dwgs can now be decoded.

2018-03-27  Reini Urban  <rurban@cpan.org>

	Add some of my test DWGs and DXFs
	Produced with my evaluation copy of AutoCAD 2013 for MAC
	and some free library blocks from the internet.

	Add a LEADER, associate MLEADER, a HATCH filled with an image,
	and parametric constraints objects.

2018-03-27  Reini Urban  <rurban@cpan.org>

	add MLEADER and OBJECTCONTEXTDATA
	untested. just taken from the spec.

	add BITCODE_TU UCS-2 DWGCHAR
	not suore yet if the BITCODE_TU is zero-delimited nor not.

2018-03-27  Reini Urban  <rurban@cpan.org>

	Second header: improve, esp. r14
	sanitize second_header, via proper fields.
	esp. the encoder was wrong.

	parsers all of my r2000 and r14 samples.

2018-03-27  Reini Urban  <rurban@cpan.org>

	more common 2010,2013 fields
	handlestream_size, has_ds_binary_data

	tune free calls
	check also the size, not just the pointer.
	free only once, not some classes twice, such as CELLSTYLEMAP,
	VBA_PROJECT
	honor the LIBREDWG_TRACE trace var, to display the free'd object
	pointers.

	fix EED padding and realloc
	use (i+1) *
	padding is normal, not something to warn about.

2018-03-27  Reini Urban  <rurban@cpan.org>

	add free dwg.spec callbacks
	use the spec to free each field, similar to print.

	result: from 23k down to 20k definitely lost.
	Missing: XRECORD xdata ResBuf, DICTIONARY handles,
	common entity data handles.

2018-03-27  Reini Urban  <rurban@cpan.org>

	bits: protect from overflow
	and fix bit overflow, properly wrap around

	disable MLEADERSTYLE
	wrong EED offset

	add FIELDLIST, MLEADERSTYLE
	this is still WIP.
	the first MLEADERSTYLE line_type handle is wrong.

	add SCALE, VBA_PROJECT objects
	VBA_PROJECT still untested. SCALE looks ok

	restart unhandled/untested class objects
	When a variable-type object is unknown/untested,
	restart it to the prev. known address and read in the raw
	bytes from there again.
	Fixes offset problems with testing some new objects: VBA_PROJECT,
	CELLSTYLEMAP which interestingly also is in some R2000 (AC1015) files from
	the internet.
	decode-only so far.

	work on r14 stability
	skip CRC check error with num_sections!=5,
	fix DICTIONARYWDLFT.unknown_r14 to RL (probably some combination of RS,RC,RC)
	r14 DICTIONARY.unknown_r14 is the hard_owner flag.

2018-03-27  Reini Urban  <rurban@cpan.org>

	dwg_encode_variable_type
	sync with dwg_decode_variable_type

	and let untested classes be also encoded as UNKNOWN_OBJ

2018-03-27  Reini Urban  <rurban@cpan.org>

	add check-dwg target
	test all test-data DWG files with dwgread

	fix gcov targets
	we are now at 23.9%

2018-03-27  Reini Urban  <rurban@cpan.org>

	finish UNKNOWN_OBJ
	add the encode and print parts.
	we did for encode after all.

	TODO: we could store the address before trying untested objects
	and reset if for the UNKNOWN_OBJ. that way we can look at
	the union values and still be safe.

2018-03-27  Reini Urban  <rurban@cpan.org>

	WIP UNKNOWN_OBJ
	use dwg_decode_object/entity for eed, reactors, xdic, even for
	unknown objects/entities. So far all of them are class objects.
	store the raw bytes as raw field vector, TODO /8 slack if
	bitsize % 8.

	This fixes the version dependent handling of bitsize, eed, reactors, xdic,
	and should now handle all of the MATERIAL, SCALE, ... objects.

2018-03-27  Reini Urban  <rurban@cpan.org>

	fortify dwg_free, document clearing all of Dwg_Data
	initialize all critical Dwg_Data pointers and counters,
	so that dwg_free will not touch uninitialized data.

	document that all incoming dwg data will be cleared in
	dwg_decode_data and dwg_read_file.

2018-03-27  Reini Urban  <rurban@cpan.org>

	more DXF adjustments
	rename VPORT fields to its DXF names.
	rename Class fields: proxyflag.
	item_class_id really is named Is-an-entity flag: 1f2 for entity, 1f3 for object.
	See http://images.autodesk.com/adsk/files/autocad_2012_pdf_dxf-reference_enu.pdf

	more DXF adjustments
	WIREFRAME is not a headervar, DISPSILH is probably meant.
	rename OBSCUREDCOLOR back to DXF OBSCOLOR, likewise
	OBSCUREDLTYPE => OBSLTYPE, IDEXCTL => INDEXCTL.

	dxf2dwg: fix r11-r2000
	and add some more missing header_variables_r11

	decode_preR13 WIP
	added some prelim. header_variables_r11.spec,
	not bit-encoded, just raw.
	add the raw decoding layout, as found out 1995.

	Update TODO

	doc: add Examples and more

	add dxf2dwg.c WIP
	TODO: read DXF, code/name pairs, and look them up in one
	of the specs.

2018-03-27  Reini Urban  <rurban@cpan.org>

	add dwg_version_as
	similar to the acad saveas options,
	to map the the --as-rVER option to our internal Dwg_Version_Type, e.g. R_2000.

	* src/common.c, src/common.h (dwg_version_as): added.
	* src/common.h (Dwg_Version_Type): added R_INVALID (similar to R_BEFORE).
	* examples/dwg2dxf.c, examples/dwgrewrite.c: use dwg_version_as.

2018-03-27  Reini Urban  <rurban@cpan.org>

	add R_12, the same as R_11 but more prominent
	AC1009 is mostly referenced as Saveas R 12 format, not R 11.
	So we do support R_12, with the same AC1009 DWG.

2018-03-27  Reini Urban  <rurban@cpan.org>

	more dwg2dxf work
	add some old defaults, and pre-r13 vars:
	HANDLING, paperspace, ...

	fix option handling a bit

2018-03-27  Reini Urban  <rurban@cpan.org>

	add ole2frame to unit-testing
	was skipped

	add xrecord API and testcase
	set num_eed in the XRECORD object.
	TODO: change the linked list into an array, to unify with the
	generic eed array

	dwgread: simplify

	dwg2svg2: 32bit now fixed

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix 32bit dwg_api
	dwg_api.o didn't load stdint.h, so had a different size than
	dwg*.o

	* src/dwg_api.c: include stdint.h, inttypes.h, fixing 32bit.

2018-03-27  Reini Urban  <rurban@cpan.org>

	testcases: use DEJATOOL
	see https://www.gnu.org/software/automake/manual/html_node/DejaGnu-Tests.html
	and https://www.embecosm.com/appnotes/ean8/ean8-howto-dejagnu-1.0.html

	* test/Makefile.am: : use DEJATOOL, not RUNTESTDEFAULTFLAGS
	* test/testcases/Makefile.am: remove unused RUNTESTDEFAULTFLAGS
	* test/testcases/common.c: remove unused code

2018-03-27  Reini Urban  <rurban@cpan.org>

	configure: fix AC_MSG_WARN quoting

	dwg2svg2: more work on 32bit crashes

	decode_R13_R15: optional section[4]
	only read the measurement section when appropriate.
	though in praxis it always is.

	fixup examples/dwg2SVG.c
	var initialization, dwg global not on stack.

	doc: remove dwg_print_object from API
	it is using the Bit_Chain.
	But add examples how to iterate over all entities,
	in model space and paper space.

2018-03-27  Reini Urban  <rurban@cpan.org>

	add Bit_Chain arg to dwg_print_object
	and remove it from the global _dwg_struct.
	move dwg_print_object from public dwg.h to private print.h,
	because Bit_Chain is not public.

	The bit_chain field was added with commit b24e5329b3e0ae178bb7162a6a492c0f6313899d
	Author: Rodrigo Rodrigues da Silva <pitanga@members.fsf.org>
	Date:   Fri Jan 29 04:43:47 2010 -0200

	Added macro created print functions, made some functions private, increased
	logging trying to fix objectrefs.

2018-03-27  Reini Urban  <rurban@cpan.org>

	unit-testing: move dwg struct from stack to global
	on some 32bit systems the stack might be too small for 2500 byte.

	extend the dwg_api
	dwg: num_classes, num_objects, num_entities, object[], class[],
	eed, bitsize.

2018-03-27  Reini Urban  <rurban@cpan.org>

	dwgbmp: fix use-after-free
	cannot write the picture from the freed dwg.
	free the dwg afterwards.

	darwin: add a dymutil helper target hack, for better symbolization.

2018-03-27  Reini Urban  <rurban@cpan.org>

	load_dwg: silence unused-params warnings

2018-03-27  Reini Urban  <rurban@cpan.org>

	more work on dwg_free
	add dwg_object_free().

	protect from double-free the bit_chain by setting
	bit_chain.size = 0.

2018-03-27  Reini Urban  <rurban@cpan.org>

	.gitignore: add renamed examples

2018-03-27  Reini Urban  <rurban@cpan.org>

	rearrange dwg.h
	rename dwg_ot_layout to layout_number,
	rename second_header.handlerik to second_header.handler.

	free the dwg a bit more.
	the objects and entities are still leaking massively.

2018-03-27  Reini Urban  <rurban@cpan.org>

	dwg2svg2: use global dwg
	not stack allocated.
	printf header after getting the objects.
	zero-fill the dwg struct data.

2018-03-27  Reini Urban  <rurban@cpan.org>

	working on 32bit crashes
	add two helper handles for mspace_block and pspace_block
	BLOCK_HEADER.
	zero-fill new objects.

	TODO:
	someone, maybe CRC, is overwriting the Dwg_Struct after num_classes,
	32bit only. with dwg2svg2 only.

	  CRC = 36953}, num_classes = 4,
	  dwg_class = 0x8153100, num_objects = 61, object = 0x8158398, num_layers = 0,
	  num_entities = 12, num_object_refs = 154, object_ref = 0x8155b78, layer_control = 0x81532a0,
	  mspace_block = 0x8154ff0, pspace_block = 0x8156560,
	=>
	  CRC = 65028}, num_classes = 3086986712,
	  dwg_class = 0xad9f3224, num_objects = 1336173547, object = 0x9059, num_layers = 4,
	  num_entities = 135606528, num_object_refs = 61, object_ref = 0x8158398,
	  layer_control = 0x0, mspace_block = 0xc, pspace_block = 0x9a,

	CRC ... num_entities is wrong.

2018-03-27  Reini Urban  <rurban@cpan.org>

	configure: make python optional
	check for swig, and only then for python.
	and only then build the python bindings.

	allow older 1.11.6 automake, e.g. debian wheezy.
	don't use PKG_CHECK_MODULES, just call if pkg-config.
	CFLAGS: add -fno-omit-frame-pointer to gcc for better 32bit debugging.

2018-03-27  Reini Urban  <rurban@cpan.org>

	improve win32 support
	tested with i686-w64-mingw32 under wine 32bit.
	still failing test case: dwg2svg2 with both dwgs.

	DIMTXSTY: fix typo
	fixes dwg2dxf

	decode: zero-fill fresh memory
	use calloc, not malloc, to be on the safe side.

2018-03-27  Reini Urban  <rurban@cpan.org>

	dwg2dxf headers, rename some header_vars to dxf
	rename *_{M,P}SPACE vars to the canonical dxf names.
	e.g. INSBASE_MSPACE => INSBASE,
	INSBASE_PSPACE => PINSBASE.

	finished header section.

2018-03-27  Reini Urban  <rurban@cpan.org>

	add dwg2dxf WIP
	just the first few header vars yet

	minor cleanup
	remove unused Dwg_Data_Type from src/common.h

	add proper error handling, ...

	AUTHORS: add myself

	README: add needed packages

	calloc entity/object
	zero-fill fresh entities/objects.
	initialize Dwg_Object->bitsize, mostly just the object/entity part is initialized

	dwgrewrite: fix filename_out

	restore C++ compat
	use extern "C"

	extend Dwg_Handle types
	from char to int. codes can go up to 1000, some even higher.

	abstract dwg_decode_eed function
	similar to dwg_decode_xdata for XRECORD.
	add objid_handles code to XRECORD, decode only
	dwg.h: add datbyte offset to dwg_object to know the end from start (=datbyte)
	and bitsize.

	ChangeLog: formatting

	unit-testing: more type fixes
	fix most of the remaining trash code and formatting.

2018-03-27  Reini Urban  <rurban@cpan.org>

	dwg_ps: fix asan crash
	obj->tio.entity->entity_mode is not always defined, only for entities.

	* examples/dwg_ps.c (create_postscript): remove wrong
	  obj->tio.entity->entity_mode check

2018-03-27  Reini Urban  <rurban@cpan.org>

	add FIELD_CAST
	several r13-r14 DIM vars have only type RC.
	store it as BS, and cast it up to BS.
	detected with clang -Wformat, not with gcc.

2018-03-27  Reini Urban  <rurban@cpan.org>

	More fields, start with adding dxfgroup
	FIELDS_G*.
	Also avoid eed[i] overflows.

	Avoid ntoh() dependency, add bit_read_RS_LE().

2018-03-27  Reini Urban  <rurban@cpan.org>

	cross-compiler support
	disable python+swig when cross-compiling.
	disable rpl_malloc replacement, because of
	AC_CHECK_HEADERS malloc.h.
	we don't need it, we just want to know if it's needed.

	add gcov probe and target
	usage with suffix'ed gcc:
	  CC=gcc-mp-6 ./configure --enable-gcov=gcov-mp-6
	  make gcov

	add ole2frame to testcases
	and export its ENTITY

2018-03-27  Reini Urban  <rurban@cpan.org>

	xmlsuite: fix compiler warnings and libxml2 insanity
	they insist on using unsigned char* in their public API, oh my.
	declare all missing funcs, and a lot more.

	properly return the exit code.

2018-03-27  Reini Urban  <rurban@cpan.org>

	dwgbmp: proper error handling
	add perror calls when fwrite failed.
	write to stderr.
	return failing exit code.

	LOG_{ERROR,WARN}: no duplicate ending \n
	LOG_{ERROR,WARN} already adds a \n

	decode: adjust unhandled classes/objects
	fixup the TODO list, add GROUP and WIPEOUT to the handled classes

2018-03-27  Reini Urban  <rurban@cpan.org>

	dwg.h: check HAVE_WCHAR_H, fix DIMTAD, DIMZIN type
	wchar_t is needed for examples, ... rely in HAVE_WCHAR_H.

	change DIMTAD, DIMZIN decl from RC to BS, as used since r2000.
	we need the larger type for the common storage.

2018-03-27  Reini Urban  <rurban@cpan.org>

	testcases/tolerance.c: fix and add extrusion test
	there was a mixup

	dwg_api: add missing common entity/object APIs
	declarations only

2018-03-27  Reini Urban  <rurban@cpan.org>

	decode: LOG_INFO handles when read
	not later when the whole EED and more was read.

	TODO: we already decrypt the raw SAT data. we only might want to
	parse it into some SAT structures.

2018-03-27  Reini Urban  <rurban@cpan.org>

	EED done
	inline the EED char buffers.

	* configure.ac: probe for wchar.h needed for r2007+ text.
	* src/dwg.h (Dwg_Eed_Data): inline the buffers, and comment that the
	  integers need to be endian swapped for the API, if they need to be
	  interpreted. They are still in network order. But mostly just dump the
	  raw. Swap the codepage.
	  (Dwg_Eed): Dwg_Eed_Data *data is now a calloc'd pointer, not inlined.
	* src/bits.h: add <wchar.h>, needed for a unit-test.
	* src/decode.c, src/encode.c: use the changed Dwg_Eed_Data.
	  add length sanity checks and offset deviations. special-case eed_0 strings.

2018-03-27  Reini Urban  <rurban@cpan.org>

	EED: add dwg_encode_{object,entity} to encode WIP
	also write common_entity_handle_data,
	comment out unused objects and the proxy subtype. src compiles now warning free.

2018-03-27  Reini Urban  <rurban@cpan.org>

	rewrite EED (untested), more common entity support
	Fix multiple instances of EED.
	It it either stored as array, but more likely as linked list.
	Anyway, we need to store it as array of structs, not as linked list.
	But for sure not as the next EED overwriting the previous.

	* src/common_entity_handle_data.spec: Add support for more entity
	  fields R_2010+: simplify nolinks, add color_handle, add
	  has_*_visualstyle R_2010+.
	* src/dwg.h: add Dwg_Eed_Data, Dwg_Eed structs, num_eed + Dwg_Eed *eed in
	  entity and object, add color_handle, *_visualstyle.
	* src/decode.c (dwg_decode_entity, dwg_decode_object): add num_eed,
	  minor rewrite of eed.
	  add RLL support for picture_size R_2007+, add has_*_visualstyle R_2010+.
	* src/encode.c (dwg_encode_entity, dwg_encode_object): likewise.

2018-03-27  Reini Urban  <rurban@cpan.org>

	maint: add error messages, copyright header
	* src/reedsolomon.c: add copyright header, if DEBUG unused coe
	* src/decode_r2007.c: add LOG_ERROR messages to the error branches

	fix test/testcases default
	worked ok via make check, but not from the cmdline

	maint of examples/load_dwg.py
	fix the name in usage,
	fix style

	cleanup testcases
	fix the remaining warnings, cleanup the remaining junk
	boilerplate, add decls.

2018-03-27  Reini Urban  <rurban@cpan.org>

	win32: unknown conversion type character h in format
	for RC on mingw64

	* src/dwg.h: special-case FORMAT_RC on windows.

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix examples/dwg2svg2: get the center
	* examples/dwg2svg2.c: circle.center was never initialized.
	  fix the paperspace limits calculation: LIM not EXT.
	  use double, not float.
	* examples/dwg_ps.c: use double, not float.

2018-03-27  Reini Urban  <rurban@cpan.org>

	more work on R2010 objects
	And assert on invalid section/page sizes and counts.
	all r2007_file_header values for r2010 are still invalid.
	for 2007 only some.

	* src/decode.c (dwg_decode_data): enhance version mapper to all.
	  simplify the warn and error messages for unknown versions.
	  (resolve_objectref_vector): return success code.
	  (decode_R2004): delete unused File Header Data fields, now parsed via spec (also encodable).
	* src/decode_r2007.c: add DBG_MAX_COUNT, DBG_MAX_SIZE asserts.
	* src/dwg.h, src/dwg.spec: more R2010+ fields for ATTRIB, ATTDEF, DIMENSION*.

2018-03-27  Reini Urban  <rurban@cpan.org>

	decode: demote some LOG_ERROR to LOG_WARN
	they are harmless mostly. libdxfrw just ignores them and much more.
	And LOG_ERROR should really panic, not continue.

	rename examples, dwg prefix
	all this to be able to use bin_PROGRAMS for faster
	debugging cycles, without tests or long cmdlines.
	anyway: rewrite => dwgrewrite, test => dwgread,
	testSVG => dwg2SVG, testsvg2 => dwg2svg2, get_bmp => dwgbmp

	Makefile.am: build examples before the tests
	often we need to test via an example before running the full
	testsuite

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix the dxfname, no final *
	the last char is always \0, don't replace it with *.
	the len BS includes the final \0, but we keep that.
	we only store the ASCIIZ anyway.

	also don't replace unprintable chars with ~.
	we do support encode and codepages conversion later.
	with codepages isprint() is relative.
	thus unprintable chars can only be replaced in temp. print helpers.

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix auxheader, trace types
	* src/auxheader.spec: RS unknown[10] => RS unknown_rs[6] + RL zero_l[5],
	  print unknown_rs as hex.
	* src/dwg.h: print RC as 0x%hhx and BB as %uc.
	* src/logging.h: add final \n to LOG_ERROR and LOG_WARN.
	* src/dec_macros.h: trace the types also. needed for analysis.

	fixup make distcheck for test-data
	TODO: txttoxml.py: if built from a non-writable srcdir writing
	to the srcdir/test-data/*.xml will fail. eg make distcheck
	The XML must be written into the builddir.

	travis: add python-libxml2

	decode_r2007: use inttypes
	use proper %PRIu64 for %lld format types.
	on 64bit %lld is for long long, but we have only simple uint64_t

2018-03-27  Reini Urban  <rurban@cpan.org>

	add WIPEOUT entity
	not an object, rather a IMAGE.
	also: fix obj->bitsize to BITCODE_RL,

	disable reading some unknown objects/entities, we have better code to deal
	with that.

2018-03-27  Reini Urban  <rurban@cpan.org>

	more unit-testing cleanup
	coding-style, less useless comments,
	fix some types, esp. TEXT vert_align, horiz_align,
	remove some more output_object() funcs.

	rename example.dwg to example_2000.dwg
	use versioned dwg names

	xmlsuite: move txttoxml.py
	move txttoxml.py from test-data to xmlsuite, where it belongs to.
	add skeletons for test-data/{r13,r14,2018}

	dwg.h: rename 4 internal _dwg_bitecode_* to _dwg_bitcode_3bd
	unused internally and in the API

	README, TODO: update
	* README: update outdated info
	* TODO: update outdated info
	* src/dwg.spec: add my name

2018-03-27  Reini Urban  <rurban@cpan.org>

	api: add missing entities
	OLEFRAME, OLE2FRAME, DUMMY, LONG_TRANSACTION, PROXY_ENTITY, IMAGE
	were missing the block extractor and object extractors.

	rename internal 3D_FACE type to 3DFACE for consistency:
	_dwg_entity_3D_FACE => _dwg_entity_3DFACE

2018-03-27  Reini Urban  <rurban@cpan.org>

	encode: limit the scope of obj, _obj
	to the enclosing block only. these are temp. values
	used in the helper macros. Fixes -Wshadow warnings

	src: fix format types
	in LOG calls, detected by the new type strictness

	Fix {vert,horiz}_align type from double to short
	and properly document it

	cleanup testcases
	use proper types, only one error,
	and much less trash.
	it really should have be written with type macros,
	but now this might be too much work for no gain.

	Move test-data DWGs into one global place

	refactor test dirs
	under one single base dir test. dejagnu only used for testcases.
	TODO: test-data

	cleanup unit-tests
	use proper types, only one error,
	and much less trash.
	it really should have be written with type macros,
	but now this might be too much work for no gain.

	dwg.h: better description of the raw types

2018-03-27  Reini Urban  <rurban@cpan.org>

	strict uint32_t/BITCODE_RL types
	not really long on 64bit systems.
	add RLL type support.
	be strict about BITCODE_BS, BITCODE_BL types.

	Note that the raw RS RL ... types are not native raw. They are network-encoded,
	i.e. big-endian. so they need to swap words.

2018-03-27  Reini Urban  <rurban@cpan.org>

	new Dwg_R2004_Header, use r2004_file_header.spec
	* src/decode.c: use new dec_macros.h,
	  avoid -Wshadow, put spec readers into its separate blocks,
	  indentation, unuse _2004_header_data, rather put into the global
	  Dwg_Struct, use the new "r2004_file_header.spec".
	* src/decode_r2007.c (decrypt_block): added
	* src/dwg.h: use stdint types also for BITCODE_BL (not long, uint32_t),
	  add BITCODE_RLL (uint64_t) for decode_r2007,
	  identify some more header fields,
	  add r2004_header, with padding.
	* src/dwg.c: use FORMAT_* types.

	add dec_macros.h, r2004_file_header.spec, spec.h
	decode macros are to be used for src/decode_r2007.c also.
	extract the common spec macros.
	add r2004_file_header.spec for the 2004 File Header,
	and fix two addresses there.

	automake: harmonize LDADD

	decode_r2007.c: import rs_decode_block
	* src/decode_r2007.c: import rs_decode_block
	* src/reedsolomon.c: whitespace, GNU formatted

2018-03-27  Alex Papazoglou  <papazoga@gmail.com>

	Reed-Solomon (255,239) codec.
	Two routines, rs_encode_block() and rs_decode_block() are provided.
	The first will encode a block, depositing the 16 parity bytes in a
	caller-preallocated buffer. The second decodes a block; if there
	are errors it optionally fixes them in place using the Euclidean
	algorithm. Two example programs are provided to demonstrate.

	rurban: guarded malloc.h

	* examples/rsdecode.c: decode a stream
	* examples/rsencode.c: encode a stream
	* Makefile.am: added reedsolomon.c
	* decode_r2007.c: incorporated rs_decode_block()
	* reedsolomon.c: Reed-Solomon codec.

2018-03-27  Reini Urban  <rurban@cpan.org>

	cosmetics

	fix parenthandle code in 2 classes
	with r2000 MLINESTYLE and DICTIONARY parenthandle codes are 8, not 4.

2018-03-27  Reini Urban  <rurban@cpan.org>

	more C99: add stdint.h, inttypes.h
	needed only for the bits_test.c testcase, which
	needs uint16_t.
	But it is used in bits, even publicly, so put it into
	common.h

	* src/common.h: include config.h, <stdint.h>, <inttypes.h>.
	* src/bits.c: include <stdint.h>, <inttypes.h>.

2018-03-27  Reini Urban  <rurban@cpan.org>

	examples: add config.h
	for better inttypes

	* examples/dwg_ps.c: add config.h
	* examples/get_bmp.c: add config.h
	* examples/load_dwg.c: add config.h
	* examples/rewrite.c: add config.h
	* examples/test.c: add config.h
	* examples/testSVG.c: add config.h
	* examples/testsvg2.c: add config.h

2018-03-27  Reini Urban  <rurban@cpan.org>

	add WIPEOUT
	undocumented class, but seen in the wild

	cleanup public headers
	no c++ comments,
	check STDC optionally for better inttypes
	use inttypes for uint16_t vs %hu
	remove logging.h dependency

2018-03-27  Reini Urban  <rurban@cpan.org>

	more automake improvements
	add AM_SILENT_RULES.
	add missing DIST files, fixes distcheck.
	testsuite/testcases: add -lm, failed on linux/gcc, passed on the smokers and
	everywhere else.

	* Makefile.am: add LIBTOOL_DISTCLEAN_FILES.
	* configure.ac: add AM_SILENT_RULES.
	* src/Makefile.am: add EXTRA_HEADERS, esp. the new specs.
	* testsuite/testcases/Makefile.am: add -lm to LDADD
	* testsuite/xmlsuite/Makefile.am: remove CFLAGS exception,
	  it is now globally

2018-03-27  Reini Urban  <rurban@cpan.org>

	.appveyor.yml: skip dejagnu on cygwin for now
	fails to link for some unknwn reason. passes all configure probes tests.
	See https://github.com/rurban/libredwg/issues/1

	rename CELLSTYLEMAP_Cell.class to .type
	a reserved keyword

	more header_vars: FLAGS, ...
	split FLAGS into some known flags,
	set defaults for some new vars,
	BLIPMODE, DIMSAV are used earlier than R13,
	the 4 unknown texts are used only before R_2007

	Fix the DIMJUST bug
	DIMTDEC was missing, a few lines above.

	change RS, BS to uint16_t
	a true short.

	add auxheader.spec
	previously known as unknown section 5

2018-03-27  Reini Urban  <rurban@cpan.org>

	More objects and versions
	Prepare for all the old versions.
	Add most missing new objects/classes.

	Rename IMAGEDEFREACTOR to IMAGEDEF_REACTOR, same as the dxf class name.
	Add CELLSTYLEMAP, FIELD/AcDbField, VISUALSTYLE (undocumented fields, probably
	just a hard pointer to its dictionary).
	Add typed obejcts: OLEFRAME, DUMMY, LONG_TRANSACTION, PROXY_ENTITY, PROXY_OBJECT.
	Class/Object VBA_PROJECT is probably just handled in its own special section.

	Fix the text_area_is_present global variable, only set in decode, and make
	it a private field.

	Use 4BITS for the view_mode.

	Better named warn messages on unknown objects: print the unhandled/unknown name.
	Remove duplicate DIMJUST header_variable !?!

	Find name for TSTACKALIGN, TSTACKSIZE header_variables.
	Add LOG_WARN macro.

2018-03-27  Reini Urban  <rurban@cpan.org>

	Add to ChangeLog
	the missing entries since 2010-07-21

	* ChangeLog: add missing entries

2018-03-27  Reini Urban  <rurban@cpan.org>

	cygwin libtools -no-undefined
	to be able to make a shared lib, without only static.

	* src/Makefile.am (libredwg_la_LDFLAGS): add -no-undefined for cygwin.

2018-03-27  Reini Urban  <rurban@cpan.org>

	abstract common file header into header.spec
	The header is basically the same for all versions.
	we read until num_sections, resp. the first encrypted block

	* src/header.spec: added.
	* src/decode.c (decode_R13_R15,decode_R2004,decode_R2007): use header.spec.
	* src/encode.c: use header.spec.
	* src/dwg.c: fix indentation, rename stk to dwg
	* src/dwg.h: named struct Dwg_Header, add header.spec variables

2018-03-27  Reini Urban  <rurban@cpan.org>

	add read+write r2004 header
	until the encryption at 0x80

	rework file header <=r15
	fill in the missing file header bits, for encode
	to be byte equal.
	rename unknown 1 section to 5 (which it is).

	configure.ac: set CFLAGS=-g
	no optimization yet needed. turn it on later

2018-03-27  Reini Urban  <rurban@cpan.org>

	.travis.yml: debug make distcheck
	only failing remotely. ok locally

	* .travis.yml: fixup make distcheck

2018-03-27  Reini Urban  <rurban@cpan.org>

	Cleanup the CRC error messages

2018-03-27  Reini Urban  <rurban@cpan.org>

	Fix the section 0 crc comparison, add HANDLE logging
	CRC was already read by header_vars.spec into the CRC field.
	Don't read it again. The initial crc check passes now.

	Separate HANDLE from INSANE logging levels. INSANE for the individual
	VECTOR values, i.e. string and binary content.

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix crc, rename bit_ckr8 to bit_calc_CRC
	export bit_calc_CRC: it is used by decode.c
	use uint16_t to guarantee proper overflow.

	rewrite does now write examples/example.dwg successfully.

	translate more bit_datenaro

	* src/bits.c, src/bits.h: use uint16_t for the seed and crc,
	  rename bit_ckr8 to bit_calc_CRC.
	* configure.ac: add AC_TYPE_UINT16_T
	* src/decode.c, testsuite/testcases/bits_test.c: use renamed
	  bit_calc_CRC function

2018-03-27  Reini Urban  <rurban@cpan.org>

	doc: add basic types

	rewrite.exe alive.test fix

	testcases: fix more wrong types

2018-03-27  Reini Urban  <rurban@cpan.org>

	refactor both unit tests
	extract the common function output_object
	into common.c via the arg DWG_TYPE.

	fix some wrong leftover float and int types.

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix more dwg_api int types
	to the BITCODE types.
	There were still several errors, found out in the
	unit tests.

	unit-testing: fix wrong float variables
	to double

	decode_r2007: add missing function declarations
	* src/decode_r2007.c: add missing function declarations.

2018-03-27  Reini Urban  <rurban@cpan.org>

	examples/Makefile.am: add CLEANFILES
	and check-syntax.
	Fixes make distcheck.

	* examples/Makefile.am: add CLEANFILES, check-syntax

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix examples/dwg_ps
	* examples/Makefile.am: fix dwg_ps_LDADD.
	* examples/dwg_ps.c: various fixes.

	print.c: declare assert.h
	used in dwg.spec: assert(FIELD_VALUE(scale_flag) == 0)

	dwg_encode_chains: initialize ckr_missing
	at the beginning, not just in the loop.

	MINSERT spec
	* src/dwg.spec (MINSERT):
	  fix check logic: no multiple x == y == z expr,
	  avoid sequence point problems when initializing:
	  x=y=z=1.0

	dwg_encode_chains: fix handle swap code
	* src/encode (dwg_encode_chains): fixed the handle swap code

	fix detected warnings
	duplicate decarations, unused variables,
	declaration after statement, ...

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix SWIG_LIB windows newline
	mingw64 swig -swiglib prints a newline after each lib,
	there are two:
	SWIG_LIB = C:\msys64\MINGW64\bin\Lib
	C:/msys64/MINGW64/share/swig/3.0.12

	* m4/ax_pkg_swig.m4: strip \r\n in SWIG_LIB

2018-03-27  Reini Urban  <rurban@cpan.org>

	probe for warn, mingw and valgrind
	Add probes for mingw cross-compilation (testing via wine),
	c99, compile-time SIZEOF(size_t) (for BLL, ULL),
	useful warning flags and valgrind.
	This caught a lot of errors.

	* configure.ac: add many probes
	* src/Makefile.am: add @WARN_CFLAGS@
	* testsuite/testcases/Makefile.am: add @WARN_CFLAGS@, @VALGRIND_CHECK_RULES@
	* testsuite/xmlsuite/Makefile.am: add @VALGRIND_CHECK_RULES@
	* unit-testing/Makefile.am: add @WARN_CFLAGS@, @VALGRIND_CHECK_RULES@
	* .gitignore: adjust for m4 changes
	* m4/.placeholder: not longer needed.
	* m4/ax_append_compile_flags.m4: added.
	* m4/ax_append_flag.m4: added.
	* m4/ax_append_link_flags.m4: added.
	* m4/ax_check_compile_flag.m4: added.
	* m4/ax_check_link_flag.m4: added.
	* m4/ax_compile_check_sizeof.m4: added.
	* m4/ax_compiler_flags.m4: added.
	* m4/ax_compiler_flags_cflags.m4: added.
	* m4/ax_compiler_flags_gir.m4: added.
	* m4/ax_compiler_flags_ldflags.m4: added.
	* m4/ax_is_release.m4: added.
	* m4/ax_require_defined.m4: added.
	* m4/ax_valgrind_check.m4: added.

2018-03-27  Reini Urban  <rurban@cpan.org>

	add .appveyor.yml
	Tested at https://ci.appveyor.com/project/rurban/libredwg.
	This is optional, but can be used to create binary releases
	for windows/cygwin

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix make distcheck
	add missing EXTRA_DIST files

	* unit-testing/Makefile.am: add common.c to EXTRA_DIST,
	  fix AM_CFLAGS for make distcheck.

2018-03-27  Reini Urban  <rurban@cpan.org>

	doc: fill in some basics

2018-03-27  Reini Urban  <rurban@cpan.org>

	libredwg.la: direct -lm dependency
	we use now nan() in the API code.

	* src/Makefile.am: add -lm to libredwg_la_LDFLAGS.
	* examples/Makefile.am: remove -lm from LDADD,
	  use LDADD not AM_LDFLAGS,
	  add -Wall to AM_CFLAGS.
	* testsuite/testcases/Makefile.am: remove -lm from LDADD.
	* testsuite/xmlsuite/Makefile.am: remove -lm from LDADD.
	* unit-testing/Makefile.am: remove -lm from LDADD.

2018-03-27  Reini Urban  <rurban@cpan.org>

	unit-testing/Makefile.am: add -lm
	for nan(). clang does not have it, only gcc

	configure.ac: whitespace

	use python_PYTHON
	fixed make distcheck. See https://www.gnu.org/software/automake/manual/html_node/Python.html

	add a .travis.yml
	configured at https://travis-ci.org/rurban/libredwg/
	but you can clone and configure your own. it's optional.

	support rewrite as other version
	when encoding into another version than the original
	dwg version, check and ignore empty handles, and
	use empty strings, and numbers as default.

2018-03-27  Reini Urban  <rurban@cpan.org>

	build: make swig and dejagnu optional
	make python bindings only with swig and python.
	run dejagnu tests only with dejagnu.

	* Makefile.am: optional bindings and testsuite SUBDIRS.
	* testsuite/Makefile.am: optional testcases SUBDIRS.
	* configure.ac: export HAVE_DEJAGNU and HAVE_SWIG_PYTHON to automake.

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix swig with stdint.h
	skip importing from stdint.h, but we need
	dwg.i importing from dwg.h and dwg_api.h.

	* src/dwg.h: no SWIGIMPORTED for stdint.h.
	* bindings/python/Makefile.am (swig_wrap_python.c): remove
	  -I/usr/include.

2018-03-27  Reini Urban  <rurban@cpan.org>

	src/Makefile.am: cleanup
	no functional changes.

	* src/Makefile.am: minor cleanup, no changes.

2018-03-27  Reini Urban  <rurban@cpan.org>

	Fix bit_write_4BITS
	and its testcase bit_write_4BITS_tests.
	simply write 4 bits. used in VIEW view_mode.
	All testcases pass now.

	* src/bits.c (bit_write_4BITS): fix implementation.
	* testsuite/testcases/bits_test.c: enhance tests a bit, print the
	  failing result, no functional changes.

2018-03-27  Reini Urban  <rurban@cpan.org>

	fix testcases/lwpline
	wrong flags type, fix to BITCODE_BS.

	* testsuite/testcases/lwpline.c: fix flags type

2018-03-27  Reini Urban  <rurban@cpan.org>

	testcases: fix wrong float
	testcases used float with too low numeric precision to pass the tests.
	fix to BITCODE_BD ie double.
	Remaining test errors: bit_write_4BITS, lwpline reading flag

	* testsuite/testcases/arc.c,
	  testsuite/testcases/attdef.c,
	  testsuite/testcases/attrib.c,
	  testsuite/testcases/circle.c,
	  testsuite/testcases/ellipse.c,
	  testsuite/testcases/line.c,
	  testsuite/testcases/minsert.c,
	  testsuite/testcases/mline.c,
	  testsuite/testcases/mtext.c,
	  testsuite/testcases/point.c,
	  testsuite/testcases/polyline_2d.c,
	  testsuite/testcases/shape.c,
	  testsuite/testcases/solid.c,
	  testsuite/testcases/text.c,
	  testsuite/testcases/tolerance.c,
	  testsuite/testcases/trace.c: change float to  BITCODE_BD

2018-03-27  Reini Urban  <rurban@cpan.org>

	work on testsuites
	on macports with make check PYTHON=/opt/local/bin/python2.7

	examples/alive.test: TODO the rewrite tests
	until we can fix them

2018-03-27  Reini Urban  <rurban@cpan.org>

	python: depend on src/dwg.h
	and add -I/usr/include for stdint.h (for uint64_t).

	Note that on macports with gcc-mp-x you need to use the
	gcc-specific -I/opt/local/lib/gcc6/gcc/x86_64-apple-darwin15/6.4.0/include
	instead.
	And build with the system python, but run the
	tests with macports python make check PYTHON=/opt/local/bin/python2.7

	* bindings/python/Makefile.am: depend on src/dwg.h, add
	  -I/usr/include for stdint.h

2018-03-27  Reini Urban  <rurban@cpan.org>

	WIP Start R_2013, R_2018 support, stricter types, ...
	add missing types, header variables, ...
	read and write  3B and BLL types, BLL: 64bit only.
	(this drops support for 32bit only, without uin64_t.
	maybe probe for that)

2018-03-15  Reini Urban  <rurban@cpan.org>

	cygwin libtools -no-undefined
	* src/Makefile.am (libredwg_la_LDFLAGS): add -no-undefined for cygwin.

2018-03-15  Reini Urban  <rurban@cpan.org>

	abstract common file header into header.spec
	* src/header.spec: added.
	* src/decode.c (decode_R13_R15,decode_R2004,decode_R2007): use header.spec.
	* src/encode.c: use header.spec.
	* src/dwg.c: fix indentation, rename stk to dwg
	* src/dwg.h: named struct Dwg_Header, add header.spec variables

2018-03-15  Reini Urban  <rurban@cpan.org>

	add read+write r2004 header
	until the encryption at 0x80

2018-03-15  Reini Urban  <rurban@cpan.org>

        * src/dwg.h: rework file header <=r15,
        fill in the missing file header bits, for encode
	to be byte equal.
        * src/decode.c (decode_R13_R15): rename unknown 1 section to 5
        (which it is).
	* src/bits.c: style

2018-03-15  Reini Urban  <rurban@cpan.org>

	configure.ac: set CFLAGS=-g
	no optimization yet needed. turn it on later

2018-03-15  Reini Urban  <rurban@cpan.org>

	.travis.yml: debug make distcheck
	* .travis.yml: fixup make distcheck

2018-03-15  Reini Urban  <rurban@cpan.org>

	Cleanup the CRC error messages

2018-03-15  Reini Urban  <rurban@cpan.org>

	Fix the section 0 crc comparison, add HANDLE logging
	CRC was already read by header_vars.spec into the CRC field.
	Don't read it again. The initial crc check passes now.

	Separate HANDLE from INSANE logging levels. INSANE for the individual
	VECTOR values, i.e. string and binary content.

2018-03-15  Reini Urban  <rurban@cpan.org>

	fix crc, rename bit_ckr8 to bit_calc_CRC
	* src/bits.c, src/bits.h: use uint16_t for the seed and crc,
	  rename bit_ckr8 to bit_calc_CRC.
	* configure.ac: add AC_TYPE_UINT16_T
	* src/decode.c, testsuite/testcases/bits_test.c: use renamed
	  bit_calc_CRC function

2018-03-15  Reini Urban  <rurban@cpan.org>

	doc: add basic types

2018-03-15  Reini Urban  <rurban@cpan.org>

	rewrite.exe alive.test fix

2018-03-15  Reini Urban  <rurban@cpan.org>

	testcases: fix more wrong types

2018-03-15  Reini Urban  <rurban@cpan.org>

	refactor both unit tests
	extract the common function output_object
	into common.c via the arg DWG_TYPE.

	fix some wrong leftover float and int types.

2018-03-15  Reini Urban  <rurban@cpan.org>

	fix more dwg_api int types
	to the BITCODE types.
	There were still several errors, found out in the
	unit tests.

2018-03-15  Reini Urban  <rurban@cpan.org>

	unit-testing: fix wrong float variables
	to double

2018-03-15  Reini Urban  <rurban@cpan.org>

	decode_r2007: add missing function declarations
	* src/decode_r2007.c: add missing function declarations.

2018-03-15  Reini Urban  <rurban@cpan.org>

	examples/Makefile.am: add CLEANFILES
	* examples/Makefile.am: add CLEANFILES, check-syntax

2018-03-15  Reini Urban  <rurban@cpan.org>

	fix examples/dwg_ps
	* examples/Makefile.am: fix dwg_ps_LDADD.
	* examples/dwg_ps.c: various fixes.

2018-03-15  Reini Urban  <rurban@cpan.org>

	print.c: declare assert.h
	used in dwg.spec: assert(FIELD_VALUE(scale_flag) == 0)

2018-03-15  Reini Urban  <rurban@cpan.org>

	dwg_encode_chains: initialize ckr_missing
	at the beginning, not just in the loop.

2018-03-15  Reini Urban  <rurban@cpan.org>

	MINSERT spec
	* src/dwg.spec (MINSERT):
	  fix check logic: no multiple x == y == z expr,
	  avoid sequence point problems when initializing:
	  x=y=z=1.0

2018-03-15  Reini Urban  <rurban@cpan.org>

	dwg_encode_chains: fix handle swap code
	* src/encode (dwg_encode_chains): fixed the handle swap code

2018-03-15  Reini Urban  <rurban@cpan.org>

	fix detected warnings
	duplicate decarations, unused variables,
	declaration after statement, ...

2018-03-15  Reini Urban  <rurban@cpan.org>

	fix SWIG_LIB windows newline
	* m4/ax_pkg_swig.m4: strip \r\n in SWIG_LIB

2018-03-15  Reini Urban  <rurban@cpan.org>

	probe for warn, mingw and valgrind
	* configure.ac: add many probes
	* src/Makefile.am: add @WARN_CFLAGS@
	* testsuite/testcases/Makefile.am: add @WARN_CFLAGS@, @VALGRIND_CHECK_RULES@
	* testsuite/xmlsuite/Makefile.am: add @VALGRIND_CHECK_RULES@
	* unit-testing/Makefile.am: add @WARN_CFLAGS@, @VALGRIND_CHECK_RULES@
	* .gitignore: adjust for m4 changes
	* m4/.placeholder: not longer needed.
	* m4/ax_append_compile_flags.m4: added.
	* m4/ax_append_flag.m4: added.
	* m4/ax_append_link_flags.m4: added.
	* m4/ax_check_compile_flag.m4: added.
	* m4/ax_check_link_flag.m4: added.
	* m4/ax_compile_check_sizeof.m4: added.
	* m4/ax_compiler_flags.m4: added.
	* m4/ax_compiler_flags_cflags.m4: added.
	* m4/ax_compiler_flags_gir.m4: added.
	* m4/ax_compiler_flags_ldflags.m4: added.
	* m4/ax_is_release.m4: added.
	* m4/ax_require_defined.m4: added.
	* m4/ax_valgrind_check.m4: added.

2018-03-15  Reini Urban  <rurban@cpan.org>

	add .appveyor.yml
	Tested at https://ci.appveyor.com/project/rurban/libredwg.
	This is optional, but can be used to create binary releases
	for windows/cygwin

2018-03-14  Reini Urban  <rurban@cpan.org>

	fix make distcheck
	* unit-testing/Makefile.am: add common.c to EXTRA_DIST,
	  fix AM_CFLAGS for make distcheck.

2018-03-14  Reini Urban  <rurban@cpan.org>

	doc: fill in some basics

2018-03-14  Reini Urban  <rurban@cpan.org>

	libredwg.la: direct -lm dependency
	* src/Makefile.am: add -lm to libredwg_la_LDFLAGS.
	* examples/Makefile.am: remove -lm from LDADD,
	  use LDADD not AM_LDFLAGS,
	  add -Wall to AM_CFLAGS.
	* testsuite/testcases/Makefile.am: remove -lm from LDADD.
	* testsuite/xmlsuite/Makefile.am: remove -lm from LDADD.
	* unit-testing/Makefile.am: remove -lm from LDADD.

2018-03-14  Reini Urban  <rurban@cpan.org>

	unit-testing/Makefile.am: add -lm
	for nan(). clang does not have it, only gcc

2018-03-14  Reini Urban  <rurban@cpan.org>

	configure.ac: whitespace

2018-03-14  Reini Urban  <rurban@cpan.org>

	use python_PYTHON.
        fixed make distcheck. See
        https://www.gnu.org/software/automake/manual/html_node/Python.html

2018-03-14  Reini Urban  <rurban@cpan.org>

	add a .travis.yml
	configured at https://travis-ci.org/rurban/libredwg/
	but you can clone and configure your own. it's optional.

2018-03-13  Reini Urban  <rurban@cpan.org>

	support rewrite as other version
	when encoding into another version than the original
	dwg version, check and ignore empty handles, and
	use empty strings, and numbers as default.

2018-03-13  Reini Urban  <rurban@cpan.org>

	build: make swig and dejagnu optional
	* Makefile.am: optional bindings and testsuite SUBDIRS.
	* testsuite/Makefile.am: optional testcases SUBDIRS.
	* configure.ac: export HAVE_DEJAGNU and HAVE_SWIG_PYTHON to automake.

2018-03-13  Reini Urban  <rurban@cpan.org>

	fix swig with stdint.h
	* src/dwg.h: no SWIGIMPORTED for stdint.h.
	* bindings/python/Makefile.am (swig_wrap_python.c): remove
	  -I/usr/include.

2018-03-13  Reini Urban  <rurban@cpan.org>

	src/Makefile.am: cleanup
	* src/Makefile.am: minor cleanup, no changes.

2018-03-13  Reini Urban  <rurban@cpan.org>

	Fix bit_write_4BITS
	* src/bits.c (bit_write_4BITS): fix implementation.
	* testsuite/testcases/bits_test.c: enhance tests a bit, print the
	  failing result, no functional changes.

2018-03-13  Reini Urban  <rurban@cpan.org>

	fix testcases/lwpline
	* testsuite/testcases/lwpline.c: fix flags type

2018-03-13  Reini Urban  <rurban@cpan.org>

	testcases: fix wrong float
	* testsuite/testcases/arc.c,
	  testsuite/testcases/attdef.c,
	  testsuite/testcases/attrib.c,
	  testsuite/testcases/circle.c,
	  testsuite/testcases/ellipse.c,
	  testsuite/testcases/line.c,
	  testsuite/testcases/minsert.c,
	  testsuite/testcases/mline.c,
	  testsuite/testcases/mtext.c,
	  testsuite/testcases/point.c,
	  testsuite/testcases/polyline_2d.c,
	  testsuite/testcases/shape.c,
	  testsuite/testcases/solid.c,
	  testsuite/testcases/text.c,
	  testsuite/testcases/tolerance.c,
	  testsuite/testcases/trace.c: change float to  BITCODE_BD

2018-03-13  Reini Urban  <rurban@cpan.org>

	work on testsuites
	on macports with make check PYTHON=/opt/local/bin/python2.7

2018-03-13  Reini Urban  <rurban@cpan.org>

	examples/alive.test: TODO the rewrite tests
	until we can fix them

2018-03-13  Reini Urban  <rurban@cpan.org>

	python: depend on src/dwg.h
	* bindings/python/Makefile.am: depend on src/dwg.h, add
	  -I/usr/include for stdint.h

2018-03-13  Reini Urban  <rurban@cpan.org>

	WIP Start R_2013, R_2018 support, stricter types, ...
	add missing types, header variables, ...
	read and write  3B and BLL types, BLL: 64bit only.
	(this drops support for 32bit only, without uin64_t.
	maybe probe for that)

2018-03-12  Pero Brbora  <pbrbora@stud.unidu.hr>

	testsuite/testcases/endblk.c (api_process): Compare test values.

2018-03-12  Reini Urban  <rurban@cpan.org>

	dwg.spec: ANYCODE for parent, next, prev
	* src/common_entity_handle_data.spec: prev_entity may be 4 or 8,
	  prev_entity may be 4 or 6, change to ANYCODE.
	* src/dwg.spec: XRECORD whitespace

2018-03-12  Reini Urban  <rurban@cpan.org>

	dwg.spec: handle insert_count
	* src/decode.c, src/encode.c, src/print.c, src/dwg.spec:
	  add FIELD_INSERT_COUNT fixing print and encode of insert_count.
	  add FIELD_TRACE as separate helper.
	  add FIELD_HANDLE_N helper to print the actual vcount index.
	* src/encode.c (FIELD_HANDLE): add assertions and LOG_ERROR
	  when handle_code deviates
	  (HANDLE_VECTOR_N): add assertions.
	  (dwg_encode_add_object): change long unsigned int to unsigned long

2018-03-12  Reini Urban  <rurban@cpan.org>

	dwg.spec: layout_handle in BLOCK_HEADER is code 5

2018-03-12  Reini Urban  <rurban@cpan.org>

	xmlsuite: unsigned char* conversion
	* testsuite/xmlsuite/common.c: replace char with xmlChar as used in libxml2
	* testsuite/xmlsuite/testsuite.c: ditto

2018-03-12  Reini Urban  <rurban@cpan.org>

	fixup examples
	* examples/alive.test: rewrite needs two args
	* examples/rewrite.c: need USE_WRITE, fixup error message
	* examples/testsvg2.c: add log_if_error checks, add argv[1] check,
	    fix c99 block decl, fix handle returning a handle, not struct.
	* get_bmp.c: unsigned char* dwg_bmp

2018-03-12  Reini Urban  <rurban@cpan.org>

	fix dwg_api
	* src/dwg_api.{c,h}:
	  add missing checks for an empty 2nd arg
	  add missing return values in the error case.
	  LOG_ERROR

	  declare all accessors, fixing x86_64
	  E.g. fixing http://lists.gnu.org/archive/html/libredwg/2017-07/msg00000.html
	  caused by the wrong default type being added for the undeclared functions,
          capping pointers at 32bit.

	  change TV from unsigned char* to char*, only the internal
	  methods need to use unsigned char*. harmonized with the external field types.

	  changed *get_block_size accessors to return the natural unsigned
          long * type, not long *.

	  change API to return pointers, not structs for:
          dwg_obj_appid_get_appid_control, dwg_obj_get_handle,
          dwg_ent_insert_get_ref_handle

	* src/api.h, src/api.c: deleted
	* Makefile.am: add .c.i: and check-syntax emacs flymake targets

2018-03-11  Reini Urban  <rurban@cpan.org>

	[maint] Fix compilation errors and warnings
	* configure.ac: probe for malloc.h.
	* src/decode.c: global loglevel, static variable 'loglevel' is used in
	    an inline function with external linkage [-Wstatic-in-inline].
	  dwg_decode_handleref_with_code make global: [-Wstatic-in-inline].
	* src/encode.c: declare dwg_encode_handleref,
	  dwg_encode_handleref_with_code, dwg_encode_common_entity_handle_data,
	  dwg_encode_common_entity_handle_data: declare it as static.
	* src/dwg.c: fix various integer fmt types.
	  get_first_owned_object: error with Unsupported version.
	  get_next_owned_object: error with Unsupported version.
	  declare dwg_encode_chains.
	* src/dwg_api.c: check HAVE_MALLOC_H.
	* .gitignore: add TAGS.

2015-12-11  gaganjyot  <thegaganx@gmail.com>

	[Fix] Memory Errors

2015-03-29  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Remove "make-check"-generated .xml files from repo.
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Arc.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/ConstructionLine.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Donut.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Ellipse.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Helix.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Line.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Multiline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Point.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/PolyLine3D.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polygon.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polyline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/RAY.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Spline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Text.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2000/circle.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Arc.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/ConstructionLine.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Donut.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Ellipse.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Helix.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Line.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Multiline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Point.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/PolyLine3D.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polygon.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polyline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/RAY.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Spline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Text.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2004/circle.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Arc.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/ConstructionLine.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Donut.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Ellipse.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Helix.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Line.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Multiline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Point.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/PolyLine3D.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polygon.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polyline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/RAY.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Spline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Text.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2007/circle.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Arc.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/ConstructionLine.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Donut.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Ellipse.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Helix.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Line.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Multiline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Point.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/PolyLine3D.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polygon.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polyline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/RAY.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Spline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Text.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2010/circle.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Arc.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/ConstructionLine.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Donut.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Ellipse.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Helix.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Line.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Multiline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Point.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/PolyLine3D.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polygon.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polyline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/RAY.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Spline.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Text.xml
	* testsuite/xmlsuite/DWG/DWG-Files/2013/circle.xml: Delete file.

2015-03-29  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Remove another xmlsuite "make check"-generated file.
	* testsuite/xmlsuite/result.htm: Delete file.

2015-03-29  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Remove xmlsuite "make check"-generated files from repo.
	* testsuite/xmlsuite/test_output/2000/ConstructionLine.xml
	* testsuite/xmlsuite/test_output/2000/Donut.xml
	* testsuite/xmlsuite/test_output/2000/Ellipse.xml
	* testsuite/xmlsuite/test_output/2000/Helix.xml
	* testsuite/xmlsuite/test_output/2000/Line.xml
	* testsuite/xmlsuite/test_output/2000/Multiline.xml
	* testsuite/xmlsuite/test_output/2000/Point.xml
	* testsuite/xmlsuite/test_output/2000/PolyLine3D.xml
	* testsuite/xmlsuite/test_output/2000/Polygon.xml
	* testsuite/xmlsuite/test_output/2000/Polyline.xml
	* testsuite/xmlsuite/test_output/2000/RAY.xml
	* testsuite/xmlsuite/test_output/2000/Spline.xml
	* testsuite/xmlsuite/test_output/2000/Text.xml
	* testsuite/xmlsuite/test_output/2000/circle.xml
	* testsuite/xmlsuite/test_output/2004/Arc.xml
	* testsuite/xmlsuite/test_output/2004/ConstructionLine.xml
	* testsuite/xmlsuite/test_output/2004/Donut.xml
	* testsuite/xmlsuite/test_output/2004/Ellipse.xml
	* testsuite/xmlsuite/test_output/2004/Helix.xml
	* testsuite/xmlsuite/test_output/2004/Line.xml
	* testsuite/xmlsuite/test_output/2004/Multiline.xml
	* testsuite/xmlsuite/test_output/2004/Point.xml
	* testsuite/xmlsuite/test_output/2004/PolyLine3D.xml
	* testsuite/xmlsuite/test_output/2004/Polygon.xml
	* testsuite/xmlsuite/test_output/2004/Polyline.xml
	* testsuite/xmlsuite/test_output/2004/RAY.xml
	* testsuite/xmlsuite/test_output/2004/Spline.xml
	* testsuite/xmlsuite/test_output/2004/Text.xml
	* testsuite/xmlsuite/test_output/2004/circle.xml: Delete files.

2015-03-27  Thien-Thi Nguyen  <ttn@gnu.org>

	[v unit] Fix bug: Handle program invocation w/o args.
	* unit-testing/Makefile.am (TESTS_ENVIRONMENT): New var.
	* unit-testing/common.c (main): Don't blindly operate
	on ‘argv[1]’; instead, use the value of env var ‘INPUT’, if
	available, else print error message and exit failurefully.

2015-03-27  Thien-Thi Nguyen  <ttn@gnu.org>

	[dist] Fix bug: Also distribute example.dwg.
	* unit-testing/Makefile.am (EXTRA_DIST): New target.

2015-03-26  Pero Brbora  <pbrbora@stud.unidu.hr>

	[v xml] Fix bug: Avoid segfault: free only in non-error path.
	* testsuite/testcases/common.c (test_code):
	Don't call ‘dwg_free’ unconditionally; instead, call
	it only in the case where there are no errors.

2015-02-21  Thien-Thi Nguyen  <ttn@gnu.org>

	[boot] Bump minimal version of Automake to 1.12.2.
	* configure.ac (AM_INIT_AUTOMAKE): ...here.

2015-02-20  Thien-Thi Nguyen  <ttn@gnu.org>

	[boot] Don't specify $(srcdir) explicitly.
	* bindings/python/Makefile.am (BUILT_SOURCES): Remove ‘$(srcdir)/’.
	(swig_wrap_python.c): Rename target from ‘$(srcdir)/swig_wrap_python.c’.

2015-02-20  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Add unit-testing/ to "make check" flow.
	* Makefile.am (SUBDIRS): Add unit-testing, immediately after src.
	* configure.ac (AC_CONFIG_FILES): Add unit-testing/Makefile.
	* unit-testing/Makefile: Delete file.
	* unit-testing/Makefile.am: New file.
	* unit-testing/.gitignore: New file.

2015-02-20  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Do testing serially.
	* configure.ac (AM_INIT_AUTOMAKE): Add option ‘serial-tests’.

2014-12-10  Thien-Thi Nguyen  <ttn@gnu.org>

	[maint] Remove site.exp files from repo.
	* testsuite/site.exp: Delete file.
	* testsuite/testcases/site.exp: Delete file.

2014-12-05  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Fix bug: Collapse individual tuple-item assignments.
	* testsuite/xmlsuite/check.py <top-level>:
	  Don't assign to ‘result[0]’ and ‘result[1]’ separately;
	  instead, assign a literal 2-tuple to ‘result’, once.

2014-12-04  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Make testsuite/testcases progs link against in-tree libredwg.la.
	* testsuite/testcases/Makefile.am
	  (LDADD): New var.
	  (AM_CFLAGS): Delete var.

2014-12-03  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Explicitly name testsuite/testcases support files.
	* testsuite/testcases/Makefile.am
	  (paired, unpaired): New vars.
	  (check_PROGRAMS): Use $(paired) and $(unpaired).
	  (EXTRA_DIST): Add example.dwg, vertex.mesh, common.c,
	  ole2frame.c; replace ‘check_PROGRAMS’ ref w/ ‘paired’.

2014-11-29  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Distribute testsuite/testcases support files.
	* testsuite/testcases/Makefile.am (EXTRA_DIST): New var.

2014-11-27  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Declare helper.py encoding.
	* testsuite/xmlsuite/helper.py:
	  Add Emacs-style ‘coding:’ comment as first line.

2014-11-26  Thien-Thi Nguyen  <ttn@gnu.org>

	[maint] Remove *.pyc files from repo.
	* testsuite/xmlsuite/check.pyc: Delete file.
	* testsuite/xmlsuite/helper.pyc: Delete file.

2014-11-26  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Streamline invocation of sub-program txttoxml.py.
	* testsuite/xmlsuite/Makefile.am (TESTS_ENVIRONMENT):
	  Also set env var ‘PYTHON’.
	* testsuite/xmlsuite/helper.py: Import ‘glob’.
	  (generatexml): Don't invoke txtgenerate.sh; instead, iterate the
	  invocation of program txttoxml.py over the list of */*.txt files.
	* testsuite/xmlsuite/DWG/DWG-Files/txttoxml.py: Do ‘chmod -x’.
	* testsuite/xmlsuite/DWG/DWG-Files/txtgenerate.sh: Delete file.

2014-11-23  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Use Python interpreter discovered by configure script.
	* testsuite/xmlsuite/Makefile.am (TESTS_ENVIRONMENT): New var.
	* testsuite/xmlsuite/check.py: Remove shebang; chmod -x.

2014-11-21  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Make xmlsuite data files non-executable.
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Arc.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Arc.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Arc.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Arc.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/ConstructionLine.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/ConstructionLine.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/ConstructionLine.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/ConstructionLine.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Donut.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Donut.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Donut.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Ellipse.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Ellipse.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Ellipse.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Helix.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Helix.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Helix.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Line.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Line.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Line.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Multiline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Multiline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Multiline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Point.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Point.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Point.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/PolyLine3D.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/PolyLine3D.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/PolyLine3D.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polygon.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polygon.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polygon.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polyline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polyline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Polyline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/RAY.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/RAY.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/RAY.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Spline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Spline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Spline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Text.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Text.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/Text.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/circle.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/circle.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2000/circle.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Arc.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Arc.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Arc.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/ConstructionLine.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/ConstructionLine.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/ConstructionLine.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Donut.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Donut.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Donut.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Ellipse.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Ellipse.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Ellipse.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Helix.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Helix.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Helix.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Line.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Line.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Line.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Multiline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Multiline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Multiline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Point.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Point.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Point.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/PolyLine3D.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/PolyLine3D.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/PolyLine3D.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polygon.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polygon.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polygon.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polyline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polyline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Polyline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/RAY.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/RAY.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/RAY.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Spline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Spline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Spline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Text.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Text.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/Text.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/circle.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/circle.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2004/circle.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Arc.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Arc.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Arc.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/ConstructionLine.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/ConstructionLine.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/ConstructionLine.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Donut.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Donut.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Donut.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Ellipse.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Ellipse.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Ellipse.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Helix.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Helix.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Helix.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Line.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Line.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Line.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Multiline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Multiline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Multiline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Point.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Point.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Point.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/PolyLine3D.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/PolyLine3D.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/PolyLine3D.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polygon.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polygon.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polygon.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polyline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polyline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Polyline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/RAY.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/RAY.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/RAY.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Spline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Spline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Spline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Text.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Text.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/Text.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/circle.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/circle.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2007/circle.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Arc.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Arc.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Arc.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/ConstructionLine.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/ConstructionLine.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/ConstructionLine.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Donut.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Donut.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Donut.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Ellipse.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Ellipse.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Ellipse.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Helix.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Helix.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Helix.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Line.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Line.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Line.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Multiline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Multiline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Multiline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Point.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Point.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Point.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/PolyLine3D.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/PolyLine3D.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/PolyLine3D.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polygon.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polygon.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polygon.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polyline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polyline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Polyline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/RAY.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/RAY.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/RAY.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Spline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Spline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Spline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Text.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Text.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/Text.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/circle.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/circle.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2010/circle.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Arc.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Arc.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Arc.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Arc.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/ConstructionLine.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/ConstructionLine.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/ConstructionLine.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/ConstructionLine.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Donut.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Donut.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Donut.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Donut.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Ellipse.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Ellipse.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Ellipse.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Ellipse.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Helix.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Helix.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Helix.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Helix.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Line.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Line.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Line.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Line.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Multiline.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Multiline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Multiline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Multiline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Point.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Point.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Point.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Point.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/PolyLine3D.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/PolyLine3D.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/PolyLine3D.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polygon.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polygon.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polygon.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polygon.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polyline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polyline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Polyline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/RAY.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/RAY.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/RAY.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/RAY.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Spline.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Spline.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Spline.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Spline.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Text.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Text.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/Text.txt:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/circle.bak:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/circle.dwg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/circle.jpg:
	* testsuite/xmlsuite/DWG/DWG-Files/2013/circle.txt: Do ‘chmod -x’.

2014-11-21  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Distribute xmlsuite support files.
	* testsuite/xmlsuite/Makefile.am (EXTRA_DIST):
	Add DWG, header.htm, helper.py, $(TESTS).

2014-11-19  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Use ‘LDADD’ and full libredwg.la filename.
	* testsuite/xmlsuite/Makefile.am (LDADD): Rename from
	  ‘AM_LDFLAGS’; specify explicit location of libredwg.la.

2014-11-16  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Don't forget to distribute common.c.
	* testsuite/xmlsuite/Makefile.am (EXTRA_DIST): Add common.c.

2014-11-16  Thien-Thi Nguyen  <ttn@gnu.org>

	[v] Don't forget to distribute suffix.c.
	* testsuite/xmlsuite/Makefile.am (EXTRA_DIST): New var.

2014-10-22  Thien-Thi Nguyen  <ttn@gnu.org>

	[build] Determine libxml2 flags at configure time.
	* configure.ac <checks for libraries>:
	  Don't use ‘AC_CHECK_LIB’; instead, call ‘PKG_CHECK_MODULES’
	  for ‘libxml-2.0’ and update error message to mention that directly.
	  (XML2_CFLAGS, XML2_LIBS): New AC_SUBST.
	* testsuite/xmlsuite/Makefile.am (LIBXML): Delete var.
	  (AM_CPPFLAGS): New var.
	  (AM_CFLAGS): Move everything except ‘-g’ to...
	  (AM_LDFLAGS): ...this new var, and use $(XML2_LIBS).

2014-10-22  Thien-Thi Nguyen  <ttn@gnu.org>

	[build] Make configure script check for pkg-config(1).
	* configure.ac <checks for programs>: Call ‘PKG_PROG_PKG_CONFIG’.

2014-08-18  Piyush  <achyutapiyush@gmail.com>

	Tweaking

2014-08-18  Piyush  <achyutapiyush@gmail.com>

	Removing binaries

2014-08-18  Piyush  <achyutapiyush@gmail.com>

	Final Commit

2014-08-18  Piyush  <achyutapiyush@gmail.com>

	Tweaking

2014-08-18  Piyush  <achyutapiyush@gmail.com>

	Tweaking

2014-08-18  Piyush  <achyutapiyush@gmail.com>

	Updating Doxygen File

2014-08-18  Piyush  <achyutapiyush@gmail.com>

	DOcumentation Updated

2014-08-16  Piyush  <achyutapiyush@gmail.com>

	Improved code formatting

2014-08-16  Piyush  <achyutapiyush@gmail.com>

	DOcumentation Updated

2014-08-16  Piyush  <achyutapiyush@gmail.com>

	Added dependencies. Integrated everything

2014-08-15  Piyush  <achyutapiyush@gmail.com>

	CLeaning

2014-08-14  Piyush  <achyutapiyush@gmail.com>

	Updated Tests

2014-08-13  Piyush  <achyutapiyush@gmail.com>

	Moved to testsuite folder

2014-08-11  Piyush  <achyutapiyush@gmail.com>

	Intregating xmlsuite

2014-08-10  Piyush  <achyutapiyush@gmail.com>

	Updating testsuite

2014-08-09  Piyush  <achyutapiyush@gmail.com>

	Removing unit tests folder

2014-08-07  Piyush  <achyutapiyush@gmail.com>

	Updating files

2014-08-02  Piyush  <achyutapiyush@gmail.com>

	Updated tests

2014-07-31  Piyush  <achyutapiyush@gmail.com>

	Tests for bits.c

2014-07-17  Piyush  <achyutapiyush@gmail.com>

	Moved it to xmlsuite folder for now

2014-07-17  Piyush  <achyutapiyush@gmail.com>

	Test suite with first unit test

2014-07-17  Piyush  <achyutapiyush@gmail.com>

	Moving the XML suite to different folder for now

2014-06-27  Piyush  <achyutapiyush@gmail.com>

	Commit the sample DWG files needed for test suite

2014-06-27  Piyush  <achyutapiyush@gmail.com>

	Removed the Previous DWG Files
	The files were not completely committed and there was error in it. So removed and will add the same files in the next commit

2014-06-27  Piyush  <achyutapiyush@gmail.com>

	Adding the dependent files

2014-06-27  Piyush  <achyutapiyush@gmail.com>

	Adding python script which will generate %age

2014-06-13  Piyush  <achyutapiyush@gmail.com>

	Adding Initial Files

2014-04-13  gaganjyot  <thegaganx@gmail.com>

	API Merge with clean doc folder

2014-04-12  Rodrigo Rodrigues da Silva  <rsilva@metamaquina.com.br>

	[r] ignore Object_Ref resolving when handle is null

2013-09-24  gaganjyot  <thegaganx@gmail.com>

	Documentation updated, Comments added

2013-09-24  gaganjyot  <thegaganx@gmail.com>

	Documentation updated, Comments added

2013-09-23  gaganjyot  <thegaganx@gmail.com>

	Documentation added

2013-09-20  gaganjyot  <thegaganx@gmail.com>

	Comments added, Make clean target for unit testing

2013-09-19  gaganjyot  <thegaganx@gmail.com>

	Comments added

2013-09-18  gaganjyot  <thegaganx@gmail.com>

	check target for unit tests

2013-09-18  gaganjyot  <thegaganx@gmail.com>

	api -> dwg_api

2013-09-18  gaganjyot  <thegaganx@gmail.com>

	removed api.c error from testsvg2.c

2013-09-18  gaganjyot  <thegaganx@gmail.com>

	library with unit-testing

2013-09-17  gaganjyot  <thegaganx@gmail.com>

	complete unit testing with makefile

2013-09-16  gaganjyot  <thegaganx@gmail.com>

	entity functions uncommented

2013-09-15  gaganjyot  <thegaganx@gmail.com>

	unit tests added with comments

2013-09-14  gaganjyot  <thegaganx@gmail.com>

	updated comments for unit tests

2013-09-13  gaganjyot  <thegaganx@gmail.com>

	unit tests added

2013-09-11  gaganjyot  <thegaganx@gmail.com>

	More unit tests added

2013-09-01  gaganjyot  <thegaganx@gmail.com>

	added more unit tests

2013-08-31  gaganjyot  <thegaganx@gmail.com>

	added unit testing, improved testsvg

2013-08-24  gaganjyot  <thegaganx@gmail.com>

	Bugs fixed

2013-08-24  gaganjyot  <thegaganx@gmail.com>

	Bugs removed

2013-08-13  gaganjyot  <thegaganx@gmail.com>

	error in appid fixed

2013-08-01  gaganjyot  <thegaganx@gmail.com>

	Updated code and some comments,Removed un-necassary code

2013-07-31  gaganjyot  <thegaganx@gmail.com>

	code formatted, Minor bug fixes

2013-07-29  gaganjyot  <thegaganx@gmail.com>

	New SVG Converter, Without low level access

2013-07-29  gaganjyot  <thegaganx@gmail.com>

	New SVG converter using the API, Added extra functions for objects and reference object

2013-07-29  gaganjyot  <thegaganx@gmail.com>

	Added extra functions for object, reference and block_header, New SVG converter

2013-07-28  gaganjyot  <thegaganx@gmail.com>

	Table entity support added

2013-07-27  gaganjyot  <thegaganx@gmail.com>

	added support for body, region, 3dsolid and vertex_pface_face with error reporting

2013-07-27  gaganjyot  <thegaganx@gmail.com>

	added support for mline, 3dface

2013-07-27  gaganjyot  <thegaganx@gmail.com>

	Added support for polyline2d, polyline3d, polyline_mesh and polyline_pface

2013-07-27  gaganjyot  <thegaganx@gmail.com>

	Added support for spline, lwpline, ole2frame and viewport

2013-07-26  gaganjyot  <thegaganx@gmail.com>

	added functions for leader, mtext, leader, shape, endblk

2013-07-26  gaganjyot  <thegaganx@gmail.com>

	Total Support For Dimensions with error reporting

2013-07-25  gaganjyot  <thegaganx@gmail.com>

	Updated error handling, added few functions for dimension ordinate

2013-07-24  gaganjyot  <thegaganx@gmail.com>

	Error reporting for all functions added

2013-07-24  gaganjyot  <thegaganx@gmail.com>

	support for error reporting in line,circle,arc

2013-07-23  gaganjyot  <thegaganx@gmail.com>

	More functions for entiies and objects, Comments updated

2013-07-22  gaganjyot  <thegaganx@gmail.com>

	Initial commit

2011-01-20  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[bind] Wrap Object_Data *object as array. Fixes #32186
	* bindings/dwg.i: use carrays.i to generate helper functions
	* examples/load_dwg.py: updated python example with correct usage of array

2011-01-20  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Added missing #ifdef switch to dwg_write_file()'s prototype

2011-01-19  Rob Vermaas  <rob.vermaas@gmail.com>

	use AX_SWIG_PYTHON_CPPFLAGS variable in stead of hardcoded /usr/include/python2.6

2011-01-05  Till Heuschmann  <theuschmann@gmail.com>

	[build] applied patch from Rob Vermaas <rob.vermaas@gmail.com>
	Thanks also to Timo VJ Lähde <timovj.lahde@gmail.com> for reporting this error.

	decode_r2007.c: Do not use sys/malloc.h include

2010-12-28  Till Heuschmann  <theuschmann@gmail.com>

	[r] Decode R2007 Metadata
	Decode Metadata including file header, page map, section map

	dwg.h: Add type for wide character strings
	decode_r2007.c: Decode Metadata

2010-12-27  Till Heuschmann  <theuschmann@gmail.com>

	[build] Add R2007 decoder

2010-12-27  Till Heuschmann  <theuschmann@gmail.com>

	[build] Add R2007 decoder
	decode_r2007.c: Source file for all functions that are only needed to decode R2007 files.

2010-10-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[r,w] Fixed typo in sentinel
	* common.c: second byte of DWG_SENTINEL_CLASS_END was typed "5L" instead of "5E"

2010-10-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[w] fixed header variables overflow
	* src/encode.c: fixed two-byte overflow after Header Variables section's CRC.

2010-10-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[w] Writing objects to bitstream correctly - or at least almost.
	* encode.c: fixed dwg_encode_chains() to call dwg_encode_add_objects() at the correct point, plus various fixes.

	It seems that some files are now written correctly to the bitstream. Although, unknown object types and objects with variable type (>500) are still skipped.
	I have also detected various situations in which the Header Variables and Classes sections of the new file are 2 bytes longer than the original file. Comparing both original and re-written files, I suspect that bit_write_CRC() is writing these two extra bogus bytes.

2010-10-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[api] fixed missing prototype in header
	* dwg.h: added missing dwg_write_file() function prototype

2010-10-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[w] Adding debug info to rewrite.c
	* rewrite.c: added debug messages

2010-10-05  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] Improve m4 quoting
	* configure.ac: according to Thien-Thi's suggestion at the mailing list, macro
	arguments are sorrounded by brackets to avoid confusion in case they become
	macros themselves.

2010-10-05  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[doc] Explain use of underscore
	* bindings/python/Makefile.am: explain _libredwg_la

2010-10-05  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[bind] Enhanced python example
	* examples/load_dwg.py: read file version and print object list.

2010-09-28  Ivan Radic  <ivnrdc@gmail.com>

	crc check on

2010-09-28  Ivan Radic  <ivnrdc@gmail.com>

	add return keyword

2010-09-28  Ivan Radic  <ivnrdc@gmail.com>

	correct function name

2010-09-28  Ivan Radic  <ivnrdc@gmail.com>

	correct field macros

2010-09-23  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	added missing .m4 file
	*m4/ax_python_devel.m4: required by AX_SWIG_PYTHON

2010-09-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] updated TODO list

2010-09-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] initial autotoolization of python bindings
	*configure.ac: add SWIG and Python macros
	*bindings/Makefile.am: new file, only points to bindings/python, don't know if
	 it is really necessary, but one day we'll have other bindings and it might be useful
	*bindings/python/Makefile.am: new file, generate wrapper and build python module
	*autogen.sh: add -I m4 flag
	*m4/ax*.m4: swig macros from Autotools archive

2010-09-20  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	added python example
	*examples/load_dwg.py: load a DWG file and print some data

2010-09-20  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[w] added dwg_add_object function
	*src/encode.c: added function that will call delegate object/entity encoding
	 function based on object type. Not sure if works yet since dwg_encode_chains
	 needs to be reviewed to call it at the correct point. Don't merge to trunk,
	 it barely builds.

2010-09-20  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	fixed wrong function prototypes
	*dwg.h: wrong function prototypes - detected by SWIG

2010-09-20  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[b] added python language bindings
	*bindings/dwg.i: SWIG interface to libredwg
	*bindings/python/Makefile: Makefile updated with target to generate wrapper
	 and build Python module (to be removed soon when I will integrate SWIG with
	 Autotools.
	*bindings/python/libredwgmodule.c: removed unnecessary wrapper. Wrapper is
	 automatically generated by SWIG.

2010-08-30  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	applied the patch from Rob Vermaas <rob.vermaas@gmail.com>
	* src/Makefile.am

2010-08-19  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	[w] encode_object now encode non-null stuff
	* src/encode.c

2010-08-18  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	[w] worked more on the dwg_encode_entity function
	* src/encode.c

2010-08-17  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	[w]quick fix in encode_entitys
	* src/encode.c

2010-08-16  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	encoding null objects (OxOO), for validate the file structure
	* src/encode.c

2010-08-13  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	[w]added common_entity_handle in encode.c
	* src/decode.c
	* src/encode.c
	* src/common_entity_handle_data.spec; new

2010-08-13  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[w] fixing handle encoding macros
	*src/encode.c: rewrote FIELD_HANDLE macro, removed dwg_encode_handleref*()

2010-08-10  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	[w] added some entry checking and usage warning for the rewrite.c test
	* examples/rewrite.c

2010-08-10  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[w] cleaning up handle encoding
	*src/encode.c: cleaned up dwg_encode_handleref, write supposedly existing ref->handleref

2010-08-10  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	cleaned the warnings during compiling
	* src/enode.c
	* src/decode.c
	* src/dwg.c

2010-08-09  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	cleaned a duplicated macro (XDICOBJHANDLE)
	* src/encode.c : 125

2010-08-09  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	added some macros and the encode_commom_entity_handle function
	* src/encode.c

2010-08-09  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	cleaned duplicated header
	* src/bits.c

2010-08-09  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] Fixed missing file header
	*src/header_variables.spec: added missing copyright header

2010-08-07  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	started to add some handle functions in encode (not fully working yet)
	* src/encode.c; func: macro FIELD_HANDLE,  dwg_encode_handleref_with_code,  dwg_encode_handleref

2010-08-02  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	minor changes in encode.c and rewrite.c
	* src/encode.c
	* examples/rewrite.c

2010-07-23  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	copy and pasted the header_variables spec on a header file and included it on the encode.c and decode.c
	*  src/encode.c;  changed
	*  src/decode.c;  changed
	*  src/header_variables.spec; added

2010-07-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[r] Fix typo in version codes array shape.
	* common.h (version_codes): Say "[8][7]", not "[7][8]".
	* common.c (version_codes): Likewise.

2010-07-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Rename configure.in to configure.ac.
	* configure.ac: Rename from configure.in.

2010-07-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Bump create-changelog version to "1.2".
	* build-aux/create-changelog (version): Bump to "1.2"; augment history.

2010-07-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Add create-changelog option ‘--copyright WHO’.
	* build-aux/create-changelog (copyright-notice): New defvar.
	<option parsing>: Set ‘copyright-notice’ if given ‘-c’ or ‘--copyright’.
	<output>: If set, append ‘copyright-notice’.

2010-07-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Direct create-changelog "Generating..." message to stderr.
	* build-aux/create-changelog (fso): Add docstring.
	Use ‘message’ to output "Generating...".

2010-07-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Filter ChangeLog entries with titles ending in "; nfc" (no dot).
	* build-aux/create-changelog: Filter entries with titles
	ending in "; nfc" (no dot) in addition to "; nfc." (with dot).

2010-07-21  Anderson Pierre Cardoso  <apierre.cardoso@gmail.com>

	added a test program for the write support. It loads a dwg file and try to rewrite it
	*  examples/rewrite.c

2010-07-21  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[r] Initial R2010 support
	*common.h: added R_2010 do version enum
	*common.c: added R2010 version string

2010-07-21  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[r] Fixing error in file structure decoding
	* src/decode.c: checking if links are present (now code complies to spec)

2010-07-07  acardoso  <apierre.cardoso@gmail.com>

	added compiling flag for enable write support (--enable-write), uncommented write functions and added a dwg_encoder_header_variables function

2010-06-07  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Fix Git portability bug: Use ‘--pretty=format:STR’.
	* build-aux/create-changelog: Use ‘--pretty-format:STR’
	instead of ‘--format=STR’, which is not yet widely supported.

2010-06-05  Till Heuschmann  <theuschmann@gmail.com>

	[admin] updating copyright notices

2010-04-28  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] updating file headers and copyright notices

2010-04-28  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] adding *~ pattern to .gitignore

2010-04-28  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] Update AUTHORS file

2010-03-15  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Mention Texinfo in HACKING.
	* HACKING (other tools): New section.

2010-03-14  Till Heuschmann  <theuschmann@gmail.com>

	[r] decode DICTIONARYWDLFT and PLACEHOLDER
        * src/decode.c: call decoding functions according to dxf class name
        * src/dwg.h: complete structs (Dwg_Object_DICTIONARYWDLFT,
        Dwg_Object_PLACEHOLDER)
        * src/dwg.spec: add decoding functions

2010-03-14  Till Heuschmann  <theuschmann@gmail.com>

	[r] decode Xrecord
        * src/decode.c: add function dwg_decode_xdata to decode arbitrary data streams
        * src/dwg.h: add the struct Dwg_Resbuf which represents a result buffer

2010-03-03  Till Heuschmann  <theuschmann@gmail.com>

	[r] read objects with fixed types
	* src/decode.c: decode LWPLINE, HATCH, XRECORD, LAYOUT when stored with fixed type
	* src/dwg.h: added values to Dwg_Object_Type
	* src/dwg.spec: fixed LAYOUT decoding (2004 only), fixed LWPLINE decoding
	* src/encode.c: added FIELD_2DD_VECTOR macro
	* src/print.c: added FIELD_2DD_VECTOR macro

2010-02-23  Till Heuschmann  <theuschmann@gmail.com>

	[r] fix Tolerance, View and Ucs decoding
	* src/dwg.h: new field origin (Dwg_Object_UCS)
	  change type of text_string to BITCODE_TV (Dwg_Entity_TOLERANCE)
	* src/dwg.spec: fixed decoding

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[dist] Arrange to also distribute file README-alpha.
	* README-alpha: New file.
	* Makefile.am (EXTRA_DIST): Add README-alpha.
	* README: Remove version, which is btw incorrect, from first line.

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] Arrange for automake to *not* AC_DEFINE `VERSION'.
	* configure.in (AM_INIT_AUTOMAKE): Specify `no-define'.
	* src/common.h (VERSION): No longer #undef this.

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] In configure.in, use one-arg AM_INIT_AUTOMAKE form.
	* configure.in (AM_INIT_AUTOMAKE): Use one-arg form.

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[dist] Update Makefile.am EXTRA_DIST vars.
	* examples/Makefile.am (EXTRA_DIST): Add example.dwg, suffix.c, $(TESTS).
	* src/Makefile.am (EXTRA_DIST): Add dwg.spec, logging.h; remove example.dwg.

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test] Avoid segfault in testSVG.
	* examples/testSVG.c (output_BLOCK_HEADER):
	If `ref->obj->tio.object' is NULL, say so
	to stderr and skip the "<g>..</g>" output.

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build doc] Add texinfo for LibreWDG manual plus infrastructure.
	* doc/LibreDWG.texi: New file.
	* doc/fdl.texi: New file.
	* doc/Makefile.am: New file.
	* configure.in (AC_CONFIG_FILES): Add doc/Makefile.
	* Makefile.am (SUBDIRS): Add doc.

2010-02-23  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[admin] updating TODO file; nfc
	*TODO: remove tasks already done, added new tasks and updated others

2010-02-23  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	[r] fix 3dsolid decoding
	* src/dwg.h: new field for 3dsolid (ACIS_empty_bit)
	* src/dwg.spec: fixed decoding of fields

2010-02-22  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	[r] deobfuscate SAT data from 3dsolid objects
	* src/dwg.spec: de-obfuscation routine
	* src/dwg.h: a new unsigned char* field for storing the raw SAT data

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test] Add "make check" support plus aliveness test.
	* examples/Makefile.am (TESTS_ENVIRONMENT, TESTS): New vars.
	* examples/alive.test: New file.
	* README (Building and installing the library): Mention "make check".
	* .gitignore: Update ignorance; nfc.

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test] Don't hardcode input/output file names; require `argv[1]'.
	* examples/suffix.c: New file.
	* examples/dwg_ps.c: #include "suffix.c".
	(INPUT_FILE, OUTPUT_FILE): Delete #define:s.
	(main): Use `REQUIRE_INPUT_FILE_ARG', `suffix'.
	* examples/get_bmp.c: #include "suffix.c".
	(INPUT_FILE, OUTPUT_FILE): Delete #define:s.
	(get_bmp): Use `suffix'.
	(main): Use `REQUIRE_INPUT_FILE_ARG'.
	* examples/load_dwg.c: #include "suffix.c".
	(INPUT_FILE): Delete #define.
	(main): Use `REQUIRE_INPUT_FILE_ARG'.
	* examples/test.c: #include "suffix.c".
	(main): Use `REQUIRE_INPUT_FILE_ARG'.
	(FILENAME): Delete #define.
	(test_dwg_c): Don't bother with NULL `filename'.
	* examples/testSVG.c: #include "suffix.c".
	(main): Use `REQUIRE_INPUT_FILE_ARG'.
	(FILENAME): Delete #define.
	(test_SVG): Don't bother with NULL `filename'.

2010-02-23  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[C test] Make sure `main' returns 0 or 1.
	* examples/dwg_ps.c (main): Specify type of return value.
	On failure to read dwg file, return 1.
	* examples/test.c (test_dwg_c): Clamp return value to 0 or 1.
	* examples/testSVG.c (test_SVG): Likewise.

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test build] Check for pslib; build examples/dwg_ps only if present.
	* configure.in: Add checks for function `PS_open_file'
	in libps, and header file "libps/pslib.h".
	(HAVE_LIBPS): New AM_CONDITIONAL.
	* examples/Makefile.am (check_PROGRAMS): Remove `dwg_ps'.
	[HAVE_LIBPS] Add `dwg_ps' to `check_PROGRAMS'.
	[HAVE_LIBPS] (dwg_ps_SOURCES, dwg_ps_LDADD):
	Move these variables inside this conditional block.
	* README: Mention pslib non-critical requirement.

2010-02-22  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	[r] fix 3dsolid parsing segfault
	* src/dwg.h: block_size is now a vector
	* src/dwg.spec: store the values of block_size for each sat_data block

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test build] Factor common LDFLAGS for examples/.
	* examples/Makefile.am (AM_LDFLAGS): New var.
	(test_LDADD, load_dwg_LDADD, get_bmp_LDADD): Delete vars.
	(testSVG_LDADD, dwg_ps_LDADD): From these vars, remove `-lredwg'.

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[test build] Enable builddir!=srcdir operation in examples/.
	* examples/Makefile.am (AM_CFLAGS): Use $(top_srcdir), not "..".

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build w] Add runtime tracing support for write (encode) path.
	* src/encode.c: #include <stdbool.h>.
	(loglevel): Change type to `unsigned int'.
	[USE_TRACING] (DWG_LOGLEVEL): New #define.
	[USE_TRACING] (env_var_checked_p): New static var.
	(dwg_encode_chains) [USE_TRACING]: Before starting,
	set the logging level, but only do so once.

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build r] Add runtime tracing support for read (decode) path.
	* src/decode.c: #include <stdbool.h>.
	(loglevel): Change type to `unsigned int'.
	[USE_TRACING] (DWG_LOGLEVEL): Move this into conditional
	block; change definition to be the variable `loglevel'.
	[USE_TRACING] (env_var_checked_p): New static var.
	(dwg_decode_data) [USE_TRACING]: Before starting,
	set the logging level, but only do so once.

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] Add preliminary "configure --enable-trace" support.
	* configure.in (trace): New AC_ARG_ENABLE.  If specified
	on the configure command-line, do AC_DEFINE([USE_TRACING]).

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] Make every .c file #include "config.h".
	* src/common.h (VERSION): #undef it prior to re-#define.
	* src/bits.c: #include "config.h".
	* src/common.c: Likewise.
	* src/decode.c: Likewise.
	* src/dwg.c: Likewise.
	* src/encode.c: Likewise.
	* src/print.c: Likewise.

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] Move config.h into src/.
	* configure.in (AM_CONFIG_HEADER): Move to src/config.h; m4-quote.
	* .gitignore: Update ignorance.

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Rename directory build/ to build-aux/.
	* configure.in (AC_CONFIG_AUX_DIR): Change to `build-aux'; m4-quote.
	* HACKING: Update; nfc.
	* .gitignore: Update; nfc.

2010-02-22  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Make create-changelog handle command-line args GNUishly.
	* build/create-changelog (version): Bump to "1.1";
	use `defconst'; keep brief history in docstring.
	<options parsing>: Mention package affiliation in --version output;
	accept -s to mean --since;
	throw error on missing arg for --since;
	no longer accept unadorned arg as output FILENAME;
	instead recognize --output (-o) FILENAME.
	Suggested by Rodrigo Rodrigues da Silva.

2010-02-21  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Rename create-changelog.el to create-changelog.
	* build/create-changelog: Rename from build/create-changelog.el.
	  Update help text to be implementation-agnostic.
	* HACKING: Update.

2010-02-20  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Add script to create ChangeLog from "git log" output.
	* build/create-changelog.el: New file.
	* HACKING (change log maintenance): Update.

2010-02-19  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[admin] Add a program to create/publish pre-regenerated tarballs.
	* build/snap.GNUmakefile: New file.
	* build/.placeholder: Delete file -- no longer necessary.
	* .gitignore: Update ignorance.

2010-02-18  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] Add ACLOCAL_AMFLAGS to top-level Makefile.
	* Makefile.am (ACLOCAL_AMFLAGS): New var.

2010-02-18  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] Remove spurious AC_SUBST.
	* configure.in (VERSION): Delete AC_SUBST.

2010-02-18  Thien-Thi Nguyen  <ttn@gnuvola.org>

	[build] Add autogen.sh; delete generated files.
	* autogen.sh: New file.
	* build/.placeholder: Likewise.
	* m4/.placeholder: Likewise.
	* INSTALL: Delete file.
	* Makefile.in: Likewise.
	* acinclude.m4: Likewise.
	* aclocal.m4: Likewise.
	* build/config.guess: Likewise.
	* build/config.sub: Likewise.
	* build/depcomp: Likewise.
	* build/install-sh: Likewise.
	* build/ltmain.sh: Likewise.
	* build/missing: Likewise.
	* config.h.in: Likewise.
	* configure: Likewise.
	* examples/Makefile.in: Likewise.
	* src/Makefile.in: Likewise.

2010-02-15  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	fixing version detection for iterator methods

2010-02-11  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	changing my email address on file headers

2010-02-11  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	implement version dependent iterator for owned obects of a BLOCK_HEADER

2010-02-11  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	resolve object references after parsing r2004 and r2007 files

2010-02-11  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	check if some pointers are not null

2010-02-10  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	fix bugs in description of two objects of the spec: SORTENTSTABLE and LEADER were wrongly described

2010-02-06  Till Heuschmann  <theuschmann@gmail.com>

	Fixed confusions in DIMSTYLE decoding

2010-02-01  unknown  <tiu@.(none)>

	Improved R2004 header parsing. Read variables, handles, objects

2010-01-29  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Partially fixed bug #28681, common entity handle data parsed correctly

2010-01-29  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Added macro created print functions, made some functions private, increased logging trying to fix objectrefs

2010-01-27  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Logging test

2010-01-27  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Refactoring log messages: encode.c

2010-01-27  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Refactoring log messages: dwg.c

2010-01-27  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Refactoring log messages: bits.c and decode.c

2010-01-20  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	New logging infrastructure. printf's still need to be refactored
	Signed-off-by: Rodrigo Rodrigues da Silva <pitanga@members.fsf.org>

2010-01-19  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Integrating slightly modified patch #7057, file #19482, by James Michael DuPont <JamesMikeDuPont@googlemail.com>: reviewed typecasting to conform with C++ compiler's strict typechecking

2010-01-12  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Updating TODO

2009-12-25  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Created a TODO file, updated README

2009-12-25  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Created a TODO file

2009-12-24  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	renaming_variables_to_meet_GNU_coding_standards (NoCamelCaps\!)

2009-12-24  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Improved R2004 header parsing by Till Heuschmann <theuschmann@googlemail.com> (patch #7046) + Juca's fixes

2009-12-24  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	More API work. Fixed obvious bug in dwg_get_entities, but it still won't work.

2009-12-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Keep track of number of entities processed. More API work: dwg_get_entities, dwg_get_entity_count, dwg_get_entity_layer

2009-12-21  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Fixing dwg_get_layers bug found by Juca

2009-12-21  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	New API function, returns LAYER list

2009-12-21  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	adding NEWS file - required for GNU packages. We must always update this file prior to releases.

2009-12-21  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Fixing unchecked (loglevel) fprintf's (a few fprintf's left though) Keeping track of layers - initial support (new API function)

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	yes, I know it is a bit wrong, but it is just a test. I am still trying to figure out how to return a class instance from load_file

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	beginning to write a (still very simple) python binding for LibreDWG

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	Implement Encoder routine for VERTEX (2D) (10) description.

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	Partial implementation of SPATIAL_INDEX description.

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	changing name of macro from GET_FIELD to FIELD_VALUE (which makes more sense!)

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	Encoder and Decoder routines can be the same in IMAGE description.

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	REPEAT macro refactoring in IMAGE description -- by Rafael Moretti

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	REPEAT macro refactoring in LTYPE(57)

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	third and last iteration of REPEAT macro refactoring on MLINE(47) description. Thanks for support received from Rafael Moretti!

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	second iteration of REPEAT macro refactoring in MLINE(47) description

2009-12-19  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	first iteration of REPEAT macro refactoring in MLINE (47) description

2009-12-15  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	INSERT encoder

2009-12-15  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	dataflags handling are a responsibility of the user (client application)

2009-11-28  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	fix bug in SPLINE description

2009-11-28  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	using macros in SPLINE description

2009-11-28  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	using BITCODEs in header file

2009-11-27  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	_3dface encoder

2009-11-27  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	boilerplate with TODOs for unimplemented encoders

2009-11-27  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	LINE encoder

2009-11-26  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	now it compiles

2009-11-26  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	broken revision. unfinished refactoring towards write support

2009-11-25  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	starting to move dwg structures description to a dwg.spec file that can be used by both decode.c and encode.c (to avoid code replication)

2009-11-04  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Becoming a GNU package.

2009-11-04  Felipe Correa da Silva Sanches  <juca@members.fsf.org>

	updating my email to juca@members.fsf.org

2009-11-04  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding (C) notices to remaining files

2009-11-04  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Trying do debug XRECORD

2009-10-07  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[fixed] bug in bit_read_BS which lead to misinterpretation of raw unsigned chars

2009-09-26  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	updating README. Now in English.

2009-09-26  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Updating my e-mail in AUTHORS

2009-09-26  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	updating ChangeLog and removing useless files

2009-09-24  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	completed TABLE decoder. Needs testing.

2009-09-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	another chunk of TABLE decoder

2009-09-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	one more chunk of TABLE entity decoder

2009-09-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	another chunk of TABLE decoder

2009-09-22  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	another chunk of TABLE entity decoder

2009-09-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[new] Decoding of XRECORD object

2009-09-22  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	initial parsing of TABLE entity. Incomplete.

2009-09-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding missing handles

2009-09-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	* [new] adding log call to debug EED parsing * [fixed] adding 3D entities to object type switch

2009-09-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Reverting mistaken change from last revision.

2009-09-22  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Refactoring some entities

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fix a bug in the DICTIONARYVAR decoder that was due to a typo in the spec, I think.
	field str should be TV instead of BS

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	now dwg_decode_object and dwg_decode_entity functions return an error code so that we can avoid decoders when these functions fail but we can try to load the rest of the file.

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a list of websites that contain dwg files we are using to test our dwg parser

2009-09-21  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Removing deprecated print.{c,h}

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	implementing a bit more of HATCH decoder. not everything yet.

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a couple fixes for R14 based on parsing of this test file: ftp://geodetic.ncdenr.org/maps/yancey14.zip

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode SPATIAL_FILTER

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode SORTENTSTABLE

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode RASTERVARIABLES

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	partial implementation of PROXY decoder

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode IDBUFFER

2009-09-21  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a bit more of HATCH decoding. We need to implement a better REPEAT macro so that complex nested REPEAT structures are easier to decode

2009-09-20  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	partial implementation of decoder for HATCH

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode GROUP(72)

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode VIEWPORT_ENTITY_HEADER_CONTROL

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode DIMSTYLE(69)

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode DIMSTYLE_CONTROL(68) and DIMSTYLE(69)

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode APPID(67) and APPID_CONTROL(66)

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* decoding of VPORT(65) * implemented an extra (auxiliary) bitcode: BITCODE_4BITS

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* decode VPORT_CONTROL * added case entries for some objects (where their respective decoders are invoked)

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decoding of REGION/3DSOLID/BODY

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* update DWG_OBJECT and DWG_ENTITY macros so that they now include the function prototype declaration * I have sorted object/entity declarations inthe same order they appear in the spec and I also added comments stating object number or page number (where it is described in the spec) * Added boilerplate for the ones we did not implement yet.

2009-09-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	some adjustments in handling of model/page coordinates I am still not sure how does that work.

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode LAYER_INDEX

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode IMAGEDEFREACTOR

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode IMAGEDEF

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	remove a redundant printf

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	removing dwg_var_map(...) function which is not used anymore

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* removed old header variables parser * replaced it by a call to the new one

2009-09-18  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Refactoring entities ELLIPSE, SHAPE, TRACE, SOLID

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	bring back FIELD_T

2009-09-18  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Refactoring entities POINT, 3D_FACE, POLYLINE({PFACE,MESH})

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	implementation of a better header variables parser

2009-09-18  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	* Refactoring DIMENSION entities. * [fixed] issue #8

2009-09-18  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Changed bit_write_CMC to take a Dwg_Color* argument

2009-09-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	refactoring MTEXT(44)

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	suppress warning on FIELD_3DPOINT_VECTOR macro

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	"absolute_ref" instead of "handle"

2009-09-17  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	* Entities MLINETYPE and VP_ENT_HDR * Correct handleref.value parsing, now considering offset codes

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fix BLOCK_HEADER parsing bug due to lack of curly braces around HANDLE_VECTOR macro

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing bug in FIELD_VECTOR_N macro

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* bringging back some more lines of code that were mistakenly removed some revisions ago * use fprintf instead of sprintf

2009-09-17  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Translating: skt -> dwg and CKR -> CRC Fixing some mistakes made in header on previous commit due to translation (bitdouble and bitshort)

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* decoding UCS and UCS_CONTROL * bringing back code that pitanga mistakenly removed in his prior commit

2009-09-17  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Major translation effort. Seems to have been the last one.

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode VIEW and VIEW_CONTROL

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode LTYPE and LTYPE_CONTROL

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode SHAPEFILE and SHAPEFILE_CONTROL

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode LAYER_CONTROL

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode LAYER

2009-09-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	huge refactoring in SVG generator. Now symbols are stored in <defs> (we are using the BLOCK_HEADER handles)
	But I am still not sure about the correct procedure to select the entities that must be put inside a <g>.
	I tried to get all objects from first_entity until last_entity as they appear in the file, but that does not seem to be
	correct. What is the correct way to iterate over entities?

	R_2004+ provides a vector of handles pointing to everything that must go inside a <g>, but prior versions only tell us the
	1st and last entities.

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing the issue described on previous commit.

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	refactoring our code that handles handles. I have noticed that we are probably having leak issues here. But I still didn't detect exactly what is wrong. Handles are correctly parsed, but their values are corrupted before they are used by client code. Something is messing with our object_ref vector.

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	correct decoding of BLOCK_CONTROL.
	Now it will be possible to create <defs> section in SVG because BLOCK_CONTROL keeps handles of all BLOCK_HEADERS in the
	file and so we can loop these and read their BLOCKS and output one <g> for each simbol

	This commit totally ROCKS!!!

	hmmm! And we are in svn revision 256!!!! HAPPY HACKING! :-D

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* fix issue in R_2004 where xdicobjhandle might not be present in DICTIONARY * created a new macro XDICOBJHANDLE(code) * moved version macros to common.h

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	DICTIONARYVAR decoder

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LINE

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	CIRCLE

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	ARC

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	POLYLINE 3D

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	2D_POLYLINE

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	VERTEX_PFACE_PFACE

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	macros in VERTEX_*

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* disabling print module at all. Our macros are providing a much more consistent way of printing debbuging info. * refactoring VERTEX_2D

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fix bugs in INSERT and MINSERT due to typos in the spec

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more refactoring on INSERT and MINSERT

2009-09-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* refactoring attdef * boilerplate for dwg_encode_common_entity_handle_data and dwg_encode_handleref

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	refactored TEXT and ATTRIB

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LAYOUT decoding done

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	using DWG_OBJECT/DWG_ENTITY in the rest of the objects in decode.c

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	REFACTOR... REFACTOR... REFACTOR... !!!

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* fix FIELD_HANDLE macro. * a bit more refactoring

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more macro-based refactoring

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decoding macros now allow printing of values in verboso mode (loglevel>=2)

2009-09-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	using suffix TV instead of T to denote "text value bitcode"

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	INSERT/MINSERT refactoring using macros

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	using version macros

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more macro usage on decoder

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	using MACROS on dwg_decode_MLINE. This suggests the need of a LOOP macro...

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fix wrong escape code \N due to a typo

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* refactoring... * update on AUTHORS list

2009-09-14  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Refactoring to meet GNU code style (thanks to Eclipse's SHIFT+CTRL+F)

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	using DWG_OBJECT/DWG_ENTITY macros on more objects/entities

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	HANDLE_VECTOR macro REACTORS macro

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing segfault from my recent commits

2009-09-14  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding binaries and Makefiles to svn:ignore

2009-09-14  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding binaries and Makefiles to svn:ignore

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	HANDLE macro

2009-09-14  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding binaries and Makefiles to svn:ignore

2009-09-14  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Some translation

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	testing some experimental MACROS on decode_DICTIONARY

2009-09-14  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Handle parsing for missing entities (from 0 to 33)

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	using macro for entity UNUSED

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	now using the macro I introduced in previous commit

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	macro for entity decoder init

2009-09-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	adding macro to ease handle (Dwg_Object_Ref*) parsing

2009-09-13  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	adding an auxiliary function to check valid handle codes. Now we should use dwg_decode_handleref_with_code whenever possible instead of dwg_decode_handleref.

2009-09-13  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fix parsing of INSERT

2009-09-13  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	cones placement is broken. I am not sure what is the correct order of applying translate, scale and rotate transforms

2009-09-13  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	clones are partially working, but are misplaced and apparently not transformed yet

2009-09-13  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fix common entity data parsing

2009-09-13  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* more work towards clones * better organized debugging info output

2009-09-13  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more work towards clone feature (BLOCK/BLOCK_HEADER/INSERT)

2009-09-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	all log and error messages must be written to stderr

2009-09-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	The object handle should be stored in a single place: the Dwg_Object structure.
	Instead of 3 different places: DWG_Object, DWG_Object_Object and
	DWG_Object_Entity structures.

2009-09-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing sprintf(stderr, ... into fprintf
	initial implementation of compression codes

2009-09-11  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	partial implementation of the new handleref infrastructure with Dwg_Object_Ref pointers instead of a meaningless array of handles. The core work is done, although some segfaults are still annoying me. I haven't committed to trunk, but I wouldn't recommend working there since it may cause major conflicts. Any help to get this working right will be appreciated.

2009-08-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more verbose output for R2004 header parsing

2009-08-18  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	system section - R2004 header parsing

2009-08-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	implementing a bit more of the R_2004 header parsing

2009-08-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	sending verbose output to stderr

2009-08-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	avoiding a crash

2009-08-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	increasing size of vector so that it will be able to store all header variables for R_2007.

2009-08-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	number of header variables depends on DWG version...

2009-08-10  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	improving R2007 header parsing

2009-08-10  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	initial R2004 header parsing

2009-08-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	starting to implement R2007 header parsing

2009-08-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	bolerplate for future implementation of DWG R2004 and R2007 headers

2009-07-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	refactor unsupported version message allow it to try parsing versions prior to R_2000 but gives a warning message bout experimental support.

2009-07-03  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	print functions for DIMENSION entities + bug fix in DIMENSION structs

2009-06-26  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Dwg_Encode_DICTIONARY. It's an object, should check common object data encoding

2009-06-26  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	moving testSVG and test to examples. Thanks to Marcos.

2009-06-25  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	removing unnecessary (weird and wrong) checks

2009-06-25  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[fixed] warnings

2009-06-25  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	translation patch which has been held up for a while due to recently fixed bugs

2009-06-25  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	trying to fix the read_CMC issue that gcc was not able to warn us about... Pitanga will check whether it works for him with gcc 4.3.3. It didn't even break for me in gcc 4.2.4...

2009-06-25  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[fixed] missing decode_handleref() in dwg_decode_VIEWPORT

2009-06-24  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decoding of entity common data for all DWG versions

2009-06-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	Implemented initial support for blocks ("symbols") and "clones".
	SVG converter already correctly group drawing elements of a symbol (those between BLOCK_HEADER and ENDBLK) but cloning
	them is still not working because our current implementation of dwg_decode_handlerefs is wrong. The
	block_header_handle in an INSERT object is placed ***after*** "Common Entity Handle Data" section. So, cloning will
	only work after we fix the parsing of this section.

2009-06-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	trying to adjust paper size on exported SVG

2009-06-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing a bug in the encoding and decoding of DD (BitDouble with Default) Now we have perfect handling of lines. Yuppiiiiieeee!

2009-06-19  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	make switch consistent with new print (boilerplate) functions

2009-06-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	handling arcs in dwg2svg

2009-06-19  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	make switch consistent with new print (boilerplate) functions

2009-06-19  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	boilerplate code for print.c - TODO: complete switch with boilerplate functions

2009-06-19  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	print for VERTEX_{MESH,PFACE} and autoreconf to link math lib to testSVG

2009-06-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	adding TEXT support to our DWG2SVG converter

2009-06-15  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	dwg2svg: deal with circles, lines and arcs

2009-06-14  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	variable type-code handling + huge boilerplate code

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating stuff

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	decode OLE2FRAME + boilerplate code + spreadsheet update

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	CMC color read/write. Completed VIEWPORT encoding/decoding. (spreadsheet update)

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	reviewed SPLINE encoding/decoding (and spreadsheet update)

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	IMAGE encoding (and spreadsheet update)

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	IMAGE encoding (and spreadsheet update)

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LWPLINE encoding (and spreadsheet update)

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LWPLINE decoding (and spreadsheet update)

2009-06-12  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	OLE2FRAME struct (and spreadsheet update)

2009-06-11  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LWPLINE struct (and spreadsheet update)

2009-06-11  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	struct for IMAGE Entity

2009-06-08  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	updating copyright/licensing headers

2009-06-08  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	MLINE(47) encode/decode

2009-06-08  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Updating copyright notice

2009-06-08  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Some decode and encode fixing/cleaning + updated spreadsheet + updated copyright

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	TOLERANCE(46) decoding and encoding

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LEADER (45) encoding

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LEADER (45) decoding

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LEADER/TOLERANCE/MLINE boilerplate code

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	LEADER/TOLERANCE/MLINE boilerplate code

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	BLOCK_CONTROL r/w

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fix SPLINE decode segfault

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	ELLIPSE encode parser

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	VIEWPORT encode parser

2009-06-07  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	VIEWPORT decode parser

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	updating spreadsheet and adding some more boilerplate code

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	MTEXT decoding, encoding and printing

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	3DFACE encode --- must review this code

2009-06-06  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Structs for LEADER, TOLERANCE and MLINE

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	encoders for DIMENSION_* and POINT entities

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	DIMENSION LINEAR encode

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	do it the smart way. Duh\!

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	save the correct version code in DWG header

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing indentation

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	DIMENSION_ORDINATE encoding

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	boilerplate code: adding prototypes for every encoding functions,
        even the ones not implemented yet.

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	SHAPE(33) encode

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	SHAPE (32) encode

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	SOLID (31) encode

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	POLYLINE (MESH)(30) encode

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	POLYLINE_PFACE encode

2009-06-06  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	minor translations

2009-06-06  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding print labels to new supported entities

2009-06-06  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Read support for SOLID, SHAPE, TRACE and POLYLINE_PFACE/MESH
        entities. Minor code reviews.

2009-06-06  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Completing read support for DIMENSION entities. Minor code reviews.

2009-06-05  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding (draft) read support for 3D_FACE entity

2009-06-05  Diego Rabatone Oliveira  <diraol@polignu.org>

	Dimension Ordinate (pg.70/71) feita

2009-06-05  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating and starting to generalize object parsing to more
        versions of DWG. It needs a code review. It is an initial
        incomplete implementation.

2009-06-05  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Commenting out SPLINE parser due to segfault

2009-06-05  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding (draft) write support for many entities. Still needs some
        testing. Check "flag conditions" in some entities.

2009-06-05  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	implementation of multiversion LINE parser

2009-06-05  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	partial implementation of multiversion POLYLINE_2D and POLYLINE_3D parsers

2009-06-05  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	Legitaj valuej -> Read values

2009-06-04  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	partial implementation of multiversion MINSERT parser

2009-06-04  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	partial implementation of multiversion INSERT parser

2009-06-04  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	Ooooops! :-P

2009-06-04  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	multi-version parsing for ATTDEF (3)

2009-06-04  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	translate: largxeco -> width (couldn't resist the daily commit)

2009-06-04  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	implemented DWG version dependent parsing for ATTRIB (2)

2009-06-04  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	incorporating print functions for DICTIONARY and BLOCK_CONTROL
        (ported from libdwg svn revision 26)

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	adding decoding of Entity_BLOCK_CONTROL and Entity_DICTIONARY
        based on (ported from) recent libdwg svn commit

2009-06-03  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	added initial SPLINE decode support + indentation fix on dwg_decode_TEXT

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	implemented TEXT entity parsing for DWG R13 and R14

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	est -> ent

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	Traktilo -> Handle

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	*implementing version dependent behaviour for bit-thickness (read
        and write functions) *also (obviously) translating a bit more from
        Esperanto

2009-06-03  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	added structs for new entities: DIMENSION_* and SPLINE (no
        underlying code though)

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	adding R2000 dependent behaviour to the BitExtrusion write function

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more translation

2009-06-03  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	translate and add review fields (R2000 only) of structs - until
        LINE (19) (addition to last review accidentally not committed)

2009-06-03  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	translate and add review fields (R2000 only) of structs - until
        LINE (19)

2009-06-03  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Completing enum DWG_OBJECT_TYPE according to spec

2009-06-03  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more translation

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	cetero -> remainder

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	masko -> mask

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more translations

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	skalo -> scale

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	some translations

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	duaheader -> second_header

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	kiom -> size

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	bito -> bit

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* Moving print functions to a separate file
        * Making all print functions public in the API

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* add version field to the Bit_Chain data structure so that bit
        decoding routines can be aware of the current DWG version.
        * Used this information to implement the version dependent
        behaviour of BitExtrusion.

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a bunch of translations

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	NBEGINNATA => UNKNOWN fino => end

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	DUOHEAD => SECOND_HEADER

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating: ESTAJXO -> ENTITY ORDINARAJXO -> OBJECT

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	adding dwg_free(Dwg_Structure*); to free the dynamically allocated
        Dwg_Section vector

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate bajto -> byte

2009-06-02  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating some comments. removing the limit of only 6 sections
        in the file header. Added dynamic allocation of the vector of
        Dwg_Section structs.

2009-06-01  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	cleaning warnings due to ignored ret-value for fwrite calls

2009-06-01  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing linking of examples => -lredwg instead of -ldwg

2009-06-01  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[fix] for revision 59 (accidentally deleted aclocal)

2009-06-01  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Changing binary names from libdwg.{a,la,so} to libredwg.{a,la,so}
        to avoid conflicts between libdwg and libredwg; upgrading libtool
        macros

2009-06-01  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[translate] Estajxo -> Entity e Ordinarajxo -> Object

2009-06-01  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	incorporating libdwg recent commits:
        * an initial postscript generator
        * a DWG embedded thumbnail fetcher
        * some new public functions in the API to read document and
        drawing dimensions

2009-06-01  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	[NEW] Struct for Viewport Entity (34)

2009-06-01  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* generalized dwg_var_map so that it works for any DWG version.
        * implemented regression test to assure that it works at least for
        DWG version R2000

2009-05-31  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* preparing for broader compatibility of further DWG versions
        * throwing error messages to stderr instead of stdout

2009-05-31  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	usage of fprintf( stderr, "error message");

2009-05-31  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	add loglevel options for lib output

2009-05-31  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	incorporating patch from issue #1: simple test that outputs SVG
        content.

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate mesuro -> measurement

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate tipo -> type

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a bunch of translations

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a bunch of translations

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate grandeco -> size

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate varmapo -> var_map; mapo -> map

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate sentinel related terms

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate klaso -> class

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate numero -> number

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a bunch of translations

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate sekcio -> section

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate cxenigi -> chains

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate Objekto -> Object

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	a bunch of translations

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	End of a 'coding' session at pitanga's home. (translating: nomo ->
        name)

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating: kodo -> code

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	Comment regarding possible translations of 'gxisrandigo': 'snap'
        or 'trim'

2009-05-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Structs for SOLID, TRACE  and SHAPE \n end of coding night for me

2009-05-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Structs for POLYLINE PFACE and POLYLINE MESH

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate: teksto -> text

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate: adreso -> address

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate: regximo -> regime

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate: koloro -> colour

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate: alteco -> height

2009-05-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Struct for 3DFACE (28)

2009-05-30  Rodrigo Rodrigues da Silva  <pitanga@members.fsf.org>

	Adding dummy structs

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate: objekto -> object

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate:  radiuso -> radius  dikeco -> thickness

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translate forpusxigo -> extrusion

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating comments

2009-05-30  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	removing from repository

2009-05-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	... :-)

2009-05-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	Cxeno -> Chain

2009-05-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	cleaning the last warning!

2009-05-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	cleaning warnings

2009-05-23  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	warnings

2009-05-19  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	more translations

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating some comments and messages

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	OT_ => TYPE_ OST_ => SUPERTYPE_

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating some comments and NEUZATA => UNUSED

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	* adding encode.c to compile rules (Makefile*) and fixing compile
        of it.
        * translating: DVG => DWG

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating: dvg => dwg Dvg => Dwg

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	fixing 'make check'

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating:  malsukceso => error

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating:  dvg_dek_ => dwg_decode_

2009-05-17  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating... :-)

2009-05-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	translating:  dwg_read_file  dwg_write_file  Dwg_Structure

2009-05-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	removing not needed local files

2009-05-16  Felipe Corrêa da Silva Sanches  <juca@members.fsf.org>

	initial code based on libdwg (http://libdwg.sourceforge.net/en/index.html)

2009-05-16  Felipe Corrêa da Silva Sanches <juca@members.fsf.org>

	Initial directory structure.

----------
