#!/bin/bash
# dwg -> json
# json -> dwg2
# teigha dwg2 -> dxf just to confirm written DWG readability
v=-v4
case $1 in
    -v*)
        v="$1"
        shift
        ;;
esac
d="${1:-example_2000}"
b="$(basename "$d" .dwg)"
dir="$(dirname "$d")"
r="$(basename "$dir")"
exitcode=0

case $dir in
    *test/test-data)   ;;
    *test/test-data/*) b="${b}_${r}" ;;
    *td)               ;;
    *td/*)             b="${b}_${r}" ;;
    .)                 ;;
    *)                 b="${b}_${r}" ;;
esac
case $r in
    20*)      ;;
    r9)       r=9 ;;
    r11)      r=12 ;;
    r1[0234]) r=${r:1} ;;
    *)  case $b in
            *_20*)      r="${b:(-4)}" ;;
            *_r9)       r=9           ;;
            *_r11)      r=12          ;;
            *_r1[0234]) r="${b:(-2)}" ;;
            *_R20*)     r="${b:(-4)}" ;;
        esac      ;;
esac

# first create a dwg log to compare against
./log "$v" "$d"
mv "$b.log" "$b.log.orig"
rm "./$b.json" "./$b.dwg" 2>/dev/null

if ! ./json "$v" "$d"; then
    exit 2
fi
if [ -f "$b.json" ]; then
    if ! ./dwg -y "$v" "$b.json"; then
        exit 1
    fi
fi

if [ -f "$b.dwg" ]; then
    # teigha supports r9-r2018. r2.10: Unsupported early .dwg file version
    can_teigha=1
    case $(uname) in
        Darwin)  TeighaFileConverter=/Applications/ODAFileConverter.app/Contents/MacOS/ODAFileConverter ;;
        Linux)   TeighaFileConverter=/usr/bin/ODAFileConverter ;;
        Windows) TeighaFileConverter=ODAFileConverter ;;
        *)       can_teigha=0 ;;
    esac
    if [ ! -x "$TeighaFileConverter" ]; then
        case $(uname) in
            Darwin)  TeighaFileConverter=/Applications/TeighaFileConverter.app/Contents/MacOS/TeighaFileConverter ;;
            Linux)   TeighaFileConverter=/usr/bin/TeighaFileConverter ;;
            Windows) TeighaFileConverter=TeighaFileConverter ;;
        esac
    fi
    case $r in
        r2\.*)     can_teigha=0 ;;
        r1\.*)     can_teigha=0 ;;
    esac
    if [ -x "$TeighaFileConverter" ] && [ "$can_teigha" = "1" ]; then
        echo TeighaFileConverter . . "ACAD$r" DXF 0 1 "$b.dwg"
        $TeighaFileConverter . . "ACAD$r" DXF 0 1 "$b.dwg" >/dev/null 2>/dev/null
        if [ -e "./$b.dxf.err" ]; then
            mv "./$b.dxf.err" "$b.json.err"
            cat "$b.json.err"
            exitcode=1
        fi
    else
        rm "$b.json.err" 2>/dev/null
        if [ ! -x "$TeighaFileConverter" ]; then
            echo "(Teigha|ODA)FileConverter not installed"
        fi
    fi

    ./log "$v" "$b.dwg"
    log1="$b.log.orig"
    log2="$b.log"
    echo diff -bu "log1" "$log2"
    diff -bu "$log1" "$log2"

    test -f "$b.json.err"  && cat "$b.json.err"

    if [ -f "$log1" ] && [ -f "$log2" ]; then
        grep -E '^Add entity' "$log1" >"$log1.tmp"
        grep -E '^Add entity' "$log2" >"$log2.tmp"
        if diff -bu0 "$log1.tmp" "$log2.tmp" >/dev/null 2>/dev/null; then
            echo entities roundtrip ok
            rm "$log1.tmp" "$log2.tmp" 2>/dev/null
        else
            diff -bu0 "$log1.tmp" "$log2.tmp" | grep -v '^@@'
        fi
        grep -E '^Add object' "$log1" >"$log1.tmp"
        grep -E '^Add object' "$log2" >"$log2.tmp"
        if diff -bu0 "$log1.tmp" "$log2.tmp" >/dev/null 2>/dev/null; then
            echo objects roundtrip ok
            rm "$log1.tmp" "$log2.tmp" 2>/dev/null
        else
            diff -bu0 "$log1.tmp" "$log2.tmp" | grep -v '^@@'
        fi
    fi
fi
exit $exitcode
